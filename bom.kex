'Extract/Fn/Ft/Line'
Ftype = Ftype.1
If Ftype.1 \= 'ESY' & Ftype.1 \= 'EZT'
   Then Do
        'Emsg esy.kex: Extens∆o 'Ftype.1' n∆o permitida.'
        Exit
        End
'Set Point .MEND'
'Zone 1 5'
'/MEND /'
If Rc = 0
   Then Do
        'Emsg Macros n∆o devem ser diretamete traduzidas para COBOL'
        '.MEND'
        Exit
        End
'.MEND'
'Extract/Debugging'
If Debugging.1 = 'ON'
   Then 'Set Debugging Off'
Linesy = Line.1
Pgm = Fname.1

'Macro Profile'
'Set Reprofile Off'
'Set MsgMode Off'
'Set Wrap Off'
'Set LinEnd Off'
'Set Screen 1'
Void = Prep()
'/ TALLY /'
If Rc = 0
   Then Tally = 1
   Else Tally = 0
'Kedit 'Pgm'.cbl (NoMsg'
'QQuit'
Commands = 'FILE REPORT JOB SQL SORT Macro'
Files =''
Tables = ''
SQLs = 0
Jobs = 0
Printers = ''
Reports = ''
FileKeys = ''
MaxSeqLen = 0
MaxLineSize = 0
Version = '0.10'
SYSORT = DosEnv('SYSORT')
If SYSORT  = ''
   Then SYSORT  = 'WORKSDS'
SortLen = DosEnv('SORTLEN')
If DataType(SortLen) \= 'NUM'
   Then SortLen = 1024
'Erase 'Pgm'_esy$.occurs'
'Erase 'Pgm'_esy$.reps'
'Erase 'Pgm'_esy$.tab'
'Erase 'Pgm'_esy$.ren'
'Erase 'Pgm'_esy$.init'
'Erase 'Pgm'_esy$.starts'
'Erase 'Pgm'_esy$.comments'
'Kedit 'Pgm'.cbl (NoMsg'
'Del *'
'Macro Cobnew'
'Top'
'/ AUTHOR.'
If Rc = 0
  Then Do
       'Extract/CurLine'
       'Change/'Word(CurLine.3,2)'$/Traduzido de Easytrieve (macro esy.kex v.'Version')./1 1'
       End
Void = Hora()
'Top'
'/Describe the objectives of this program/'
If Rc = 0
   Then Do
        'Next'
        'Del /*****/'
        End
   Else Do
        'Set Point .Top'
        '/05 TECLA               PIC 9(003) VALUE 0. COPY CWKEYS./'
        If Rc = 0
           Then Do
                'Up 2'
                'Del 4'
                End
        '.Top'
        End
'/ ENVIRONMENT DIVISION./'
'/ FILE-CONTROL./'
'Next'
'Extract/CurLine'
If CurLine.3 = ''
   Then 'Replace       *'
'/WORKING-STORAGE SECTION./'
'Up'
'Input       *================================================================*'
'Next'
'Input       *================================================================*'
'Input        77  FILLER                     PIC  X(31)  VALUE'
"Input                                      'III WORKING-STORAGE SECTION III'."
'Input       *================================================================*'
'/LINKAGE SECTION./'
'Up'
'Input       *----------------------------------------------------------------*'
'Input       *        SUBPROGRAMAS                                            *'
'Input       *----------------------------------------------------------------*'
Void = Blank()
"Input        77  SB-CANCEL                     PIC  X(08)  VALUE '$CANCEL'."
"Input        77  SB-SC5CP                      PIC  X(08)  VALUE '$SC5CP'."
"Input        77  SB-EDIT                       PIC  X(08)  VALUE '$EDIT'."
Void = Blank()
If DosEnv('SC5CP') = 'ON'
   Then Do
        'Input       *----------------------------------------------------------------*'
        'Input       *-- VARIAVEIS PARA CHAMADA $SC5CP - VER AMBIENTE EXECUCAO        *'
        'Input       *----------------------------------------------------------------*'
        'Input        01  WRETCODE.'
        'Input            03 WRETC                      PIC  X.'
        'Input            03 WRETCSUB                   PIC  X.'
        'Input            03 WMACRO                     PIC  X(8).'
        'Input            03 WRC                        PIC  9(9)   COMP.'
        'Input            03 WRS                        PIC  9(9)   COMP.'
        "Input        01  WFUNCAO                       PIC  X(5)   VALUE 'AMB'."
        'Input        01  WDADOS.'
        'Input            03 WAMB                       PIC  X(3)   VALUE SPACES.'
        'Input            03 WCPUID                     PIC  X(4)   VALUE SPACES.'
        Void = Blank()
        End
'Input       *----------------------------------------------------------------*'
'Input       * CAMPOS DE DATA E HORA                                          *'
'Input       *----------------------------------------------------------------*'
Void = Blank()
'Input        01  WDATAAAMMDD.'
'Input            03 WDATAAA                    PIC  X(04)  VALUE SPACES.'
'Input            03 WDATAMM                    PIC  X(02)  VALUE SPACES.'
'Input            03 WDATADD                    PIC  X(02)  VALUE SPACES.'
Void = Blank()
'Input        01  WS-DATA-HORA.'
'Input            03  WS-DATACURRENT.'
'Input                05 WS-ANO-DATA            PIC  X(04)  VALUE SPACES.'
'Input                05 WS-MES-DATA            PIC  X(02)  VALUE SPACES.'
'Input                05 WS-DIA-DATA            PIC  X(02)  VALUE SPACES.'
'Input            03  WS-HORACURRENT.'
'Input                05 WS-HOR-HORA            PIC  X(02)  VALUE SPACES.'
'Input                05 WS-MIN-HORA            PIC  X(02)  VALUE SPACES.'
'Input                05 WS-SEG-HORA            PIC  X(02)  VALUE SPACES.'
'Input                05 WS-CEN-HORA            PIC  X(02)  VALUE SPACES.'
'Input        01  FILLER REDEFINES     WS-DATA-HORA.'
'Input            03  SYSDATE-LONG              PIC  9(008).'
'Input            03  FILLER REDEFINES SYSDATE-LONG.'
'Input                05 FILLER                 PIC  X(002).'
'Input                05 SYSDATE                PIC  9(006).'
'Input            03  SYSTIME                   PIC  9(008).'
Void = Blank()
'Input        01  WS-DATA-HORADISP.'
'Input            03  WS-DATADISP.'
'Input                05  WS-DIA-DISP           PIC  X(02)  VALUE SPACES.'
"Input                05  FILLER                PIC  X(01)  VALUE '/'."
'Input                05  WS-MES-DISP           PIC  X(02)  VALUE SPACES.'
"Input                05  FILLER                PIC  X(01)  VALUE '/'."
'Input                05  WS-ANO-DISP           PIC  X(04)  VALUE SPACES.'
"Input                05  FILLER                PIC  X(02)  VALUE SPACES."
'Input            03  WS-HORACURRENTP.'
'Input                05  WS-HOR-DISP           PIC  X(02)  VALUE SPACES.'
"Input                05  FILLER                PIC  X(01)  VALUE ':'."
'Input                05  WS-MIN-DISP           PIC  X(02)  VALUE SPACES.'
"Input                05  FILLER                PIC  X(01)  VALUE ':'."
'Input                05  WS-SEG-DISP           PIC  X(02)  VALUE SPACES.'
Void = Blank()
'Set Point .WSQL'
Void = Blank()
'Input       *----------------------------------------------------------------*'
'Input       **** VARIAVEIS DE CONTROLE DOS RELATORIOS                        *'
'Input       *----------------------------------------------------------------*'
Void = Blank()
'Input        01  WS-CONTROLE-RELATORIOS.'
'Input        02  WS-DISPLAYS.'
'Set Point .DISPLAYS'
'Input        02  WS-COMPACTADOS COMP-3.'
If Tally = 1
   Then Do
        'Input            03 TALLIES.'
        'Input               04 TALLY PIC  9(010) OCCURS 1.'
        End
Void = Blank()
'Set Point .EndVar'
'Input       *----------------------------------------------------------------*'
'Input       *        AREA DE VARIAVES AUXILIARES                             *'
'Input       *----------------------------------------------------------------*'
Void = Blank()
'Input        01  WS-VARIAVEIS.'
"Input            03 TRACOS                         PIC  X("LPad(121-Length(Pgm)-7)")    VALUE"
"Input               ALL '-'."
"Input            03 PGMID                          PIC  X("LPad(Length(Pgm)+2,3)")    VALUE"
"Input               '˚"Pgm".'."
'Input            03 WS-DISPLAY                     PIC  -ZZZ.ZZZ.ZZZ.ZZZ.ZZ9.'
Void = Blank()
'Set Point .EndSys'
'Input       *================================================================*'
'Input        01  FILLER                     PIC  X(32)  VALUE'
"Input                                      'FFF  FIM DAWORKING-STORAGE  FFF'."
'Input       *================================================================*'
'Input       *                                                                *'
'Input       *================================================================*'
'/ BEGIN. /|/ 000-INICIO.'
If Rc = 0
   Then Do
        'Up'
        'Extract/CurLine'
        If CurLine.3 = ''
           Then 'Replace       *                                                                *'
        'Next'
        'Del *'
        End
Void = NewSection('PRINCIPAL','ROTINA PRINCIPAL')
'Input            PERFORM RT-INICIAR'
Void = Blank()
'Input            PERFORM RT-PROCESSAR'
Void = Blank()
'Input            PERFORM RT-FINALIZAR'
Void = Blank()
'Input            MOVE ZEROS TO RETURN-CODE'
Void = Blank()
'Input            GOBACK.'
Void = Blank()
Void = NewSection('INICIAR','ROTINA DE INICIALIZACAO')
"Input            DISPLAY PGMID '001I ' FUNCTION WHEN-COMPILED"
If DosEnv('SC5CP') = 'ON'
   Then 'Input            PERFORM RT-OBTER-AMBIENTE'
'Input            PERFORM RT-OBTER-HORA'
Void = Blank()
"Input            DISPLAY PGMID '001I' TRACOS"
"Input            DISPLAY PGMID '001I- INICIO PROC: ' WS-DATA-HORADISP"
"Input            DISPLAY PGMID '001I' TRACOS"
'Set Point .START'
Void = Blank()
Void = NewSection('PROCESSAR','ROTINA PARA PROCESSAMENTO PRINCIPAL')
'Set Point .PROCESSAR'
'Set Point .JOBS'
If DosEnv('SC5CP') = 'ON'
   Then Do
        Void = NewSection('OBTER-AMBIENTE','OBTER AMBIENTE DE EXECUCAO DO 'Pgm)
        'Input            CALL SB-SC5CP USING WRETCODE WFUNCAO WDADOS'
        'Input       **      WABM   DES/HOM/PRD'
        "Input            IF WRETC  NOT = '0'"
        "Input               MOVE 'DES'              TO WAMB"
        'Input            END-IF.'
        Void = Blank()
        End
Void = NewSection('OBTER-HORA','ROTINA PARA OBTER DATA E HORA DO PROCESSAMENTO')
'Input            MOVE FUNCTION CURRENT-DATE(1:20)'
'Input                                        TO WS-DATA-HORA'
'Input            MOVE WS-ANO-DATA            TO WS-ANO-DISP'
'Input            MOVE WS-MES-DATA            TO WS-MES-DISP'
'Input            MOVE WS-DIA-DATA            TO WS-DIA-DISP'
'Input            MOVE WS-HOR-HORA            TO WS-HOR-DISP'
'Input            MOVE WS-MIN-HORA            TO WS-MIN-DISP'
'Input            MOVE WS-SEG-HORA            TO WS-SEG-DISP'
Void = Blank()
'Input            MOVE WS-ANO-DATA            TO WDATAAA'
'Input            MOVE WS-MES-DATA            TO WDATAMM'
'Input            MOVE WS-DIA-DATA            TO WDATADD.'
Void = Blank()
Void = NewSection('CANCELAR','ROTINA DE CANCELAMENTO')
"Input            DISPLAY PGMID '900I' TRACOS"
"Input            DISPLAY PGMID '900I- ESTATISTICA AUXILIAR PARA CANCEL'"
"Input            DISPLAY PGMID '900I' TRACOS"
'Set Point .CANCEL'
Void = Blank()
"Input            DISPLAY PGMID '900I' TRACOS"
Void = Blank()
"Input            CALL SB-CANCEL."
Void = Blank()
Void = NewSection('FINALIZAR','ROTINA DE FINALIZACAO DO PROGRAMA 'Pgm,'SC5LDIS2')
'Input            PERFORM RT-OBTER-HORA'
Void = Blank()
"Input            DISPLAY PGMID '999I' TRACOS"
"Input            DISPLAY PGMID '999I- FIM DE PROC: ' WS-DATA-HORADISP"
"Input            DISPLAY PGMID '999I' TRACOS"
"Input            DISPLAY PGMID '999I- ESTATISTICA DE PROCESSAMENTO'"
"Input            DISPLAY PGMID '999I' TRACOS"
'Set Point .FINISH'
"Input            DISPLAY PGMID '999I' TRACOS."
Void = Blank()
'Bot'
 "Set Point .SC5LDIS2"
'Kedit 'Pgm'.'Ftype
If Debugging.1 = 'ON'
   Then 'Set Debugging ON'
'Top'
File = ''
EsyLine = 0
EsyTop = 0
'Erase 'Pgm'_esy$.Security'
Do Forever
   Do Forever
      'Next'
      If Rc \= 0
         Then Do
              If File \= ''
                 Then File=Define(Pgm Commands,Ftype,File,'Macro',LrecL)
              EsyTop = '/*'
              Leave
              End
      'Extract/CurLine'
      Line = Upper(CurLine.3)
      First = Word(Line,1)
      If EsyLine \= 0
         Then Do
              EsyLine = EsyLine + 1
              Leave
              End
      If Substr(First,1,1) = '*'
         Then Do
              'Shift Right 6 1'
              Do Forever
                 'Extract/CurLine'
                 If Pos('*',CurLine.3) = 7 | Pos('*',CurLine.3) > 12
                    Then Leave
                 'Shift Left 1 1'
              End
              If Substr(CurLine.3,73,1) = '*'
                 Then Do
                      'Zone 73 *'
                      'Change/$//1'
                      'Zone 1 *'
                      'Extract/CurLine'
                      End
              Do Forever
                 'Extract/CurLine'
                 If Length(CurLine.3) < 73 Then Leave
                 If Substr(CurLine.3,Length(CurLine.3)-1,2) = ' *'
                    Then 'Replace 'Substr(CurLine.3,1,Length(CurLine.3)-2)'*'
                    Else Leave
              End
              'Put 1 'Pgm'_esy$.Security'
              'Del'
              'Up'
              EsyTop = EsyTop + 1
              End
         Else Do
              EsyLine = EsyTop
              Leave
              End
   End
   If EsyTop = '/*' Then Leave
   Last = Last(Line)
   If First = 'PARM' | Substr(First,1,1) = '%' | Substr(First,1,1) = '*'
      Then Void = Flag(Pgm,Ftype,Line)
      Else Do
           If File \= '' | First = 'DEFINE' | WordPos(Last,'A N P W S U B') \= 0
              Then Do
                   If First = 'COPY'
                      Then Do
                           'Set Point .Copy'
                           Copy = Translate(Word(Line,2),'_','-')
                           '.End_'Copy
                           'Up'
                           'Input <end-of-'Copy'>'
                           '.File_'Copy
                           'Next'
                           'Erase 'Pgm'_esy$.copy'
                           'Put /<end-of-'Copy'>/ 'Pgm'_esy$.copy'
                           '/<end-of-'Copy'>'
                           'Del'
                           '.Copy'
                           'Kedit 'Pgm'_esy$.copy (NoMsg'
                           'Less /˚/'
                           'Top'
                           'Shift Right 1 *'
                           Do Forever
                              'Next'
                              If Rc \= 0 Then Leave
                              'Extract/CurLine'
                              'Change/ 'Word(CurLine.3,1)' / 'File'-'Word(CurLine.3,1)' /*'
                           End
                           'FFile'
                           'Get 'Pgm'_esy$.copy'
                           'Erase 'Pgm'_esy$.copy'
                           '.Copy'
                           'Kedit 'file'_esy$.fd (NoMsg'
                           'Get 'Pgm'_'Copy'_esy$.fdw'
                           'FFile'
                           End
                    Else File=Define(Pgm Commands,Ftype,File,Line,LrecL)
                   End
              Else If First = 'SQL'
                      Then Do
                           Tables = Tables' 'SQL(Pgm,Ftype,SQLs)
                           SQls = SQLs + 1
                           End
                       Else If First = 'FILE'
                               Then Do
                                    File = File(Pgm Commands,Ftype,Line,Words(Printers))
                                    LrecL = Word(File,2)
                                    File = Word(File,1)
                                    If WordPos('PRINTER',Line) \= 0
                                       Then Printers=Printers' 'File
                                       Else Files=Files' 'File
                                    End
                               Else If First = 'JOB'
                                       Then Jobs = Job(Pgm Commands,Ftype,Line,Jobs)
                                       Else If First = 'REPORT'
                                               Then Do
                                                    SeqLen = Report(Pgm Commands,Ftype,Line,Words(Reports),SortLen,SYSORT,Tally)
                                                    LineSize = Word(SeqLen,2)
                                                    If LineSize > MaxLineSize
                                                       Then MaxLineSize = LineSize
                                                    SeqLen = Word(SeqLen,1)
                                                    Reports = Reports' 'Word(Line,2)
                                                    If SeqLen > MaxSeqLen
                                                       Then MaxSeqLen = SeqLen
                                                    End
                                               Else If  Last  = 'PROC'
                                                        Then Void = Proc(Pgm,Ftype,Jobs)
                                                        Else ToProc(Pgm,Ftype,Line)
           End
End
'Kedit 'Pgm'.cbl (NoMsg'
If MaxLineSize \= 0
   Then Void = Sys("03 BUFFER PIC  X("LPad(MaxLineSize,3)")  VALUE ZEROS.")
'Bot'
'Top'
'/LINKAGE SECTION./'
If Rc = 0
   Then Do
        'Del /PROCEDURE DIVISION/'
        'Up'
        'Put 1'
        'Next'
        'Get'
        End
'Top'
* Carga de tabelas e inclus∆o de definiá‰es °ndices
Do I = 1 To Words(Files)
   File = Word(Files,I)
   If Pos('>',File) = 1
      Then Do
           File = Substr(File,2)
           'Top'
           '/ SELECT 'File' /'
           If Rc = 0
              Then Do
                   '/ 'File' OCCURS/'
                   'Change/ 'File' / TABELA-'File' /1'
                   'Extract/CurLine'
                   Input='Input'Copies(' ',Pos('OCCURS',CurLine.3))
                   Occurs = Word(CurLine.3,4)
                   'Change/ 'Occurs'$/ 0 TO 'Occurs
                   Input'DEPENDING ON WS-LIDOS-'File
                   Input'INDEXED BY IND-'File'.'
                   '~/ FILLER /'
                   'Extract/CurLine'
                   '-/DEPENDING/'
                   Input'ASCENDING KEY 'Word(CurLine.3,2)
                   '/ OPEN INPUT 'File' /'
                   '/ PERFORM/'
                   'Input            ELSE'
                   'Input                PERFORM RT-'Word(Read(File,SYSORT,'CLOSEATEND'),1)
                   'Input                        UNTIL 'FL(File,10,'EOF')
                   'Input                SORT TABELA-'File' ON ASCENDING KEY'
                   'Input                     'Word(CurLine.3,2)' IN TABELA-'File
                   '/ RT-LER-'File' /'
                   '/  ADD 1 TO WS-LIDOS-'File' /'
                   'Input               IF  WS-LIDOS-'File' GREATER 'Occurs
                   'Input                   SET INDALT TO 'IndAlt('MSG1','RT-LER-'File,'ELEMENTOS DA TABELA 'File' EXCEDEM LIMITE DE 'Occurs'');IndAlt = Last()
                   'Input                   PERFORM RT-MONTA-MSG'
                   'Input               ELSE'
                   'Input                   MOVE REG-'File
                   'Input                     TO TABELA-'File'(WS-LIDOS-'File')'
                   'Input               END-IF'
                   End
              Else Do
                   '/ 'File' OCCURS/'
                   'Extract/CurLine'
                   Input='Input'Copies(' ',Pos('OCCURS',CurLine.3))
                   '~/ FILLER /'
                   'Extract/CurLine'
                   '-/ OCCURS /'
                   'Change/INDEXED$/ASCENDING KEY 'Word(CurLine.3,2)'/1'
                   Input'INDEXED BY IND-'File'.'
                   End
           End
      Else Do
           If Length(File) < 6
              Then File = Substr(File,1,6)
           Is = Copies(' ',Length(File)-6)'IS'
           File = Space(File)
           'Top'
           '/ SELECT 'File' ASSIGN /'
           'Set Point .Select'
           '/ FILE STATUS /'
           '-~/ ACCESS /'
           'Get 'File'_esy$.Index'
           If Rc = 0
              Then Do
                   'Erase 'File'_esy$.Index'
                   '-/ ORGANIZATION /'
                   'Change/ SEQUENTIAL / INDEXED /1'
                   If Rc \= 0
                      Then Do
                           '/ RECORD KEY /|/ STATUS /'
                           'Extract/CurLine'
                           If WordPos('=',CurLine.3) = 0 & WordPos('KEY',CurLine.3) \= 0
                              Then Do
                                   '/ RECORD KEY /'
                                   'Change/RECORD KEY   /ALTERNATE KEY/1'
                                   End
                           End
                      Else 'Input                   ACCESS MODE   'is' SEQUENTIAL'
                   '.Select'
                   '/ RECORD KEY /'
                   Do Forever
                      '/ = /|/ STATUS /'
                      'Extract/CurLine'
                      If WordPos('STATUS',CurLine.3) \= 0 Then Leave
                      KeyWords = Substr(CurLine.3,Pos('=',CurLine.3)+2)
                      'Change/=$/=/'
                      'Zone 'Pos(Word(CurLine.3,WordPos('IS',CurLine.3)+1),CurLine.3)' *'
                      Do K = 1 To Words(KeyWords)
                         'Input '
                         'Change/ /'Word(KeyWords,K)'/1'
                         If K = Words(KeyWords)
                            Then Do
                                 'Input '
                                 'Change/ /WITH DUPLICATES/1'
                                 End
                      End
                      'Zone 1 *'
                   End
                   End
           End
   'Erase 'Pgm'_'File'_esy$.fdw'
   'Erase 'File'_esy$.fd'
   'Erase 'File'_esy$.subprog'
End
* Includes de estruturas SQL
Includes = ''
Do I = 1 To Words(Tables)
   Table = Word(Tables,I)
   If WordPos(Table,Includes) = 0
      Then Do
           Includes = Includes' 'Table
           If Words(Includes) = 1
              Then Do
                   '/ EXEC SQL /'
                   '-/ *'
                   End
           'Input            EXEC SQL'
           'Input                 INCLUDE 'Table
           'Input            END-EXEC'
           Void = Blank()
           End
End

'Top'
Do Forever
   '/ FILE-STATU$($)$ZERO /'
   If Rc \= 0 Then Leave
   'Change/[ezt]/[   ]/1'
   'Extract/CurLine/'
   If Pos('*',First(Substr(CurLine.3,7))) \= 1
      Then Do
           Line = Translate(CurLine.3,'  ','()')
           File = Next('FILE-STATUS',Line)
           'Change/FILE-STATUS$NOT$ZERO /NOT ('FL(File,00,'OK')' AND NOT 'FL(File,02,'DUPALT')') /1'
           If Rc \= 0
              Then 'Change/FILE-STATUS$ZERO /('FL(File,00,'OK')' OR 'FL(File,02,'DUPALT')') /1'
           'Up'
           End
End

'Top'
Do Forever
   '/ EOF /'
   If Rc \= 0 Then Leave
   'Change/[ezt]/[   ]/1'
   'Extract/CurLine/'
   If Pos('*',First(Substr(CurLine.3,7))) \= 1
      Then Do
           Line = Translate(CurLine.3,'  ','()')
           File = Next('EOF',Line)
          'Change/ EOF$'file')/ 'FL(File,10,'EOF')'/1'
          If Rc \= 0
             Then 'Change/ EOF$'file' / 'FL(File,10,'EOF')' /1'
          'Up'
           End
End

'Top'
Singles = 'ELSE STOP end'
Sorts = 0
Displays = 199
Do Forever
   '/[ezt]/'
   If Rc \= 0 Then Leave
   Ponto = ''
   'Extract/CurLine'
   If Substr(First(Substr(CurLine.3,7)),1,1) = '*'
      Then Do
           If Substr(CurLine.3,7,1) \= '*'
              Then 'Change/???????/[   ] */1'
              Else 'Change/[ezt]/[   ]/1'
           'Extract/CurLine'
           Line = Substr(CurLine.3,7)
           End
      Else Do
           'Change/, / /1 *'
           'Extract/CurLine'
           If Substr(CurLine.3,Length(CurLine.3),1) = '.'
              Then Do
                   Ponto = '.'
                   CurLine.3 = Substr(CurLine.3,1,Length(CurLine.3)-1)
                   'Replace 'CurLine.3
                   End
           Line = Substr(CurLine.3,8)
           If Words(Line) = 1 & Pos('END-',Word(Line,1)) \= 1 & WordPos(Word(Line,1),Singles) = 0
              Then Do
                   'Change/[ezt]/[   ]/1'
                   Void = ClosPara()
                   If Word(Line,1) = 'PROC'
                      Then 'Del'
                      Else 'Replace [000]  'Word(Line,1)'.'
                   'Up'
                   Void = Blank()
                   End
           End
   If Word(Line,2) = 'EQ'
      Then Do
          'Change/ EQ / = / 1 1'
          'Extract/CurLine'
           Line = Substr(CurLine.3,12)
           End
   If Word(Line,2) = '=' & (Pos("'",Line) \= 0 | Pos('"',Line) \= 0)
      Then Do
           'Change/[ezt]/[   ]/1'
           'Change/'Word(Line,1)'$=/MOVE/1'
           'CAppend  TO 'Word(Line,1)
           End
   If Word(Line,2) = '=' & Pos("'",Line) = 0 & Pos('"',Line) = 0
      Then Do
           'Change/[ezt]/[   ]/1'
           If Words(Line) = 3
              Then Do
                   'Change/ 'Word(Line,1)' $/ MOVE 'Word(Line,3)' TO 'Word(Line,1)' /1 1'
                   'Change/ 0 / ZERO /1 1'
                   If WordPos( Word(Line,3),'SYSTIME SYSDATE SYSDATE-LONG') \= 0
                      Then Do
                           'Dup'
                           'Up'
                           'Change/MOVE$/PERFORM RT-OBTER-HORA/1 1'
                           'Next'
                           End
                   End
              Else Do
                   If Words(Line) = 5 & Word(Line,1) = Word(Line,3) & (WordPos('-',Line) = 4 | WordPos('+',Line) = 4)
                      Then Do
                           Val = Word(Line,5)
                           Op = Word(Line,4)
                           If Op = '+'
                              Then 'Change/'Word(Line,1)'$/ADD 'Val' TO 'Word(Line,1)'/1 '
                           If Op = '-'
                              Then 'Change/'Word(Line,1)'$/SUBTRACT 'Val' FROM 'Word(Line,1)'/1 '
                           End
                      Else 'Change/'Word(Line,1)'/COMPUTE 'Word(Line,1)'/1 1'
                   End
           'Change/,/@/1 *'
           'Change/./,/1 *'
           'Change/@/./1 *'
           End
   If Word(Line,1) = 'PERFORM'
      Then 'Change/[ezt]/[   ]/1'
   If Word(Line,1) = 'IF' | Word(Line,1) = 'WHEN' | Word(Line,1) = 'DO'
      Then Do
           'Change/[ezt]/[   ]/1'
           'Change/. / /1 *'
           Void = Logics()
           'Set Point .JobPoint'
           '-/ SECTION./|/AND MATCHED-/'
           'Extract/CurLine'
           If Pos('MATCHED-',CurLine.3) = 0
              Then JobNum = 000
              Else JobNum = Word(Translate(Word(CurLine.3,2),' ','-'),2)
           '.JobPoint'
           'Extract/CurLine'
           CurLine.3 = Substr(CurLine.3,7)
           Do I = 1 To Words(CurLine.3)
              Word = Word(CurLine.3,I)
              If WordPos(Word,Files) \= 0
                 Then 'Change/ 'Word' / 'FL(Word,00,'OK')' /1'
              If Word = 'MATCHED'
                 Then If I = Words(CurLine.3)
                         Then  'CAppend-'JobNum
                         Else Do
                              File = Word(CurLine.3,I+1)
                              'Change/ MATCHED $'File' / MATCHED-'JobNum'-'File' /1'
                              I = I + 1
                              End
           End
           'Extract/CurLine'
           PosEqual = WordPos('EQUAL',CurLine.3)
           If PosEqual \= 0 & Words(CurLine.3) > PosEqual + 1 & WordPos('AND',CurLine.3) = 0 & WordPos('OR',CurLine.3) = 0 & Pos('(',CurLine.3) = 0
              Then Do
                   Var = Word(CurLine.3,PosEqual-1)
                   Ors = DelWord(CurLine.3,1,PosEqual+1)
                   If Var = 'NOT'
                      Then Do
                           'Change/ NOT / /1 '
                           'Change/ IF / IF  NOT ( /1 '
                           'Extract/CurLine'
                           Close = ')'
                           End
                      Else Close = ''
                   'Change'Ors'1'
                   If WordPos('THRU',Ors) = 0
                      Then Do I = 1 To Words(Ors)
                              'Input 'Copies(' ',Pos(' EQUAL',CurLine.3)+3)'OR 'Word(Ors,I)
                           End
                      ELse Do I = 1 To Words(Ors)
                              Word = Word(Ors,I)
                              If Word = 'THRU'
                                 Then Do
                                      'Change/ EQUAL / NOT LESS /1'
                                      'Change/ 'Var' / ('Var' /1'
                                      'Input 'Copies(' ',Pos(' IF',CurLine.3))'AND 'Var' NOT GREATER 'Word(Ors,I+1)')'
                                      I = I + 1
                                      End
                                 Else 'Input 'Copies(' ',Pos(' IF',CurLine.3))'OR  'Var' EQUAL 'Word
                           End
                     'Cappend  'Close
                   End
           '.JobPoint'
           'Extract/CurLine'
           CurLine = Substr(CurLine.3,7)
           If First(CurLine) = 'IF' & (WordPos('OR',CurLine) > WordPos('IF',CurLine) | WordPos('AND',CurLine) > WordPos('IF',CurLine))
              Then Do
                   Input='Input [   ]    'Copies(' ',Pos('IF',CurLine)-5)
                   'Delete'
                   'Up'
                   Firsts = 'IF OR AND'
                   Do I = 1 To Words(CurLine)
                      Word = Word(CurLine,I)
                      If WordPos(Word,Firsts) \= 0
                         Then Input' 'Substr(Word'∞∞∞',1,3)
                         Else 'CAppend  'Word
                   End
                   End
           End
   If Word(Line,1) = 'Macro'
      Then 'Change/[ezt]  /[   ] */1'
   If Word(Line,1) = 'ELSE'
      Then 'Change/[ezt]/[   ]/1'
   If Word(Line,1) = 'CASE'
      Then Do
           'Change/[ezt]/[   ]/1'
           'Change/CASE/EVALUATE/1'
           "Change/]/]    /'END-CASE'"
           End
   If Word(Line,1) = 'DO'
      Then Do
           'Change/ WHILE / UNTIL NOT (/'
           If Rc = 0
              Then 'Cappend)'
           'Change/[ezt]/[   ]/1'
           'Change/DO/PERFORM/1'
           End
   If Word(Line,1) = 'CALL'
      Then Do
           'Change/[ezt]/[   ]/1'
           'Change/ (/ /1'
           'Change/) / /1'
           Call = Next('CALL')
           If Pos("'",Call) = 0
              Then Do
                   'Set Point .Call'
                   '-/ 'Call' /&/ PIC X/'
                   If Rc \= 0
                      Then  "Change/ "Call" / '"Call"' /1 1"
                   '.Call'
                   End
           End
   If Word(Line,1) = 'END-DO'
      Then Do
           'Change/[ezt]/[   ]/1'
           'Change/END-DO/END-PERFORM/1'
           End
   If Word(Line,1) = 'END-CASE'
      Then Do
           'Change/[ezt]/[   ]/1'
           'Change/CASE/EVALUATE/1'
           End
   If Word(Line,1) = 'END-IF'
      Then 'Change/[ezt]/[   ]/1'
   If Word(Line,1) = 'GO' | Word(Line,1) = 'GOTO'
      Then Do
           'Change/[ezt]/[   ]/1'
           If WordPos('EXIT_PARAGRAPH',Line) \= 0
              Then 'Change/ GO$/ EXIT SECTION/1 1'
              Else Do
                   'Change/ GO$ JOB / EXIT SECTION/1 1'
                   If Rc \= 0
                      Then 'Change/ GOTO / GO TO /1 1'
                   End
           End
   If Word(Line,1) = 'KGETDATE' | Word(Line,1) = 'KGETTIME'
      Then Do
           'Change/'Word(Line,1)'/MOVE work TO/1'
           If Rc = 0
              Then Do
                   'Change/[ezt]/[   ]/1'
                   'Dup'
                   'Up'
                   'Change/MOVE$/MOVE FUNCTION CURRENT-DATE(1:20) TO WS-DATA-HORA/1'
                   'Set Point .CurDate'
                   'Next'
                   If Word(Line,1) = '%GETDATE'
                      Then Do
                           'Dup 2'
                           'Up'
                           'Change/MOVE$ TO /MOVE WS-ANO-DATA(3:2) TO /1 1';'Cappend(6:2)';'Next'
                           'Change/MOVE$ TO /MOVE WS-MES-DATA      TO /1 1';'Cappend(1:2)';'Next'
                           'Change/MOVE$ TO /MOVE WS-DIA-DATA      TO /1 1';'Cappend(3:2)'
                           End
                      Else Do
                           'Change/MOVE$ TO /MOVE WS-HORACURRENT   TO /1 1'
                           'Cappend(1:6)'
                           End
                   End
                   'Set Point .CurDateEnd'
                   '.CurDate'
                   'Extract/CurLine'
                   CurLine2 = CurLine.3
                   Do Forever
                      'Up'
                      If  Rc \= 0 Then Leave
                      'Extract/CurLine'
                      If Pos('*',CurLine.3) \= 7 & Pos(':2)',CurLine.3) = 0
                         Then Leave
                   End
                   '.CurDate'
                   If CurLine.3 = CurLine2
                      Then 'Del'
                   '.CurDateEnd'
           End
   If Word(Line,1) = 'READ'
      Then Do
           File = Word(Line,2)
           Line = Translate(Line,' ',',')
           Key = ''
           Pkey = ''
           If Pos('˚',Line) \= 0
              Then Do I = 1 To Words(Line)
                      Word = Word(Line,I)
                      If Pos('˚',Word) \= 0
                         Then Do
                              Old = Word
                              Key = Space(Translate(Word(Line,I),' ','˚'))
                              End
                   End
           If Key \= ''
              Then Do
                   Pkey = '-'Key
                   Key = File'-'Key
                   'Set Point .READchange'
                   '-/ SECTION/'
                   "Change/ "Old" / "Key" /'EXIT. ' *"
                   '.READchange'
                   'Change/READ$/PERFORM RT-'Word(ReadRel(File,SYSORT,Key),1)'/1'
                   End
              Else If WordPos('KEY',Line) \= 0
                      Then Do
                           Key = Next('KEY',Line)
                           'Change/READ$/PERFORM RT-'Word(ReadKey(File,SYSORT,Key),1)'/1'
                           End
                      Else 'Change/READ$/PERFORM RT-'Word(Read(File,SYSORT,,'SEGUINTE'),1)'/1'
           If Rc = 0
              Then Do
                   'Change/[ezt]/[   ]/1'
                   If WordPos('INTO',Line) \= 0
                      Then Do
                           'Dup'
                           'Change/PERFORM$/MOVE REG-'Word(Line,2)' TO 'Word(Line,4)'/1 1'
                           End
                   End
           End
   If Word(Line,1) = 'WRITE'
      Then Do
           Line = Translate(Line,'  ','.,')
           File = Word(Line,2)
           If WordPos('DELETE',Upper(Line)) \= 0
              Then RT = Delete(File,SYSORT)
           Else If WordPos('UPDATE',Upper(Line)) \= 0
                   Then RT = Rewrite(File,SYSORT)
                   Else RT = Write(File,SYSORT)
           'Change/WRITE$/PERFORM RT-'Word(RT,1)'/1'
           If Rc = 0
              Then Do
                   'Change/[ezt]/[   ]/1'
                   If WordPos('FROM',Line) \= 0
                      Then Do
                           'Dup'
                           'Up'
                           'Change/PERFORM$/MOVE REG-'Word(Line,4)' TO REG-'Word(Line,2)'/1 1'
                           'Next'
                           End
                   End
           End
   If Word(Line,1) = 'GET'
      Then Do
           'Change/GET$/PERFORM RT-'Word(Read(Word(Line,2),SYSORT,,'SEGUINTE'),1)'/1'
           If Rc = 0
              Then Do
                   'Change/[ezt]/[   ]/1'
                   If WordPos('INTO',Line) \= 0
                      Then Do
                           'Dup'
                           'Change/PERFORM$/MOVE REG-'Word(Line,2)' TO 'Word(Line,4)'/1 1'
                           End
                   End
           End
   If Word(Line,1) = 'PUT'
      Then Do
           If WordPos('FROM',Line) \= 0
              Then Do
                   FileIn = Word(Line,4)
                   FileOut = Word(Line,2)
                   LenFileOut = LrecL(FileOut)
                   LenFileIn  = LrecL(FileIn)
                   End
              Else LenFileIn = 0
           'Change/PUT$/PERFORM RT-'Word(Write(Word(Line,2),SYSORT,LenFileIn),1)'/1'
           If Rc = 0
              Then Do
                   'Change/[ezt]/[   ]/1'
                   If WordPos('FROM',Line) \= 0
                      Then Do
                           If LenFileOut = 0 & LenFileIn \= 0
                              Then Do
                                   'Set Point .Put'
                                   'Top'
                                   '/ FD 'FileOut' /|/ SD 'FileOut' /'
                                   If Rc = 0
                                      Then Do
                                           '/ CHARACTERS /|/ FD /|/ SD /|/ WORKING-'
                                           'Extract/CurLine'
                                           If WordPos('CHARACTERS',CurLine.3) \= 0
                                              Then Do
                                                   'Change/ 0 / 'LenFileIn' /1'
                                                   '/ 01  REG-$.'
                                                   'Change/./ PIC X('LenFileIn')./1'
                                                   End
                                           End
                                   '.Put'
                                   End
                           'Dup'
                           'Up'
                           'Change/PERFORM$/MOVE REG-'FileIn' TO REG-'FileOut'/1 1'
                           'Next'
                           End
                   End
           End
   If Word(Line,1) = 'POINT'
      Then Do
           File = Word(Line,2)
           Logic = Word(Line,3)
           Key = Word(Line,4)
           'Change/POINT$/PERFORM RT-'Start(File,Logic,Key)'/1'
           If Rc = 0
              Then 'Change/[ezt]/[   ]/1'
           End
   If Word(Line,1) = 'DISPLAY'
      Then Do
           'Set Point .Display'
           If CmdDisp \= 'DISPLAY'
              Then Displays = Displays + 1
           CmdDisp = 'DISPLAY'
           '.Display'
           'Change/[ezt]/[   ]/1'
           'Extrac/CurLine'
           Pos = Pos('DISPLAY',CurLine.3)
           Input='Input[   ]'Copies(' ',Pos-6)
           Line = Space(Line)
           Line = DelWord(Line,1,1)
           ToFile = WordPos(Word(Line,1),Files)
           If ToFile \= 0
              Then Do
                   File = Word(Line,1)
                   Line = DelWord(Line,1,1)
                   'Change/DISPLAY$/MOVE SPACES TO REG-'File'/1 1'
                   Input'STRING  'Word(Line,1)
                   P = 3
                   End
              Else Do
                   Test = Word(Line,1)
                   If Test = Word(Printers,1)
                      Then Line = DelWord(Line,1,1)' UPON 'Test
                   P = 1
                   "Change/DISPLAY$/DISPLAY PGMID '"Displays"I- '/ 1"
                   End
           Do I = P To Words(Line)
              Word = Translate(Word(Line,I),' ','^')
              If Pos('˚',Word) \= 0
                 Then Word = Ren(Pgm,Word)
              If Substr(Word,1,1) = '+' & DataType(Word) = 'NUM'
                 Then Word = "'"Copies(' ',Word)"'"
              'Extract/CurLine'
              If (Length(CurLine.3) + Length(Word) + 1) < 73
                 Then Do
                      'Cappend 'Word
                      "Change/''/ /1 1"
                      "Change// /1 1"
                      End
                 Else Do
                      Input'        'Word
                      'Extract/CurLine'
                      If Length(CurLine.3) > 72 & Pos("'",Word) \= 0
                         Then Do
                              Resto = "'"Substr(CurLine.3,73)
                              If Length(Resto) = 2
                                 Then 'Shift Left 1 1'
                                 Else Do
                                      'Zone 73 *'
                                      'Change/$//1'
                                      'Zone 1 *'
                                      'Input       -         'Resto
                                      End
                              End
                      End
           End
           If ToFile \= 0
              Then Do
                   Input'        DELIMITED BY SIZE'
                   Input'   INTO REG-'File
                   If WordPos(File,Printers) = 0
                      Then Input'PERFORM RT-'Word(Write(File,SYSORT),1)
                      Else Input'WRITE REG-'File' AFTER 1'
                   End
           End
           Else If Word(Line,1) \= ''
                   Then CmdDisp = Word(Line,1)
   If Word(Line,1) = 'PRINT'
      Then Do
           Report = Word(Translate(Line,' ','.'),2)
           'Change/PRINT$'Report'/PERFORM 'Print(Pgm,Report,SYSORT)'/1'
           If Rc = 0
              Then 'Change/[ezt]/[   ]/1'
           End
   If Word(Line,1) = 'SORT'
      Then Do
           'Set Point .Sort'
           'Change/[ezt]/{   }/1'
           Sorts = Sorts + 1
           In = Word(Line,WordPos('SORT',Line)+1)
           Line = DelWord(Line,WordPos('SORT',Line),2)
           Out = Word(Line,WordPos('TO',Line)+1)
           Line = DelWord(Line,WordPos('TO',Line),2)
           Keys = DelWord(Line,WordPos('USING',Line),1)
           'Extract/CurLine'
           Input = 'INPUT 'Copies(' ',Pos('SORT',CurLine.3)-1)
           'Top'
           '/DATA DIVISION.'
           'Up'
           If SYSORT \= 'WORKSDS'
              Then Do
                   SortWork = 'SORTWK'Sorts
                   If Length(SortWork) > 8
                      Then SortWork = 'SORTW'Sorts
                   'Input            SELECT 'SortWork' ASSIGN TO 'SortWork
                   'Input                   ORGANIZATION       IS SEQUENTIAL.'
                   End
              Else Do
                   SortWork = 'WORKSDS'Sorts
                   If Length(SortWork) > 8
                      Then SortWork = 'WRKSDS'Sorts
                   'Input            SELECT 'SortWork' ASSIGN TO 'SortWork
                   'Input                   ORGANIZATION    IS INDEXED'
                   'Input                   ACCESS MODE     IS DYNAMIC'
                   'Input                   RECORD KEY      IS 'SortWork'-KEY ='
                   Do I = 1 To Words(Keys)
                      Input'                          'Ren(Pgm,Word(Keys,I))
                      'Change/'In'-/'SortWork'-/1 1'
                   End
                   'Input                                      WITH DUPLICATES'
                   'Input                   FILE STATUS  IS FL-STA-'SortWork'.'
                   End
           Void = Blank()
           '/ FD 'In' /'
           'Put / FD /|/ SD /|/ *=====/ 'SortWork'_esy$.fdsd'
           'Kedit 'SortWork'_esy$.fdsd (NoMsg'
           If SYSORT \= 'WORKSDS'
              Then 'Change/ FD / SD /*'
           'Change/'In'/'SortWork'/*'
           'Less / FILLER /'
           'Less/'SortWork'/'
           'Less/ REDEFINES /'
           'Change/ 03 / 03 'SortWork'-/*'
           'Change/ 04 / 04 'SortWork'-/*'
           'More /'SortWork'-/'
           If Length(SortWork) > Length(In)
              Then 'Change/'Copies(' ',Length(SortWork)-Length(In))' PIC / PIC /*'
           'All'
           'Change/ REDEFINES / REDEFINES 'SortWork'-/*'
           'FFile'
           '/ *=====/'
           'Up'
           Void = Blank()
           'Get 'SortWork'_esy$.fdsd'
           'Erase 'SortWork'_esy$.fdsd'
           '.Sort'
           If SYSORT \= 'WORKSDS'
              Then Do
                   '.Sort'
                   'Change/SORT$/SORT 'SortWork'/1'
                   Input' ON ASCENDING KEY '
                   Do I = 1 To Words(Keys)
                      Input'              'Ren(Pgm,Word(Keys,I))
                      'Change/'In'-/'SortWork'-/1 1'
                   End
                   Input'    USING  'In
                   Input'    GIVING 'Out
                   End
              Else Do
                   '.Sort'
                   Section = 'ORDENA-'In'-'LPad(Sorts,3)'-'Out
                   Void = NewSection(Section,'ROTINA DE CLASSIFICACAO DE 'In' PARA 'Out' POR 'Space(Keys))
                   Section = 'RT-'Section
                   Input'OPEN INPUT 'In
                   Input'IF  NOT 'FL(In,00,'OK')
                   Input'    SET INDALT TO 'IndAlt('QSAM',Section,'ERRO DE ABERTURA DO ARQUIVO 'In)
                   Input'    PERFORM RT-MONTA-MSG'
                   Input'END-IF'
                   Void = Blank()
                   Input'OPEN I-O 'SortWork
                   Input'IF  'FL(SortWork,00,'OK')
                   Input'    CLOSE 'SortWork
                   Input'    DELETE FILE 'SortWork
                   Input'    OPEN I-O 'SortWork
                   Input'END-IF'
                   Input'IF  NOT 'FL(File,00,'OK')
                   Input'AND NOT 'FL(File,05,'NEW')
                   Input'    SET INDALT TO 'IndAlt('QSAM',Section,'ERRO DE ABERTURA DO ARQUIVO 'SortWork)
                   Input'    PERFORM RT-MONTA-MSG'
                   Input'END-IF'
                   Void = Blank()
                   Input'PERFORM UNTIL 'FL(In,10,'EOF')
                   Input'        PERFORM RT-'Word(Read(In,SortWork),1)
                   Input'        IF  'FL(In,10,'OK')
                   Input'            MOVE REG-'In' TO REG-'SortWork
                   Input'            PERFORM RT-'Word(Write(SortWork,SortWork),1)
                   Input'        END-IF'
                   Input'END-PERFORM'
                   Void = Blank()
                   Input'CLOSE 'In
                   Input'IF  NOT 'FL(In,00,'OK')
                   Input'    SET INDALT TO 'IndAlt('QSAM',Section,'ERRO AO FECHAR O ARQUIVO 'In)
                   Input'    PERFORM RT-MONTA-MSG'
                   Input'END-IF'
                   If Out = In
                      Then Input'DELETE FILE 'In
                   Void = Blank()
                   Input'OPEN OUTPUT 'Out
                   Input'IF  NOT 'FL(Out,00,'OK')
                   Input'    SET INDALT TO 'IndAlt('QSAM',Section,'ERRO DE ABERTURA DO ARQUIVO 'Out)
                   Input'    PERFORM RT-MONTA-MSG'
                   Input'END-IF'
                   Void = Blank()
                   Input'MOVE LOW-VALUES TO REG-'SortWork
                   Input'START 'SortWork' KEY NOT LESS 'SortWork'-KEY'
                   Input'PERFORM UNTIL NOT 'FL(SortWork,10,'OK')
                   Input'        PERFORM RT-'Word(Read(SortWork,SortWork),1)
                   Input'        IF  'FL(SortWork,10,'OK')
                   Input'            MOVE REG-'SortWork' TO REG-'In
                   Input'            PERFORM RT-'Word(Write(Out,SortWork),1)
                   Input'        END-IF'
                   Input'END-PERFORM'
                   Void = Blank()
                   Input'CLOSE 'Out
                   Input'IF  NOT 'FL(Out,00,'OK')
                   Input'    SET INDALT TO 'IndAlt('QSAM',Section,'ERRO AO FECHAR O ARQUIVO 'Out)
                   Input'    PERFORM RT-MONTA-MSG'
                   Input'END-IF'
                   Void = Blank()
                   Input'CLOSE 'SortWork
                   Input'DELETE FILE 'SortWork'.'
                   Void = Blank()
                   '.Sort'
                   'Change/SORT$/PERFORM 'Section'/1'
                   Void = Blank()
                   End
           End
   If Word(Line,1) = 'SEARCH'
      Then Do
           'Change/[ezt]/[   ]/1'
           Table = Word(Line,2)
           With = Word(Line,WordPos('WITH',Line)+1)
           Giving = Word(Line,WordPos('GIVING',Line)+1)
           'Set Point .Search'
           'Top'
           '/ SELECT 'Table' /'
           If Rc = 0
              Then Pref='TABELA-'
              Else Pref=''
           '/ 'Table' OCCURS/'
           '/ INDEXED /'
           '~/ FILLER /'
           'Extract/CurLine'
           Arg = Word(Curline.3,2)
           '~/ FILLER /'
           'Extract/CurLine'
           Desc = Word(Curline.3,2)
           '.Search'
           'Change/S$/SET IND-'Table' TO 1/1'
           'Extract/CurLine'
           Input='Input'Copies(' ',Pos('SET',CurLine.3))
           Input'SEARCH ALL 'Pref''Table
           Input'    AT END'
           Input'       SET 'FL(Table,00,'EOF')' TO TRUE'
           Input'  WHEN 'Arg' IN 'Pref''Table'(IND-'Table') EQUAL 'With
           'Extract/CurLine'
           If Length(CurLine.3) > 72
              Then Do
                   'Del';'Up'
                   Input'  WHEN 'Arg' IN 'Pref''Table'(IND-'Table')'
                   Input'       EQUAL 'With
                   End
           Input'       SET 'FL(Table,00,'OK')' TO TRUE'
           Input'       MOVE 'Desc' IN 'Pref''Table'(IND-'Table') TO 'Giving
           'Extract/CurLine'
           If Length(CurLine.3) > 72
              Then Do
                   'Del';'Up'
                   Input'       MOVE 'Desc' IN 'Pref''Table'(IND-'Table')'
                   Input'         TO 'Giving
                   End
           Input'END-SEARCH'
           'Set Point .Search'
           Do Forever
              '/ IF /&/ 'Table' /'
              If Rc \= 0 Then Leave
              'Change/ 'Table' / 'FL(Table,00,'OK')' /1 '
           End
           '.Search'
           End
      'CAppend 'Ponto
End

* Lapidaá∆o e acabamento
'Top'
Do Forever
   '/ IF $:FILE-STATUS NOT ZERO/'
   If Rc \= 0 Then Leave
   'Change/[ezt]/[   ]/1'
   'Extract/CurLine/'
   If Pos('*',First(Substr(CurLine.3,7))) \= 1
      Then Do
           File = Word(Translate(Substr(CurLine.3,12),' ',':'),2)
           'Up'
           'Extract/CurLine/'
           'Next'
           If Pos(' RT-LER-'File'-',CurLine.3) \= 0
              Then FS88 = FL(File,23,'NOTFOUND')
              Else If Pos(' RT-GRAVAR-',CurLine.3) \= 0
                      Then FS88 = FL(File,22,'DUPKEY')
                      Else If Pos(' RT-REGRAVAR-',CurLine.3) \= 0
                              Then FS88 = FL(File,22,'DUPKEY')
                              Else FS88 = 'NOT 'FL(File,00,'OK')
           'Change/ 'File'$/ 'FS88'/1'
           End
End

'Top'
Do Forever
   '/ FILE-STATUS /'
   If Rc \= 0 Then Leave
   'Extract/CurLine/'
   If Pos('*',First(Substr(CurLine.3,7))) \= 1
      Then Do
           File = Next('FILE-STATUS',Translate(Substr(CurLine.3,12),'  ','()'))
           'Change/ FILE-STATUS$'File')/ FL-STA-'File'/1'
           If Rc \= 0
              Then 'Change/ FILE-STATUS$'File' / FL-STA-'File' /1'
           End
End

'Erase 'Pgm'_esy$.tab'
'Erase 'Pgm'_esy$.ren'
'Erase 'Pgm'_esy$.starts'
'Top'
Do Forever
   '/-DETx$(1:)/'
   If Rc \= 0 Then Leave
   'Set Point .DataName'
   'Extract/CurLine'
   DataName = First(CurLine.3)
   If DataName = 'MOVE'
      Then DataName = Word(CurLine.3,4)
   Origem = Translate(DataName,' ','-')
   Origem = DelWord(Origem,WordPos('DETx',Origem),1)
   Origem = Translate(Origem,'-',' ')
   'Top'
   '/ 'Origem' /'
   'Extract/CurLine'
   Void = WS("03 "DataName Substr(CurLine.3,Pos(' PIC ',CurLine.3)))
   '.DataName'
End
* Remove declaraá‰es de arquivos com LRECL = 0
If Words(Files) = 1
   Then Do
        'Top'
        File = Space(Files)
        '/ FD 'File' /'
        '/ RECORD CONTAINS 0 CHARACTERS'
        If Rc = 0
           Then Do
                '/ OPEN $ 'File' /'
                If Rc \= 0
                   Then Files = ''
                End
        End

If Words(Files) = 0
   Then Do
        'Top'
        If Printers = ''
           Then Do
                '/FILE-CONTROL.'
                'Del /DATA DIVISION/'
                'Next'
                'Del / WORKING-STORAGE /'
                End
           Else If File \= ''
                   Then Do
                        '/ SELECT 'File' /'
                        'Del / SELECT /|/ DATA DIVISION/'
                        '/ FD 'File' /'
                        'Del / FD /|/ SD /|/ WORKING-STORAGE /'
                        End
        If File \= ''
           Then Do
                '/03 FL-STA-'File' /'
                If Rc = 0
                   Then 'Del ~/-'File'/'
                File = ''
                End
        End
* Define input autom†tico quando n∆o h† declaraá∆o de Jobs e nem operaá‰es de I/O mas h† arquivo(s) declarado(s)
IOsOK = 0
Do I = 1 To Words(Files)
   'Top'
   '/PERFORM RT-$-'File' /|/PERFORM RT-$-'File'-/ '
   If Rc = 0
      Then IOsOK = IOsOK + 1
End

If IOsOK = 0 & Words(Files) \= 0
   Then Do
        File = Word(File,1)
        '/ RT-PROCESSAR SECTION./'
        '~/*/'
        'Extract/CurLine'
        If Words(CurLine.3) = 1 & Substr(CurLine.3,Length(CurLine.3),1) = '.'
           Then Do
                Void = Open(File,'INPUT',SYSORT,'START')
                '-/ RT-PROCESSAR SECTION./'
                Void = Blank()
                'Input            PERFORM RT-'Word(Read(File,SYSORT),1)
                'Input            IF  'FL(File,10,'EOF')
                'Input                EXIT SECTION'
                'Input            END-IF.'
                 Void = Blank()
                 '-/ PERFORM RT-PROCESSAR/'
                 'Input                    UNTIL 'FL(File,10,'EOF')
                End
           Else If Word(CurLine.3,2) = 'HIGH-VALUES' & Pos(SYSORT'-KEY',CurLine.3) \= 0 & Words(Files) \= 0
                   Then Do
                        '-~/*'
                        Void = Open(File,'INPUT',SYSORT)
                        Void = Blank()
                        'Input            PERFORM UNTIL   'FL(File,10,'EOF')
                        'Input                    PERFORM RT-'Word(Read(File,SYSORT),1)
                        'Input                    IF   'FL(File,10,'OK')
                        Do I = 1 To Words(Reports)
                           Report = Word(Reports,I)
                        'Input                         PERFORM 'Print(Pgm,Report,SYSORT)
                        End
                        'Input                    END-IF'
                        'Input            END-PERFORM'
                        Void = Blank()
                        Void = Close(File,SYSORT)
                        Void = Blank()
                        End
        End

* 'Kedit 'Pgm'.cbl (NoMsg'
'Top'
'/ RECORD-LENGTH /'
If Rc =  0
   Then Void = Sys("03 RECORD-LENGTH PIC  9(008)  VALUE ZEROS.")
'Top'
'/ CALL SB-EDIT /'
If Rc \=  0
   Then Do
        '/ SB-EDIT PIC/'
        If Rc = 0 Then Del
        End
'.START'
'Set Point .INIT'
'Get 'Pgm'_esy$.init'
If Rc = 0
   Then Do
        'Set Point .START'
        'Erase 'Pgm'_esy$.init'
        '.INIT'
        Void = Blank()
        End

'Top'
'/01  WS-VARIAVEIS.'
If Rc = 0
   Then Do Forever
        '/ PIC /|/WS-TABELA-FIXA/|/ VALUE /'
        If Rc \= 0 Then Leave
        'Extract/CurLine'
        If Pos('WS-TABELA-FIXA',CurLine.3) \= 0
           Then Leave
        Do Forever
           'Extract/CurLine'
           If Length(CurLine.3) \< 72 | Pos(' PIC ',CurLine.3) \< 45
              Then Leave
           'Change/ COMP-3 PIC /  COMP-3 PIC /1 1'
           If Rc \= 0
              Then 'Change/ PIC /  PIC /1 1'
           If Rc \= 0 Then Leave
        End
        Do Forever
           'Extract/CurLine'
           If WordPos('VALUE',CurLine.3) = Words(CurLine.3)
              Then Leave
           If Length(CurLine.3) \< 72 | Pos(' VALUE ',CurLine.3) \< 60
              Then Leave
           'Change/ VALUE /  VALUE /1 1'
           If Rc \= 0 Then Leave
        End
        End

If MaxSeqLen \= 0
   Then Do
        'Top'
        '/ 'SYSORT'-SEQUENCE/'
        'Next'
        'Extract/CurLine'
        OldFiller = Substr(CurLine.3,Pos('(',CurLine.3)+1)
        OldFiller = Word(Translate(OldFiller,' ',')'),1)
        NeWFiller = MaxSeqLen - 17
        If NewFiller < 1
           Then Do
                'Del'
                'Change/($)/('LPad(SortLen-17-8,3)')/1 '
                End
           Else Do
                'Change/($)/('LPad(NewFiller,3)')/1 '
                'Next'
                'Extract/CurLine'
                 Filler = Substr(CurLine.3,Pos('(',CurLine.3)+1)
                 Filler = Word(Translate(Filler,' ',')'),1)
                 'Change/($)/('LPad(Filler+OldFiller-NewFiller,3)')/1 '
                End
        End

'Top'
'/WS-TABELA-FIXA/'
Do Forever
   '/ PIC /|/ WS-TABELA-ALTER/'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   If Pos('WS-TABELA-ALTER',CurLine.3) \= 0
      Then Leave
   Do Forever
      'Extract/CurLine'
      If Length(CurLine.3) \< 72 | Pos(' PIC ',CurLine.3) \< 38
         Then Leave
      'Change/ PIC /  PIC /1 1'
   End
End
'Top'
Do I = 1 To Words(FileKeys)
   Field = Word(FileKeys,I)
   If Pos('˚',Field) \= 0
       Then Do
            New = Lower(Word(Translate(Field,' ','˚'),1))
            'Change/'Field'/'New'K/* *'
            End
End

Do Forever
   '/[ezt]   end/'
    If Rc \= 0 Then Leave
   'Del'
   '-~/*/'
   'Extract/CurLine'
   If Words(CurLine.3) = 2 & Word(CurLine.3,2) = 'STOP'
      Then Do
           'Del'
           'Up'
           'Extract/CurLine'
           End
   If Substr(CurLine.3,Length(CurLine.3),1) \= '.' & Pos('*',CurLine.3) = 0
      Then 'Cappend.'
End
'Top'
Do Forever
   '/[ezt] STOP/'
    If Rc \= 0 Then Leave
   'Set Point .Stop'
   'Change/[ezt]/[   ]/1'
   '-/ SECTION./'
   'Extract/CurLine'
   Section = Word(CurLine.3,1)
   Until = 0
   If Section = 'RT-PROCESSAR'
      Then Do
           '-/RT-PROCESSAR UNTIL/'
           Until = Rc
           End
   '.Stop'
   If Until = 0
      Then Do
           'Del'
           'Up'
           End
      Else 'Change/STOP/EXIT SECTION/1'
   'Next'
   'Extract/CurLine'
   'Up'
   If Pos('EXIT.',CurLine.3) \= 0
      Then 'CAppend.'
End

Do I = 1 To Words(Printers)
   Printer = Word(Printers,I)
   'Erase 'Printer'_esy$.fd'
   'Top'
   If I = 1
      Then Do
           '/SPECIAL-NAMES. DECIMAL-POINT IS COMMA./'
           If Rc = 0
              Then Do
                   'Change/COMMA. /COMMA/1'
                   'Dup'
                   'Change/S$/               SYSOUT        IS 'Printer'./1'
                   End
           End
      Else Do
           '.START'
           'Input            OPEN OUTPUT 'Printer
           Void = Blank()
           'Set Point .START'
           '.FINISH'
           'Input            CLOSE 'Printer
           Void = Blank()
           'Set Point .FINISH'
           End
End
'Top'
MaxPos = 0

'Top'
If Words(Reports) = 1
   Then Do
        Report = Word(Reports,1)
        '/'SYSORT'-REPORT PIC X/'
        If Rc = 0
           Then Do
                'Del'
                '/01  REG-'SYSORT'-/'
                '-/ FILLER /'
                'Extract/CurLine'
                LenFiller = Substr(CurLine.3,Pos('(',Curline.3))
                LenFiller = Word(Translate(LenFiller,'  ','()'),1)
                'Change/($)/('LPad(LenFiller+8,3)')/1'
                If LenFiller+8 > 999
                   Then 'Change/  X(/ X(/1'
                '/ FILLER /'
                'Del'
                '/ FILLER /'
                'Extract/CurLine'
                LenFiller = Substr(CurLine.3,Pos('(',Curline.3))
                LenFiller = Word(Translate(LenFiller,'  ','()'),1)
                'Change/($)/('LPad(LenFiller+8,3)')/1'
                "/MOVE '"Report"' TO "SYSORT"-REPORT/"
                'Del'
                '/EVALUATE 'SYSORT'-REPORT /'
                'Del 2'
                'Shift Left 9 /END-EVALUATE/'
                '/ END-EVALUATE /'
                'Del'
                End
        End

* Verifica falta de file status para arquivos declarados, mas n∆o referenciados
Do I = 1 To Words(Files)
   File = Word(Files,I)
   If Pos('>',File) = 0
      Then Do
           'Top'
           '/ FL-STA-'File' PIC /'
           If Rc \= 0
              Then Void = Sys("03 FL-STA-"File" PIC  X(002)   VALUE ZEROS.")
           Do Forever
         *    '/ WRITE 'FT'/|/ MOVE 'FT'/|/ MOVE $ TO 'FT'/|/ FROM 'FT'/|/ INTO 'FT'/|/ IF /&/ 'FT' /|/ UNTIL /&/ 'FT' /|/ WHEN /&/ 'FT' /'
              '/[???]/ & / 'File' /|/ 'File'./'
              If Rc \= 0 Then Leave
              'Change/ 'File' / REG-'File' /1'
              If Rc \= 0
                 Then 'Change/ 'File'./ REG-'File'./1'
              If Rc = 0
                 Then 'Change/[???]/[   ]/1 1'
           End
           End
End
* Tratamento das referencis em hexadecimal
'Top'
Hexs = ''
Do Forever
   '/ HEX /'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   Field = Word(CurLine.3,WordPos('HEX',CurLine.3)+1)
   'Change/ HEX $'Field'/ HEX-'Field'/1'
   If Words(Hexs) = 0
      Then Void = TabHex()
   '-~/*/'
   'Dup'
   'Extract/CurLine'
   'Change/'Word(CurLine.3,1)'$/PERFORM RT-'Field'-TO-HEX/1'
   'Set Point .HexDisplay'
   If WordPos(Field,Hexs) = 0
      Then Do
           Hexs = Hexs' 'Field
           Void = NewSection(Field'-TO-HEX','PREPARAR EXIBICAO DE 'Field' EM HEXADECIMAL')
           'Set Point .HexWork'
           'Top'
           '/ 'Field' /&/ PIC /'
           If Rc = 0
              Then Do
                   'Dup'
                   'Change/ VALUE$//1 '
                   'Change/S9/ 9/1 1'
                   'Cappend.'
                   'Extract/CurLine'
                   'Del'
                   Pic = Substr(CurLine.3,Pos(' PIC',CurLine.3)+5)
                   Pic = Translate(Pic,'  ','(.)')
                   Len = Word(Pic,2)
                   If Words(Pic) > 2 & DataType(Word(Pic,4)) = 'NUM'
                      Then Len = Len + Word(Pic,4)
                   Void = Sys("03 "Substr("HEX-"Field,1,30)" PIC  X("LPad(Len*2,3)")    VALUE SPACE.")
                   '.HexWork'
                   Void = Blank()
                   'Input            MOVE 1 TO HEXA-IND2'
                   'Input            PERFORM VARYING HEXA-IND'
                   'Input                       FROM 1 BY 1'
                   'Input                      UNTIL HEXA-IND GREATER 'Len
                   'Input                    MOVE 'Field'(HEXA-IND: 1) TO HEXA-CHAR'
                   'Extract/CurLine'
                   'Input                    MOVE HEXA (BIN-CHAR + 1)'
                   'Input                      TO HEX-'Field' (HEXA-IND2: 2)'
                   'Input                    ADD  2'
                   'Zone 'Pos(' TO ',CurLine.3)' *'
                   'Change/ / TO HEXA-IND2/1'
                   'Zone 1 *'
                   'Input            END-PERFORM.'
                   Void = Blank()
                   End
           End
   '.HexDisplay'
End

Vazios = 'WS-COMPACTADOS WS-DISPLAYS WS-CONTROLE-RELATORIOS'
* Verifica grupos que podem estar vazios
Do I = 1 To Words(Vazios)
   'Top'
   Reg = Word(Vazios,I)
   '/ 'Reg' /|/ 'Reg'. /'
   If Rc = 0
      Then Do
           'Set Point .Vazio'
           'Extract/CurLine'
           LV = Word(CurLine.3,1)
           '~/*'
           'Extract/CurLine'
           If Word(CurLine.3,1) \> LV
              Then Do
                   '.Vazio'
                   'Del'
                   'All /INITIALIZE 'Reg' /'
                   If Rc = 0 Then 'Del *'
                   'All'
                   End
           End
End

'Zone 7 7'
'Less ~Blank'
'Zone 1 *'
Indexes = ''
I = 0
'Kedit 'Pgm'_esy$.occurs (NoMsg'
'Extract/Size'
If Size.1 = 0
   Then 'QQuit'
   Else Do
        Do Forever
           '/ OCCURS /'
           If Rc \= 0
              Then Do
                   'QQuit'
                   'Erase 'Pgm'_esy$.occurs'
                   Leave
                   End
           'Extract/CurLine'
           Line = CurLine.3
           DataName = Word(Line,1)
           Line = Space(Delword(Line,1,1))
           'Kedit 'Pgm'.cbl (NoMsg'
           'Top'
           '/ 'DataName' PIC /'
           LV = First()
           DataNames = DataName
           'Change/ VALUE $//1'
           'Change/. / /1'
           'Extract/CurLine'
           'CAppend  'Line
           Occurs = Next('OCCURS',Line)
           If WordPos('INDEXED',Line) \= 0
              Then Do
                   Index = Last(Line)
                   'Change/ INDEXED$'Index'//1'
                   Indexes = Indexes' 'Index
                   End
              Else Do
                   Index = 'I'
                   I = I + 1
                   End
           'CAppend.'
           'Next'
           'Extract/CurLine'
           If WordPos('REDEFINES',CurLine.3) \= 0
              Then Do
                   '-/ 'DataName' /'
                   'Change/ PIC $X($) / /1'
                   If Rc = 0
                      Then Do
                           '/ REDEFINES /'
                           'Del'
                           End
                   End
           Do Forever
              'Extract/CurLine'
              First = First(CurLine.3)
              If Pos('*',First) \= 1 & First \> LV & WordPos('REDEFINES',CurLine.3) = 0
                 Then Leave
              If Pos('*',First) = 0
                 Then Do
                      If First = LV & WordPos('REDEFINES',CurLine.3) \= 0
                         Then 'Change/REDEFINES/OCCURS 'Occurs' REDEFINES/1'
                      Fillers = 'FILLER PIC REDEFINES'
                      DataName = Word(CurLine.3,2)
                      If Pos('philler',DataName) \= 0
                         Then DataName = 'FILLER'
                      If WordPos(DataName,Fillers) = 0 & WordPos(DataName,DataNames) = 0
                         Then DataNames = DataNames' 'DataName
                      End
              'Next'
              If Rc \= 0 Then Leave
           End
           '/ PROCEDURE DIVISION/'
           Do D = 1 To Words(DataNames)
              DataName = Word(DataNames,D)
              'Change/ 'DataName'($)/ 'DataName'($∞'Index')/*'
              'Change/ 'DataName' / 'DataName'('Index') /*'
              'Change/ 'DataName'./ 'DataName'('Index')./*'
           End
           'Kedit 'Pgm'_esy$.occurs (NoMsg'
        End
        End
'All'
If I \= 0
   Then Indexes = 'I 'Indexes
Do I = 1 To Words(Indexes)
   Void = WS("03 "Word(Indexes,I)"             PIC  9(008)   VALUE ZEROS.")
End
* Tratamento das odenaá‰es descendentes
'Top'
ToLows = ''
MaxLow = 0
Invs = 0
Do Forever
   '/-<$ PIC /'
   If Rc \= 0
      Then Leave
   'Set Point .Invs'
   Invs = Invs + 1
   'Extract/CurLine'
   Invertido = Word(CurLine.3,2)
   Normal = Substr(Invertido,1,Pos('<',Invertido)-1)''Substr(Invertido,Pos('<',Invertido)+1)
   'Change/'Invertido'/'Normal'-rv/1 1'
   'Change/   PIC / PIC /1 1'
   '/ TO 'Invertido' /'
   'Del'
   'Extract/CurLine'
   PosTo = Pos(' TO ',CurLine.3)
   'Input'Copies(' ',PosTo+4)''Normal'-rv'
   'Input'Copies(' ',PosTo+4)''Normal'-rv(1:)'
   'Change/                 /          INSPECT/1'
   'Input'Copies(' ',PosTo)' TO INVERTIDOS'
   S = 35
   Do Forever
      'Change/'Copies(' ',S)' /'Copies(' ',S-18)'CONVERTING NORMAIS /1'
      If Rc = 0 Then Leave
      S = S -1
      If S = 0
         Then Do
              'Replace            CONVERTING NORMAIS TO INVERTIDOS'
              Leave
              End
   End
   'Top'
   '/ WHEN 'Normal' GREATER /'
   If Rc = 0
      Then Do
           'Change/ GREATER / LESS    /1'
           'Extract/CurLine'
           If Length(Word(CurLine.3,Words(CurLine.3))) > MaxLow
              Then MaxLow = Length(Word(CurLine.3,Words(CurLine.3)))
           ToLows = ToLows' 'Word(CurLine.3,Words(CurLine.3))
           End
   '.Invs'
End
If Invs \= 0
   Then Do
        Void=tabin()
        '.START'
        '-/ RT-OBTER/'
        ToHigs = ''
        '-/(1:)'
        'Extract/CurLine'
        Pos = Pos('(1:)',CurLine.3)
        Do Forever
           'Extract/CurLine'
           If Pos('(1:)',CurLine.3) = 0 Then Leave
           'Change/$ TO //1'
           'Extract/CurLine'
            If WordPos(Word(CurLine.3,1),ToLows) = 0
               Then Do
                    ToHigs = ToHigs' 'Word(CurLine.3,1)
                    If Length(Word(CurLine.3,1)) > MaxLow
                       Then MaxLow = Length(Word(CurLine.3,1))
                    End
            'Del'
            'Up'
        End
        Do I = 1 To Words(ToLows)
           Field = Word(ToLows,I)
           If I = 1
              Then 'Input            MOVE LOW-VALUES  TO 'Substr(Field,1,MaxLow)'(1:)'
              Else 'Input                                'Substr(Field,1,MaxLow)'(1:)'
        End
        Do I = 1 To Words(ToHigs)
           Field = Word(ToHigs,I)
           If I = 1
              Then 'Input            MOVE HIGH-VALUES TO 'Substr(Field,1,MaxLow)'(1:)'
              Else 'Input                                'Substr(Field,1,MaxLow)'(1:)'
        End
        'Zone 1 *'
        End

* Elimida redefines de filler-nnnn desnecess†rios (quando unico item da redefiniá∆o)
'Top'
Do Forever
   '/ filler-$ PIC X/'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   LV = Word(CurLine.3,1)
   'Next'
   'Extract/CurLine'
   NextLV = Word(CurLine.3,1)
   If DataType(NextLV) = 'NUM' & NextLV < LV
      Then Do
           'Up 2'
           'Extract/CurLine'
           If Word(CurLine.3,2) = 'REDEFINES'
              Then Do
                   'Del 2'
                   'Top'
                   End
              Else 'Next'
           End
End
* Elimida redefines de grupos alfanumÇricos
'Top'
'Change/ filler-????  / FILLER       /*'
Do Forever
   '/ REDEFINES /|/ WORKING/'
   If Rc \= 0 Then Leave
  'Extract/CurLine'
  If WordPos('REDEFINES',CurLine.3) = 0 Then Leave
  'Up'
  'Extract/CurLine'
  'Change/ PIC  X(???).//1 1'
  If Rc = 0
     Then Do
          'CAppend.'
          'Next'
          'Del'
          'Up'
          End
     Else 'Next'
End
* Verifica falta de ponto nos encerramentos das sections;
'Top'
Do Forever
   '/ EXIT. /'
   If Rc \= 0 Then Leave
   '-~/*'
   'Extract/CurLine'
   If Substr(CurLine.3,Length(CurLine.3),1) \= '.'
      Then 'CAppend.'
   '/ EXIT. /'
End

If Words(Reports) \= 0
   Then Do
        'Top'
        '/* Descreva /|/* Describe /'
        If Rc = 0
           Then Do
                'Del'
                'Up'
                'Get 'Pgm'_esy$.Reps'
                'Erase 'Pgm'_esy$.Reps'
                End
        End

'Kedit 'Pgm'_esy$.Security'
'Extract/Size'
'QQuit'
If Size.1 \= 0
   Then Do
        'Top'
        'Get 'Pgm'_esy$.Security'
        'Erase 'Pgm'_esy$.Security'
        End
'Top'
Do Forever
   '/IF $-PRINT /'
   If Rc \= 0
      Then Leave
   'Next'
   'Extract/CurLine'
   If Word(CurLine.3,1) = 'END-IF'
      Then Do
           'Up'
           'Del 3'
           '-/ SET $-NOPRINT /'
           If Rc = 0
              Then  Do
                    'Del'
                    'Extract/CurLine'
                     If Word(CurLine.3,1) = 'WHEN'
                        Then Do
                             'Up'
                             'Extract/CurLine'
                             If Word(CurLine.3,1) = 'WHEN'
                                Then 'Del'
                             End
                    End
           End
End

* Retira SECTION dos Jobs
Do I = 0 To Jobs
   'Top'
   '/ EXIT. *>'I'<'
   If Rc = 0
      Then Do
           'Change/*>$//'
           'Extract/CurLine'
           TopSection = Substr(Word(CurLine.3,1),1,Length(Word(CurLine.3,1))-2)
   *       'Change/ GO $'TopSection' / EXIT SECTION/*'
           Do Forever
              '/ EXIT. *>'I'<'
              If Rc \= 0
                 Then Leave
              'Set Point .Exit'
              '-/ SECTION./'
              'Change/ SECTION.//1'
              'Cappend.'
              '-/ EXIT./'
              'Extract/CurLine'
              'Del'
              '.Exit'
              'Replace 'CurLine.3
           End
           End
 End

* Converte Laáos de repetiáao em PERFORM RT- (Sections).
'Top'
Do Forever
   '/] IF /'
   IfLoop = 0
   If Rc \= 0 Then Leave
   Do Forever
      'Extract/CurLine'
      If First(Substr(CurLine.3,8)) = 'END-IF'
         Then Leave
      If Substr(CurLine.3,Length(CurLine.3),1) = '.'
         Then Do
              IfLoop = 1
              Leave
              End
      'Next'
      If Rc \= 0 Then Leave
   End
   If IfLoop = 1
      Then Do
           IFs = 1
           'Set Point .IFs'
           '~/*/'
           'Extract/CurLine'
           Section = First(Substr(CurLine.3,8))
           '.IFs'
           'Change/. //1 1'
           'Extract/CurLine'
           First = First(Substr(CurLine.3,8))
           'Input 'Copies(' ',Pos(' 'First' ',CurLine.3)+Length(First))' PERFORM RT-'Section
           '.IFs'
           IFs = 1
           'Erase 'Pgm'_esy$.loop'
           'Next 2'
           Do Forever
              'Extract/CurLine'
              CurLine.3 = Translate(Substr(CurLine.3,7),' ','∞')
              First = First(CurLine.3)
              If First = 'END-IF'
                 Then Ifs = Ifs - 1
              If Ifs = 0
                 Then Leave
              If First = 'IF'
                 Then Do
                      IFs = IFs + 1
                      LastIf = Space(DelWord(CurLine.3,1,1))
                      End
              'Change/[000]/[   ]/1 1'
              'Put 1 'Pgm'_esy$.loop'
              'Delete'
           End
           Void = NewSection(Section,'LOOP ['LastIf']')
           'Get 'Pgm'_esy$.loop'
           'CAppend.'
           'Erase 'Pgm'_esy$.loop'
           '.Ifs'
        End
End

* Transfere Section de montagem de mensagens para o fim
'Top'
'/  RT-MONTA-MSG                                SECTION./'
If Rc = 0
   Then Do
        '-~/*/'
        '/*/'
        'Erase 'Pgm'_esy$.mnt'
        'Put /EXIT./ 'Pgm'_esy$.mnt'
        'Del /EXIT./'
        'Put 1 'Pgm'_esy$.mnt'
        'Del'
        'Bot'
        'Next'
        'Get 'Pgm'_esy$.mnt'
        'Erase 'Pgm'_esy$.mnt'
        'Kedit 'Pgm'_esy$.mnt'
        'qq'
        "Input        COPY 'SC5LDIS2'."
        End
 'Bot'
'Input       ******************************************************************'
'Input       *                      FIM  DO  PROGRAMA                         *'
'Input       ******************************************************************'
'Top'
'/ PERFORM RT-GERA-RELATORIOS/'
If Rc = 0
   Then Do
        'Del'
        '.PROCESSAR'
        'Change/. //1 1'
         Void = Blank()
        'Input            PERFORM RT-GERA-RELATORIOS.'
         Void = Blank()
        End
* Classifica declaraá‰es de File Status e acunuladores de estat°stica
'Erase 'Pgm'_esy$.sortfs'
'Top'
'/ FL-STA-$ PIC/'
If Rc = 0
   Then Do
        'Up'
        'Set Point .SortFs'
        'Next'
        'Put / * / 'Pgm'_esy$.sortfs'
        'Del / * /'
        'Top'
        'Kedit 'Pgm'_esy$.sortfs (NoMsg'
        'Zone 73 *'
        'Change/ /Z/*'
        'Zone 1 *'
        Do Forever
            '/ FL-/'
            If Rc \= 0 Then Leave
            'Extract/CurLine'
            Level = Word(CurLine.3,1)
            Name = Word(CurLine.3,2)
            If Level = 3
               Then Name = Substr(Name,8)'-AAA'
               Else Name = Substr(Name,4)
            'Zone 73 *'
            'Change/Z/'Name'/1'
            'Zone 1 *'
        End
        'Top'
        'Sort * a 73 * a 1 *'
        'Zone 73 *'
        'Change/$//*'
        'Zone 1 *'
        'FFile'
        '.SortFs'
        'Get 'Pgm'_esy$.sortfs'
        'Erase 'Pgm'_esy$.sortfs'
        'Set Point .merges'
        'Get 'Pgm'_$esy.merge'
        If Rc = 0
           Then Do
                'Erase 'Pgm'_$esy.merge'
                '.merges'
                'Input       *----------------------------------------------------------------*'
                'Input       *-- VARIAVEIS PARA PROCESSAMENTO DE MERGES                       *'
                'Input       *----------------------------------------------------------------*'
                'Input        01  MERGES.'
                End
        End

* Retira duplicidade de linhas em branco
'Top'
'All Blank'
If Rc = 0
   Then 'Change/       /      */*'

'All / philler-C/'
If Rc = 0 Then 'Del *'
'All'

'Top'
Do Forever
   '/ pic x(-/'
   If Rc \= 0
      Then Leave
   'Change/       /*******/1'
   'CAppend  <--- tamanho da redefiniá∆o excede a definiá∆o'
End

'Top'
Do Forever
   '/ * /'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   If Words(CurLine.3) = 1 & Word(CurLine.3,1) = '*'
      Then Do
           'Next'
           If Rc \= 0 Then Leave
           'Extract/CurLine'
           If Words(CurLine.3) = 1 & Word(CurLine.3,1) = '*'
              Then Do
                   'Del'
                   'Up 2'
                   End
           End
End
'Zone 7 7'
'Less /*/'
'Zone 1 *'
* Recupera coment†rios dos Datanames
'Kedit 'Pgm'_esy$.comments (NoMsg'
'Top'
Do Forever
   'Next'
   If Rc \= 0 Then Leave
   'Set Point .Pic'
   'Extract/CurLine/Line'
   DataName = Word(CurLine.3,1)
   'Kedit 'Pgm'.cbl (NoMsg'
   'Top'
   '/ 0? 'DataName' /'
   If Rc = 0
      Then Do
           'Up'
           'Kedit 'Pgm'_'Line.1'_esy$.comments (NoMsg'
           'Extract/Size'
           If Size.1 = 1
              Then Do
                   ':1'
                   'Extract/CurLine'
                   If Length(CurLine.3) = 7
                      Then 'Del'
                   'FFile'
                   End
              Else 'QQuit'
           'Get 'Pgm'_'Line.1'_esy$.comments'
           If Rc = 0
              Then 'Erase 'Pgm'_'Line.1'_esy$.comments'
           End
   'Kedit 'Pgm'_esy$.comments (NoMsg'
   '.Pic'
End
'QQuit'
'Erase 'Pgm'_esy$.comments'
'Kedit 'Pgm'.cbl (NoMsg'
'All'

* Retira caracteres inv†lidos em nomes de campos
'Top'
Do Forever
   '/ 0? /|/ PROCEDURE/'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   If WordPos('PROCEDURE',CurLine.3) \= 0 Then Leave
   'Set Point .DataName'
   LV = Word(CurLine.3,1)
   If DataType(LV) = 'NUM'
      Then Do
           DataName = Word(CurLine.3,2)
           DataName = Word(Translate(DataName,' ','.'),1)
           TestName = Translate(DataName,' ','ABCDEFGHIJKLMNOPQRSTUVWXYZ-0123456789abcdefghijklmnopqrstuvwxyz')
           If TestName \= ''
              Then Do
                    Invalids = ''
                   Do I = 1 To Words(TestName)
                      Char = Word(TestName,I)
                      Invalids = ''Char
                   End
                   'Top'
                   'Change/'DataName'/'Translate(DataName,'x',Invalids)'/**'
                   '.DataName'
                   'Up'
                   End
              Else If Length(DataName) > 30
                      Then Do
                           If Pos('-',DataName) \= 0
                              Then Do
                                   Words = Translate(DataName,' ','-')
                                   NewName = ''
                                   Do I = 1 To Words(Words)
                                      Word = Word(Words,I)
                                      Word = Substr(Word,1,1)''Lower(Substr(Word,2))
                                      NewName = NewName''Word
                                   End
                                   NewName = Substr(NewName,1,30)
                                   End
                              Else NewName = Substr(Lower(DataName),1,30)
                           'Change/'DataName'$PIC /'NewName' PIC /1'
                           NewName = Space(NewName)
                           'Top'
                           'Change/ 'DataName' / 'NewName' /**'
                           'Change/ 'DataName'(/ 'NewName'(/**'
                           'Change/ 'DataName'./ 'NewName'./**'
                           '.DataName'
                           'Up'
                           End
                      Else Void = PosPic(46)

           End
End

* Quebra Linhas com mais de 72 colunas
'Zone 7 7'
'Less ~Blank'
'Zone 1 *'
* Insere CONTINUE em IFs vazios
'Top'
Do Forever
   '/ IF /|/ ELSE /'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   Cmd = First(Substr(CurLine.3,8))
   'Next'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   First = First(Substr(CurLine.3,8))
   If First = 'END-IF' | First = 'ELSE'
      Then Do
           'Up'
           'Dup'
           'Change/ 'Cmd'$/    CONTINUE/1'
           End
End
'Zone 73 *'
'Less Blank'
'Zone 1 *'
* Divede TO em 2 linhas
'Top'
Do Forever
   '/ TO /'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   'Dup'
   'Change/ 'First(Substr(CurLine.3,8))' $ TO /   TO /1'
   'Up'
   'Change/ TO $//1'
   'Next'
End
* Divede FROM em 2 linhas
'Top'
Do Forever
   '/ FROM /'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   'Dup'
   'Change/ 'First(Substr(CurLine.3,8))' $ FROM / FROM /1'
   'Up'
   'Change/ FROM $//1'
   'Next'
End
* Divede COMPUTE em v†rias linhas
'Top'
Ops = '= + - * / ** //'
Do Forever
   '/ COMPUTE /'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   Compute = Substr(CurLine.3,12)
   Input = 'Input 'Copies(' ',Pos('COMPUTE',CurLine.3)+4)
   'Change/=$//'
   Do I = WordPos('=',Compute) To Words(Compute)
      Word = Word(Compute,I)
      If WordPos(Word,Ops) = 0
         Then 'CAppend  'Word
         Else Input Word
   End
End

'Zone 73 *'
'Less Blank'
'Zone 1 *'
* Divede Linhas com referencas a subscripts
'Top'
Do Forever
   '/($)'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   If WordPos('PIC',CurLine.3) = 0
      Then Do
           'Dup'
           'Up'
           'Change/($//1'
           'Next'
           First =  First(Substr(CurLine.3,8))
           'Change/ 'First'$(/ 'Copies(' ',Length(First))'(/1'
           End
      Else Do
           If WordPos('OCCURS',CurLine.3) \= 0
             Then Do
                  Occurs = Next('OCCURS',CurLine.3)
                  Txt = 'OCCURS 'Occurs
                  'Change/ 'Copies(' ',Length(Txt))' PIC / 'Txt' PIC /1'
                  If Rc = 0
                     Then 'Change/ 'Txt'././1'
                  End
           End
End

'Zone 73 *'
'Less Blank'
'Zone 1 *'
* Divede Linhas com comparaá‰es
'Top'
Do Forever
   '/ EQUAL /|/ LESS /|/ GREATER /|/ USING /'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   CurLine.3 = Substr(CurLine.3,8)
   If Words(CurLine.3) > 3
      Then Do
           Word = Word(CurLine.3,3)
           'Dup'
           'Up'
           'Change/ 'Word' $//1'
           'Next'
            First =  First(CurLine.3)
            'Change/ 'First'$ 'Word'/ 'Copies(' ',Length(First))' 'Word'/1'
            End
End

'Zone 73 *'
'Less Blank'
'Zone 1 *'
* Divede Linhas com FROM raá‰es
'Top'
Do Forever
   '/ FROML /'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   CurLine.3 = Substr(CurLine.3,8)
   'Dup'
   'Up'
   'Change/ FROM $//1'
   'Next'
    First =  First(CurLine.3)
    'Change/ 'First'$ FROM / 'Copies(' ',Length(First))' FROM /1'
End

'All'
'Top'
'Set ArbChar Off'
'Change/˚/#/* *'
'Change/¸/@/* *'
'Change/˝/?/* *'
'Change/∞/ /* *'
'Change//$/* *'
'Set ArbChar On'
Void = Hora()

'Kedit 'Pgm'.'Ftype' (Nomsg'
'Undo'
Undo = Rc
If Undo \= 0
   Then 'QQuit'
'Set MsgMode On'
'Set Reprofile On'
'Set Wrap On'
'Set LinEnd On'
':'Linesy
'Kedit 'Pgm'.cbl'
'Top'
'Extract/Version'
If Pos('WINDOWS',Version.1) \= 0
   Then 'Winprof'
   ELse 'Profile'
If Undo \= 0
   Then 'File'
Exit

Blank: Procedure
'Next'
'Extract/CurLine'
If CurLine.3 = ''
   Then Do
        'Replace       *'
        Return 2
        End
   Else Do
        If Words(CurLine.3) = 1 & Word(CurLine.3,1) = '*'
           Then Return 1
        End
'Up'
'Input       *'
Return 0

Flag: Procedure
Pgm = Word(Arg(1),1)
Ftype = Arg(2)
Line = Arg(3)
If Substr(Word(Line,1),1,1) = '%'
  Then Do
       'Set Point .Macro'
       Macro = Substr(Word(Line,1),2)
       'Kedit 'Macro'.tmp (NoMsg'
       'Del *'
       'Get 'Macro'.'Ftype
       If Rc \= 0
          Then Do
               'QQuit'
               '.Macro'
               'Change/$/* Macro "'Macro'.'Ftype'" n∆o encontrada, Rc = 'Rc'./1'
               'Up'
               End
          Else Do
               'Top'
               Void = Prep()
               Do Forever
                  'Next'
                  If Rc \= 0 Then Leave
                  'Extract/CurLine'
                  If Word(CurLine.3,1) = 'MACRO'
                     Then 'Set Point .MacroIni'
                  If Word(CurLine.3,1) = 'MEND'
                     Then Do
                          'Del *'
                          Leave
                          End
               End
               '.MacroIni'
               If Rc \= 0
                  Then Do
                       'QQuit'
                       '.Macro'
                       'Change/$/      * Macro "'Macro'.'Ftype'", n∆o carregada por erro de sintaxe./1'
                       'Up'
                       Return 'MACRO n∆o encontrada'
                       End
               'Extract/CurLine'
               Top  = ' 'DelWord(CurLine.3,1,1)
               Line = ' 'DelWord(Line,1,1)
               'Next'
               'Set Point .Top'
               'Top'
               'Del .Top'
               First = Word(Top,1)
               If First = 0
                  Then Do
                       Top = ' 'DelWord(Top,1,1)
                       First = Word(Top,1)
                       End
               L = 0
               If DataType(First) = 'NUM'
                  Then Do
                       If First = 0 Then First = 1
                       Top = ' 'DelWord(Top,1,1)
                       Do P = 1 To First
                          L = L + 1
                          Parm = Word(Top,1)
                          Top = ' 'DelWord(Top,1,1)
                          Val = Word(Line,1)
                          Line = ' 'DelWord(Line,1,1)
                          'Change/&'Parm'./'Val'/* *'
                          'Change/&'Parm'/'Val'/* *'
                       End
                       End
               Do Forever
                  If Words(Top) = 0
                     Then Leave
                  Parm = Word(Top,1)
                  Top = ' 'DelWord(Top,1,1)
                  If Substr(Parm,Length(Parm),1) = ')'
                     Then Do
                          ParmX = Substr(Parm,1,Pos('(',Parm))
                          If Pos(' 'ParmX,Line) \= 0
                             Then Do
                                  Val = Substr(Line,Pos(' 'ParmX,Line)+Length(' 'ParmX))
                                  Val = Substr(Val,1,Pos(')',Val))
                                  If Val = ')'
                                     Then Val = ''
                                     Else Val = Substr(Val,1,Length(Val)-1)
                                  End
                             Else Val = ''
                          Parm = Substr(Parm,1,Pos('(',Parm)-1)
                          End
                     Else Do
                          Val = Word(Top,1)
                          Top = ' 'DelWord(Top,1,1)
                          If WordPos(Parm,Line) \= 0
                             Then Val = Word(Line,WordPos(Parm,Line)+1)
                          End
                  'Change/&'Parm'./'Val'/* *'
                  'Change/&'Parm'/'Val'/* *'
               End
               'Input * Fim da macro 'Macro'.'Ftype
               'FFile'
               'Get 'Macro'.tmp'
               'Erase 'Macro'.tmp'
               '.Macro'
               'Change/$/* Macro "'Macro'.'Ftype'" carregada OK./1'
               'Up'
               End
       Return Rc
       End
If Word(Line,1) = 'PARM'
   Then Do
        'Set Point .Parm'
        'Kedit 'Pgm'.cbl (Nomsg'
        'Top'
        'Input      <*>'Line
        '.Parm'
        'Kedit 'Pgm'.'Ftype' (Nomsg'
        End
   Else Do
        'Extract/CurLine'
        First = Word(CurLine.3,1)
        If Pos('*',First) = 1
           Then CurLine.3 = Substr(CurLine.3,Pos('*',CurLine.3)+1)
        'Kedit 'Pgm'.cbl (Nomsg'
        '.PROCESSAR'
        Rx = Rc
        'Input       *'CurLine.3
        If Rx = 0
           Then 'Set Point .PROCESSAR'
        'Kedit 'Pgm'.'Ftype' (Nomsg'
        End
Return 0

File: Procedure
Pgm = Word(Arg(1),1);Commands = DelWord(Arg(1),1,1)' COPY'
Ftype = Arg(2)
Line = Arg(3)
Printers = Arg(4)
Printer = 0
Table = 0
Lrecl = 0
Block = 0
TabType = 0
File = Word(Line,2)
'Set Point .File'
'Set Point .File_'Translate(File,'_','-')
'Erase 'File'_esy$.Index'
'Erase 'File'_esy$.fd'
'Erase 'Pgm'_'File'_esy$.fdw'
'Erase 'Pgm'_'File'_esy$.W'
'Erase 'Pgm'_'File'_esy$.S'

If WordPos('EXIT',Line) \= 0
   Then Do
        Exit = Substr(Line,Pos(' EXIT',Line)+6)
        Line = Delword(Line,WordPos('EXIT',Line))
        SubProg = Word(Exit,1)
        If Substr(SubProg,1,1) \= "'" & Substr(SubProg,1,1) \= '"'
           Then SubProg = "'"SubProg"'"
        Exit = DelWord(Exit,1,1)
        If WordPos('NR',Exit) \= 0
           Then Do
                NR = 1
                Exit = Delword(Exit,WordPos('NR',Exit),1)
                End
           Else NR = 0
        If WordPos('MODIFY',Exit) \= 0
           Then Do
                Modifiy = 1
                Exit = Delword(Exit,WordPos('MODIFY',Exit),1)
                End
           Else Modifiy = 0
        'Kedit 'File'_esy$.subprog (Nomsg'
        'Del *'
        'Input CALL 'SubProg Exit
        If Nr = 1
           Then Do
                'Input   ON EXCEPTION'
                'Input      SET INDALT TO @'
                'Input      PERFORM RT-MONTA-MSG'
                'Input END-CALL'
                End
        If Modifiy = 1
           Then       'Input       * MODIFY'
        'FFile'
        End
If WordPos('TABLE',Line) \= 0
   Then Do
       'Set Point .TabTop'
        Instream = WordPos('INSTREAM',Line) \= 0
        Table = 1
        TabType = Word(Line,WordPos('TABLE',Line)+1)
        Line = DelWord(Line,WordPos('TABLE',Line),2)
        If Instream \= 0
           Then Do
                Notabs = 'A N 2'
                'Erase 'File'.val'
                Do Forever
                   'Next'
                   If Rc \= 0 Then Leave
                   'Extract/CurLine'
                   If WordPos(Word(CurLine.3,Words(CurLine.3)),Notabs) = 0
                      Then Leave
                End
                'Put /ENDTABLE/ 'File'.val'
                'Del /ENDTABLE/ '
                'Del'
                End
             Else If DataType(TabType) \= 'NUM'
                     Then TabType = 5000
        'Kedit 'Pgm'.cbl (Nomsg'
        '.EndSys'
        'Up'
        "Input       *"
        'Set Point .EndSys'
        'Input       *----------------------------------------------------------------*'
        'Input       * TABELA 'File
        'Zone 72 72'
        'Change / /*/1 1'
        'Zone 1 *'
        'Input       *----------------------------------------------------------------*'
        Void = Blank()
        'Input        01  WS-TABELA-'File'.'
          'Set Point .Table'
        'Kedit 'Pgm'.'Ftype' (Nomsg'
        '.TabTop'
        End

RecMode = 'F'
If Pos('(',Line) \= 0
   Then Do
        FB = Substr(Line,Pos('(',Line))
        FB = Translate(FB,'  ','()')
        Lrecl = Word(FB,1)
        Block = Word(FB,2)
        If DataType(Block) \= 'NUM'
           Then Block = 0
        If DataType(LrecL) \= 'NUM'
           Then LrecL = 0
        End

If WordPos('WORKAREA',Line) \= 0 & Lrecl = 0 & DataType(Word(Line,Words(Line))) = 'NUM'
   Then LrecL = Word(Line,Words(Line))

If WordPos('V',Line) \= 0
   Then RecMode = 'V'

If WordPos('U',Line) \= 0
   Then RecMode = 'U'

If WordPos('FB',Line) \= 0 | Pos('FB(',Line) \= 0
   Then RecMode = 'FIXED'

If WordPos('VBS',Line) \= 0 | Pos('VBS(',Line) \= 0
   Then RecMode = 'VBS'

If WordPos('VB',Line) \= 0 | Pos('VB(',Line) \= 0
   Then RecMode = 'VARIABLE'

Devices = File' CARD PUNCH PRINTER DISK TAPE SYSLST SYSPCH SYSIPT '
If Pos(' SYS',Line) \= 0
   Then Do
        Sys = Substr(Line,Pos(' SYS',Line))
        Sys = Word(Sys,1)
        Line = DelWord(Line,WordPos(Sys,Line),1)
        End
   Else Do I = 1 To Words(Line)
           Word = Word(Line,I)
           If WordPos(Word,Devices) \= 0
              Then Do
                   Sys = Word
                   If Sys = 'CARD' | Sys = 'PUNCH' | Sys = 'SYSIPT' | Sys = 'SYSPCH'
                      Then LrecL = 080
                   End
        End

If Sys = 'DISK'
   Then Sys = File

Org = 'SEQUENTIAL'

If WordPos('WORKSDS',Line) \= 0 & WordPos('IS',Line) \= 0 | WordPos('VS',Line) \= 0 | WordPos('VIRTUAL',Line) \= 0
   Then Org = 'INDEXED'

If WordPos('RRDS',Line) \= 0
   Then Org = 'RELATIVE'

If WordPos('PRINTER',Line) \= 0
   Then Do
        If LrecL = 0 & Printers = 0
           Then Return File
        Printer = 1
        End

If LrecL = 0 & Printer = 0
   Then Do
        '.File'
        MaxEnd = 0
        Do Forever
           'Next'
           If Rc \= 0 Then Leave
           'Extract/CurLine'
           First = Word(CurLine.3,1)
           If Pos('*',First) \= 1
              Then Do
                   If WordPos('PROC',CurLine.3) \= 0 Then Leave
                   If Last(CurLine.3) = 'PROC' Then Leave
                   If WordPos(Word(CurLine.3,1),Commands) \= 0
                      Then Leave
                   If WordPos('W',Curline.3) = 0 & WordPos('S',Curline.3) = 0
                      Then Do
                           PosType = WordPos('A',CurLine.3)
                           If PosType = 0 Then PosType = WordPos('N',CurLine.3)
                           If PosType = 0 Then PosType = WordPos('P',CurLine.3)
                           If PosType = 0 Then PosType = WordPos('U',CurLine.3)
                           If PosType = 0 Then PosType = WordPos('B',CurLine.3)
                           If PosType \= 0 & DataType(Word(CurLine.3,PosType-2)) = 'NUM' & DataType(Word(CurLine.3,PosType-1)) = 'NUM'
                              Then Do
                                   MaxEnd = Word(CurLine.3,PosType-2) + Word(CurLine.3,PosType-1) - 1
                                   If MaxEnd > LrecL
                                      Then LrecL = MaxEnd
                                   End
                           End
                   End
        End
        '.File'
        End
If LrecL = 0 & Printer = 1
   Then LrecL = 132
'Kedit 'File'_esy$.fd (NoMsg'
'Del *'
'Add 'Lrecl
'SSave 'Pgm'_'File'_esy$.fdw'
'Kedit 'Pgm'.cbl  (Nomsg'
If Table \= 0
   Then Do
        If DataType(TabType) = 'NUM'
           Then Occurs = TabType
           Else Do
                'Kedit 'File'.val (Nomsg'
                'Sort * a 1 *'
                'Extract/Size'
                Occurs = Size.1
                'Shift Right 1 *'
                "Change/ /           03 PIC X("LrecL") VALUE '/*"
                'Top'
                Do Forever
                   'Next'
                   If Rc \= 0 Then Leave
                   "Cappend'."
                   'Extract/CurLine'
                   If Length(CurLine.3) > 72
                      Then Do
                           If Substr(CurLine.3,73) = '.'
                              Then 'Change/VALUE /VALUE/1 1'
                              Else Do
                                   Resto = Substr(CurLine.3,73)
                                   'Zone 73 *'
                                   'Change/$//1'
                                   "Input 000000-         '"Resto
                                   End
                           End
                End
                'FFile'
                '.Table'
                'Get 'File'.val'
                'Erase 'File'.val'
                Void = Blank()
                'Input        01  REDEFINES WS-TABELA-'File'.'
                End
        'Input        02  REG-'File' OCCURS 'Occurs' INDEXED BY IND-'File'.'
        If DataType(TabType) \= 'NUM'
           Then Do
                'Top'
                'Kedit 'Pgm'.'Ftype' (Nomsg'
                Return '>'File
                End
        End
'Top'
'/DATA DIVISION.'
'Up'
If Printer = 1 | Sys = 'CARD' | Sys = 'PUNCH'
   Then 'Input            SELECT 'File' ASSIGN TO 'Sys'.'
   Else Do
        If Length(File) < 6
           Then File = Substr(File,1,6)
        'Input            SELECT 'File' ASSIGN TO 'Sys
        Is = Copies(' ',Length(File)-6)'IS'
        File = Space(File)
        'Input                   ORGANIZATION  'is' 'Org
        'Set Point .ORG_'Translate(File,'_','-')
        If Org = 'INDEXED'
           Then Do
                'Input                   RECORD KEY    'is' 'File'-KEY'
                'Set Point .key_'Translate(File,'_','-')
                'Input                   ACCESS MODE   'is' SEQUENTIAL'
                End
        If Org = 'RELATIVE'
           Then Do
                'Input                   ACCESS MODE   'is' SEQUENTIAL'
                'Input                   RELATIVE KEY  'is' 'File'-KEY'
                 'Set Point .RKEY_'Translate(File,'_','-')
                End
        'Input                   FILE STATUS   'is' FL-STA-'File'.'
        End
Void = Blank()
'/       WORKING-STORAGE SECTION./'
'-/ PIC /|/ FILE SECTION./|/ VALUE /'
Void = Blank()
'Input        FD  'File
If Printer = 1
   Then 'Input            LABEL RECORD IS OMITTED.'
   Else Do
        'Input            RECORDING MODE IS 'RecMode
        If RecMode = 'VARIABLE' | RecMode = 'V'
           Then Do
                'Input            RECORD IS VARYING IN SIZE'
                'Input            FROM 0 TO 'Lrecl' CHARACTERS'
                'Input                   DEPENDING ON RECORD-LENGTH'
                End
           Else 'Input            RECORD CONTAINS 'Lrecl' CHARACTERS'
        'Input            BLOCK CONTAINS 0 RECORDS.'
         If Block \= 0
            Then Do
                 Recs = Block % Lrecl
                 'Change / 0 / 'Recs' /1 1'
                 End
        End
Void = Blank()
'Input        01  REG-'File'.'
If Table \= 0
   Then Do
        'Change/.//1'
        'Zone 46 *'
        'Change//PIC  X('LPad(LrecL,3)')./1'
        'Zone 1 *'
        End
If Table \= 0
   Then Do
        Void = Open(File,'INPUT',SYSORT,'START','NOCLOSE')
        'Kedit 'Pgm'.'Ftype' (Nomsg'
        Return '>'File
        End
'Kedit 'Pgm'.'Ftype' (Nomsg'
If Sys = 'CARD' | Sys = 'SYSIPT'
   Then Do
        'Set Point .Card'
        ' / END /'
        If Rc \= 0
           Then Do
                'Zone 1 4'
                '/END /'
                End
        If Rc = 0
           Then Do
                'Del'
                'Erase 'Sys'.'
                'Put * 'Sys'.'
                End
        'Zone 1 *'
        '.Card'
        End
Return File LrecL

Define: Procedure
Pgm = Word(Arg(1),1);Commands = DelWord(Arg(1),1,1)
Ftype = Arg(2)
File = Arg(3)
If Pos('>',File) = 1
   Then Do
        Table = 1
        File = Substr(File,2)
        End
   Else Table = 0
Line = Arg(4)
Last = Last(Line)
LrecL = Arg(5)
If Pos('*',Word(Line,1)) = 1
   Then Do
        'Del'
        'Up'
        If Words(Line) > 1
           Then Do
                'Kedit 'File'.Fdc'
                'Bot'
                'Input       'Line
                'FFile'
                End
        Return File
        End
'Set Point .End_'Translate(File,'_','-')
'Set Point .CurLine'
If Word(Line,1) = 'DEFINE'
   Then Line = DelWord(Line,1,1)
If WordPos('OCCURS',Line) \= 0
   Then Do
        'Kedit 'Pgm'_esy$.occurs (NoMsg'
        'Bot'
        Line = Translate(Line,'  ','()')
        Times = Word(Line,WordPos('OCCURS',Line)+1)
        'Input  'Word(Line,1)' OCCURS 'Times
        Line = Delword(Line,WordPos('OCCURS',Line),2)
        If WordPos('INDEX',Line) \= 0
           Then Do
                'CAppend  INDEXED BY 'Word(Line,WordPos('INDEX',Line)+1)
                Line = Delword(Line,WordPos('INDEX',Line),2)
                End
        'FFIle'
        End
    Else Times = 1
If WordPos('INDEX',Line) \= 0
   Then Do
        Line = Translate(Line,'  ','()')
        Index = Word(Line,WordPos('INDEX',Line)+1)
        Line = Delword(Line,WordPos('INDEX',Line),2)
        'Kedit 'File'_esy$.index (NoMsg'
        'Extract/Size'
        '/ 'Index' /'
        If Rc \= 0
           Then Do
                'Bot'
                If Size.1 = 0
                   Then 'Input                   RECORD KEY    IS 'Index' = 'Word(line,1)
                   Else 'Input                   ALTERNATE KEY IS 'Index' = 'Word(line,1)
                End
           Else 'CAppend  'Word(line,1)
        'FFile'
        End

PosValue = WordPos('VALUE ',Line)
If PosValue = 0
   Then Value = ''
   Else Do
        Value = 'VALUE 'Word(Line,PosValue+1)
        Line = DelWord(Line,PosValue,2)
        If Pos("'",Value) = 0 & Pos('"',Value) = 0
           Then Do
                If Pos(',',Value) \= 0
                   Then Do
                        OldValue = Translate(Word(Value,2),' ',',')
                        Value = ''
                        Do V = 1 To Words(OldValue)
                           Value = Value''Word(OldValue,V)
                        End
                        End
                Valor = Word(Value,Words(Value))
                If DataType(Valor) = 'NUM'
                   Then Valor = Valor + 0
                Value = 'VALUE 'Translate(Valor,',','.')
                End
        End

If WordPos('MASK',Line) \= 0
   Then Do
        'Kedit 'Pgm'_esy$.tab (NoMsg'
        Mask = Substr(Line,Pos('MASK',Line))
        MaskX = Word(Mask,2)
        If Pos('(',MaskX) \= 0
           Then Mask = Substr(Mask,1,Pos(')',Mask))
        'Input  'Line
        'Set Arbchar Off'
        'Change 'Mask'  1'
        'Set Arbchar On'
        'Extract/CurLine'
        Line = CurLine.3
        'Replace  'Word(Line,1) Mask
        'FFile'
        End

If WordPos('HEADING',Line) \= 0
   Then Do
        'Kedit 'Pgm'_esy$.tab (NoMsg'
        Heading = Substr(Line,Pos('HEADING',Line))
        Field = Word(Line,1)
        Heading = DelWord(Heading,1,1)
        If Substr(Heading,1,1) = '('
           Then Heading = Substr(Heading,2,Pos(')',Heading)-2)
        'Input  'Line
        'Change HEADING  1'
        'Change 'Heading'  1'
        'Extract/CurLine'
        Line = CurLine.3
        Heading = DelWord(Heading,1,1)
        Heading = Space(Heading)
     *  Heading = Translate(Heading,'∞',' ')
        'Replace  'Field' HEADING 'Multiplo(Heading)
        'FFile'
        End

DataName = Word(Line,1)
If Substr(DataName,Length(DataName),1) = '˚'
   Then Do
        OldName = DataName
        DataName = File'-'Substr(DataName,1,Length(DataName)-1)
        'Kedit 'Pgm'_esy$.ren (NoMsg'
        'Bot'
        'Input  'OldName  DataName
        'FFile'
        'Kedit 'Pgm'_esy$.tab (NoMsg'
        'Bot'
        'Input  'DataName' AS 'Translate(OldName,'˚','˚')
        'FFile'
        Line = DataName' 'DelWord(Line,1,1)
        'Kedit 'Pgm'.cbl (Nomsg'
        '.RKEY_'Translate(File,'_','-')
        If Rc = 0
           Then Do
                'Change/ IS $/ IS 'DataName'/1'
                '.RKEY_'Translate(File,'_','-')
                'Up'
                'Extrac/CurLine'
                If WordPos('SEQUENTIAL',CurLine.3) \= 0
                   Then 'Change/SEQUENTIAL/DYNAMIC/1'
                End
        'Kedit 'Pgm'.'Ftype' (Nomsg'
        End

If (WordPos(DataName,Commands) \= 0 | Last = 'PROC') & File \= ''
   Then Do
        'Up'
        'Set Point .CurLine'
        'Next'
        'Kedit 'File'_esy$.fd (NoMsg'
        'All blank'
        If Rc = 0
           Then 'Change/  / [A] FILLER /*'
        'All'
        'Top'
        FieldLevel = 3
        Do Forever
           '/[$]'
           If Rc \= 0
              Then Leave
           'Extract/Curline'
           Line = CurLine.3
           'Next'
           Len = 1
           Do Forever
              If Rc \= 0
                 Then Leave
              'Extract/Curline'
              If CurLine.3 \= Line
                 Then Leave
                 Len = Len + 1
              'Del'
           End
           If Len \= 0
              Then Do
                   'Up'
                   'CAppend   'Len
                   Len = 0
                   End
        End
        * Junta
        'Erase 'Pgm'_'File'_esy$.tempfd'
        Redefines = ''
        Nexts = 0
        Do Forever
            Reg = ''
           'Top'
           '/[$]/|/123456 01'
           If Rc \= 0
              Then Leave
           'Extract/CurLine'
           If Pos('123456',CurLine,3) = 1
              Then Do
                   Redefines = ''
                   '/[$]/'
                   If Rc \= 0
                      Then Leave
                   'Extract/CurLine'
                   End
           'Set Point .Field'
           Type = Word(CurLine.3,1)
           Pic = Word(Translate(Type,'   ','>[]'),1)
           If Pic = 'A' Then Pic = ' X'
           DataName = Word(CurLine.3,2)
           'Up'
           MaxWords = 0
           Parts = 0
           If Pos('FILLER',CurLine.3) = 0
              Then  Do Forever
                    'Next'
                    If Rc \= 0 Then Leave
                    'Extract/CurLine'
                    If Word(CurLine.3,2) \= DataName
                       Then Leave
                    Parts = Parts + 1
                    If Words(CurLine.3) > MaxWords
                       Then MaxWords = Words(CurLine.3)
                    End
           If Parts < 2
              Then MaxWords = 0
           '.Field'
           'Up'
           If MaxWords \= 0
              Then Do Forever
                      'Next'
                      If Rc \= 0 Then Leave
                      'Extract/CurLine'
                      If Word(CurLine.3,2) \= DataName
                         Then Leave
                      If Word(CurLine.3,2) = DataName & Words(CurLine.3) < MaxWords
                         Then Do Forever
                                 'Extract/CurLine'
                                 If Words(CurLine.3) \< MaxWords
                                    Then Leave
                                 Nexts = Nexts + 1
                                 'Change/  / [A] filler-'LPad(Nexts,4)'  /1'
                              End
                   End
           Len = 0
           Itens = 0
           FieldLeval = 3
           Red = 0
           '.Field'
           'Up'
           Do Forever
              'Next'
              If Rc \= 0 Then Leave
              'Extract/CurLine'
              If Word(CurLine.3,2) = DataName
                 Then Do
                      Itens = Itens + 1
                      'Extract/CurLine'
                      Len = Len + Last(CurLine.3)
                      'Change/ [$] 'DataName' / /1'
                      'Extract/CurLine'
                      If Pos('[',CurLine.3) \= 0 | Itens > 1
                         Then Red = 1
                      End
                 Else Leave
           End
           If Word(Curline.3,1) = '000000'
              Then Do
                   Redefines = ''
                   Reg = 'End'
                   End
           Plus = Words(Redefines)
           If DataType(Xred) = 'NUM'
              Then Do
                   If FieldLevel+Plus \> Xred
                      Then Plus = Xred + 1 - FieldLevel
                   *   Xred = ''
                   End
           X = Copies(' ',Plus*3)' '
           LV = X''LPad(FieldLevel+Plus,2)
           'Kedit 'Pgm'_'File'_esy$.tempfd (NoMsg'
           'Bot'
           'Input           'LV  DataName 'PIC 'Pic'('LPad(Len,3)').'
           If Words(Redefines) \= 0
              Then Do
                   WItens = Word(Redefines,Words(Redefines)) - 1
                   Redefines = DelWord(Redefines,Words(Redefines))
                   If WItens \= 0
                      Then Redefines = Redefines' 'WItens
                  End
           If Red = 1
              Then Do
                   'Input           'LV' REDEFINES 'DataName'.'
                   Redefines = Redefines' 'Itens
                   Xred = Word(LV,1)
                   End
              Else Xred = ''
           If Reg = 'End'
              Then 'Input 123456 01.'
           'FFile'
        End
        'Top'
        'Del *'
        'Get 'Pgm'_'File'_esy$.tempfd'
        'Erase 'Pgm'_'File'_esy$.tempfd'
        'Top'
        Do Forever
            '/ PIC /'
           If Rc \= 0 Then Leave
           'Extract/CurLine'
           If Pos('PIC',CurLine.3) < 46
              Then 'Change / PIC /'Copies(' ',46-Pos('PIC',CurLine.3))' PIC /1 1'
           Pic = Word(CurLine.3,WordPos('PIC',CurLine.3)+1)
           Type = Substr(Pic,1,1)
           If Type = 'P' | Type = 'N' | Type = 'U' | Type = 'B'
              Then Do
                   Pic = Translate(Pic,'  ','()')
                   Dec = Substr(Word(Pic,1),2)
                   Len = Word(Pic,2)
                   Comp = ''
                   If Type = 'P' | Type = 'B'
                      Then Len = (Len * 2) - 2
                   If Dec \= ''
                      Then Len = Len - Dec
                   If Len = 0 & Dec = ''
                      Then Len = 1
                   If Len = 0
                      Then New = ' '
                   If Type = 'U'
                      Then New = ' 9('LPad(Len,3)')'
                      Else If Type = 'N' & Len < 8 & Dec = ''
                              Then  New = ' 9('LPad(Len,3)')'
                              Else  New = 'S9('LPad(Len,3)')'
                   If Dec \= ''
                      Then New=New'V9('LPad(Dec,2)')'
                   'Change/ PIC $/ PIC 'New'/1 1'
                   If Type = 'P'
                      Then Comp = '  COMP-3'
                   If Type = 'B'
                      Then Comp = '  COMP-5'
                   'Cappend'Comp'.'
                   End
        End
        Keys = ''
        'Top'
        Do Forever
           '/˚ /'
           If Rc \= 0 Then Leave
           'Extract/CurLine'
           Line = Translate(CurLine.3,' ','.')
           Do I = 1 To Words(Line)
              Word = Word(Line,I)
              If Pos('˚',Word) \= 0 & WordPos(Word,Keys) = 0
                 Then Keys=Keys' 'Word
           End
        End
        'Kedit 'File'_esy$.fd (NoMsg'
        'File'
        'Kedit 'Pgm'.cbl (Nomsg'
        'Bot'
        '-/01 REG-'File'./|/02 REG-'File' OCCURS /'
        'Extract/CurLine'
        If WordPos('OCCURS',CurLine.3) \= 0
           Then 'Change/ REG-/ /1 1'
        'Get 'File'_esy$.fd'
      * Primeiro campo como chave
      * 'Set Point .DataName'
      * '.key_'Translate(File,'_','-')
      * If Rc = 0
      *    Then Do
      *         NotFound = 0
      *         '.DataName'
      *         '-/ REG-'File'./'
      *         '/ REDEFINES /|/*/'
      *         'Extract/CurLine'
      *         If Pos('*',CurLine.3) \= 0
      *            Then Do
      *                 '-/ REG-'File'./'
      *                 '/ PIC /|/*/'
      *                 'Extract/CurLine'
      *                  If Pos('*',CurLine.3) \= 0
      *                     Then NotFound = 1
      *                 End
      *             Else 'Up'
      *         If NotFound = 0
      *            Then Do
      *                 'Extract/CurLine'
      *                 DataName = Word(CurLine.3,2)
      *                 If DataName = 'FILLER'
      *                    Then 'Change/'Substr('FILLER',1,Length(File'-KEY'))'/'File'-KEY/1'
      *                    Else Do
      *                         '.Key_'Translate(File,'_','-')
      *                         'Change/'File'-KEY/'Dataname'/1'
      *                         End
      *                 'Set Point .key_'Translate(File,'_','-')' Off'
      *                 End
      *         '.DataName'
      *         End
      * 'Set Point .DataName Off'
        Void = Blank()
        'Set Point 'CheckRemove(Pgm,File,'W','.DISPLAYS')
        '.EndSys'
        'Up'
        'Set Point .CRemove'
        'Set Point 'CheckRemove(Pgm,File,'S','.CRemove')
        If Keys \= ''
           Then Do
                'Top'
                '/ SELECT 'File' /'
                '/ SEQUENTIAL /'
                'Change/SEQUENTIAL/INDEXED/1 '
                'Dup'
                'Change/ORG$/ACCESS MODE   IS SEQUENTIAL/1 1'
                'Up'
                Do I = 1 To Words(Keys)
                   'Set Point .SelKey'
                   Key = Word(Keys,I)
                   If I = 1
                      Then 'Input                   RECORD KEY    IS '
                      Else 'Input                   ALTERNATE KEY IS '
                   'Cappend  'Key
                   '/03 'Key' /|/03 'Key'./'
                   LenKey = 0
                   Do Forever
                      'Change/      COMP-3 / COMP-3 /1 1'
                      If Rc \= 0
                         Then 'Change/      PIC / PIC /1 1'
                      'Change/ VALUE$//1 '
                      'Change/S9/ 9/1 1'
                      'Cappend.'
                      'Extract/CurLine'
                      Pic = Substr(CurLine.3,Pos(' PIC',CurLine.3)+5)
                      Pic = Translate(Pic,'  ','(.)')
                      Len = Word(Pic,2)
                      If Words(Pic) > 2 & DataType(Word(Pic,4)) = 'NUM'
                         Then Len = Len + Word(Pic,4)
                      LenKey = LenKey + Len
                      'Put 1'
                      'Del'
                      'Extract/CurLine'
                      If Word(CurLine.3,1) = '03' & WordPos('REDEFINES',CurLine.3) = 0 | Pos('*',CurLine.3) \= 0
                         Then Leave
                   End
                   '-/ REG-'File'./'
                   If Rc = 0
                      Then Do
                           '/ FILLER /'
                           If Rc = 0
                              Then Do
                                   'Extract/CurLine'
                                   Pic = Substr(CurLine.3,Pos(' PIC',CurLine.3)+5)
                                   Pic = Translate(Pic,'  ','(.)')
                                   LenFiller = Word(Pic,2) - LenKey
                                   If LenFiller > 0
                                      Then 'Change/($)/'LPad(LenFiller,3)'/1 1'
                                      Else Do
                                           'Del'
                                           'Up'
                                           End
                                   End
                           End
                      Else 'Bot'
                   'Get'
                   '.SelKey'
                End
                End

        'Kedit 'Pgm'.'Ftype' (Nomsg'
        '.CurLine'
        Return ''
        End

Void = Comment(Pgm,DataName)
Def = ''
If WordPos('W',Line) \= 0
   Then Def = 'W'
If WordPos('S',Line) \= 0
   Then Def = 'S'
PosType = WordPos('A',Line)
If PosType = 0 Then PosType = WordPos('N',Line)
If PosType = 0 Then PosType = WordPos('P',Line)
If PosType = 0 Then PosType = WordPos('U',Line)
If PosType = 0 Then PosType = WordPos('B',Line)
Type = Word(Line,PosType)
Len = Word(Line,PosType-1)
If Def \= '' & DataType(Len) \= 'NUM' & DataType(Word(Line,PosType+1)) = 'NUM'
   Then Do
        Len = Word(Line,PosType+1)
        Dec = 0
        End
   Else If (Type = 'N' | Type = 'P') & DataType(Word(Line,PosType+1)) = 'NUM'
           Then Dec = Word(Line,PosType+1)
           Else Dec = 0
Posit = Word(Line,PosType-2)
IF Posit = '*'
   Then Posit = -1
If DataType(Posit) \= 'NUM'
   Then Posit = 0
If DataType(Word(Line,2)) \= 'NUM' & WordPos(Word(Line,2),'A N P W S U B *') = 0
   Then Red = Word(Line,2)
   Else Red = ''
Toc = Times
Occurs = 1
NotFD = 0
If Def = '' & Red = ''
   Then Do
        'Kedit 'File'_esy$.fd (NoMsg'
        If Posit = -1
           Then Do
                'Top'
                'Locate Blank'
                'Extract/Line'
                Posit = Line.1
                End
        If Dec \= 0
           Then DecX = Dec
           Else DecX = ''
        ':'Posit
        'Extract/CurLine/Line'
        Start = Line.1
        Do Forever
           ':'Start
           'Extract/CurLine'
           WordsFirst = Words(CurLine.3)
           LastName = Last(CurLine.3)
           NewRec = 0
           'Up'
           Do Forever
              '~Blank'
              If Rc \= 0
                 Then Leave
              'Extract/CurLine/Line'
              If Word(CurLine.3,1) = '000000'
                 Then Leave
              If Line.1 > (Start + Len - 1)
                 Then Leave
              If Words(CurLine.3) > WordsFirst | Words(CurLine.3) > 2
                 Then NewRec = 1
                 Else if LastName \= '' & WordPos(LastName,CurLine.3) = 0
                         Then NewRec = 1
              If NewRec = 1
                 Then Leave
              Lex = Len
              'Set Point .Lex'
              ':'Start
              'Extract/Curline'
              XStart = CurLine.3
              Do Forever
                 Lex = Lex - 1
                 If Lex < 1 Then Leave
                 'Next'
                 If Rc \= 0 Then Leave
                 'Extract/Curline'
                 If CurLine.3 \= Xstart
                    Then Do
                         NewRec = 1
                         Leave
                         End
              End
              '.Lex'
              If NewRec = 1
                 Then Leave
           End
           ':'Start
           If NewRec = 1 | Toc > 1
              Then Do
                   Toc = 0
                   '/000000 01.'
                   If Rc \= 0
                      Then Do
                           'Bot'
                          'Input 000000 01.'
                          'Set Point .NewRec'
                          'Add 'LrecL
                          '.NewRec'
                           End
                   'Next 'Posit
                   'Extract/Line'
                   Start = Line.1
                   End
              Else Leave
         End
        'Change/  / ['Type''DecX'] 'DataName' /'Len
        Void = Aloca(Len,Times)
        End
   Else Do
        If Red \= '' & Def = ''
           Then Do
                'Kedit 'File'_esy$.fd (NoMsg'
                'Top'
                '/ 'Red' /'
                If Rc \= 0
                   Then Do
                        Def = 'W'
                        'Kedit 'Pgm'_'File'_esy$.S (NoMsg'
                        'Top'
                        '/ 'Red' /'
                        If Rc = 0
                           Then Def = 'S'
                        'Kedit 'File'_esy$.fd (NoMsg'
                        End
                   Else Do
                        If Substr(Posit,1,1) = '+'
                           Then 'Next 'Posit
                        'Extract/CurLine'
                        'Change/  / ['Type'] 'DataName' / 'Len
                        Void = Aloca(Len,Times)
                        End
                End
        End
If Def \= ''
   Then Do
        'Kedit 'Pgm'_'File'_esy$.'Def' (NoMsg'
        LenB = Len
        LV = '03'
        DataDef = DataName' PIC'
        If Type = 'P'
           Then Do
                Len = (Len * 2) - 2
                Comp = ' COMP-3'
                End
           Else Comp = ''
        Len = Len - Dec
        If WordPos(Type,'N P U B') \= 0
           Then If Type = 'U' | (Type = 'N' & Dec = 0 & Len < 8)
                   Then Pix = '∞9'
                   Else Pix = 'S9'
           Else Pix = ' X'
        DataDef = DataDef' 'Pix'('LPad(Len,3)')'
        If Dec \= 0
           Then DataDef = DataDef'V'Copies('9',Dec)
           Else DataDef = DataDef'   '
        DataDef=DataDef''Comp
        If Red = ''
           Then Do
               If Value \= ''
                   Then DataDef = DataDef' 'Value
                   Else Do
                        If Type = 'A'
                           Then DataDef = DataDef' VALUE SPACE'
                           Else DataDef = DataDef' VALUE ZERO'
                        If Len > 1 Then DataDef = DataDef'S'
                        End
                End
           Else If Value \= ''
                   Then Do
                        'Kedit 'Pgm'_esy$.init (NoMsg'
                        'Bot'
                        'Input            MOVE 'DelWord(Value,1,1)
                        'Zone 43 *'
                        'Change/ / TO 'DataName' /1'
                        'Zone 1 *'
                        'Extract/CurLine'
                        If Pos(' TO ',CurLine.3) > 43 | Length(CurLine.3) > 72
                           Then Do
                                'Change/ TO $//'
                                'Input              TO 'DataName
                                End
                        'FFile'
                        End
        'Extract/CurLine'
        LV = '03'
        'Top'
        If Red \= ''
           Then Do
                '/ redefines 'Red'.'
                If Rc \= 0 | Substr(Posit,1,1) = '+'
                   Then Do
                        If Substr(Posit,1,1) = '+'
                           Then 'Top'
                        '/ 'Red' PIC /'
                        'Extract/CurLine'
                        Lv = Word(CurLine.3,1)
                        If Substr(Posit,1,1) = '+'
                           Then Do
                                '/ 'LV' /&~/ redefines ' Red'./'
                                If Rc \= 0
                                   Then 'Bot'
                                   Else 'Up'
                                End
                        'Input'Copies(' ',Pos(LV,CurLine.3))LV' redefines 'Red'.'
                        LV = LPad(LV+1,2)
                        If Substr(Posit,1,1) = '+'
                           Then 'Input        'Copies(' ',(LV-3+1)*3)' 'LV 'check-remove-'Posit+0'-'LenB' PIC  X('LPad(Posit+0,3)'). !> 'Posit+0
                        End
                Else Do
                     'Extract/CurLine'
                     Lv = Word(CurLine.3,1)
                     LV = LPad(LV+1,2)
                     'Bot'
                     'Next'
                     '-/ redefines 'Red'.'
                     End
                End
           Else 'Bot'
        'Input        'Copies(' ',(LV-3+1)*3)' 'LV  DataDef
        'CAppend.  !> ' LenB
        If Red \= ''
           Then 'CAppend  !> redefines 'Red'.'
        End
* Primeiro campo como chave
If Def = ''
   Then Do
        'Kedit 'Pgm'.cbl (Nomsg'
        'Set Point .DataName'
        '.key_'Translate(File,'_','-')
        If Rc = 0
           Then Do
                'Change/'File'-KEY/'Dataname'/1'
                 'Set Point .key_'Translate(File,'_','-')' Off'
                '.DataName'
                End
        'Set Point .DataName Off'
        End

'Kedit 'Pgm'.'Ftype' (Nomsg'
'.CurLine'
Return File

Aloca: Procedure
If Arg(2) < 2 Then Return 1
Do I = 2 To Arg(2)
   'Next 'Arg(1)
   'Extract/Line'
   'Change/  / [A] philler-C'Line.1' /'Arg(1)
End
Return 0

LPad: Procedure
Var = Arg(1)
Len = Arg(2)
Do Forever
   If Length(Var) \< Len
      Then Leave
   If Substr(Var,1,1) = '-' | Substr(Var,1,1) = '+'
      Then Var = Substr(Var,1,1)'0'Substr(Var,2)
      Else Var='0'Var
End
Return Var

Job: Procedure
Pgm  = Word(Arg(1),1);Commands = DelWord(Arg(1),1,1)
Ftype= Arg(2)
Mode = Word(Arg(3),2)
File = DelWord(Arg(3),1,2)
Jobs = Arg(4) + 1
If Jobs = 1
   Then 'Erase 'Pgm'_$esy.merge'
Outs = 'PUT WRITE'
Inps = 'GET READ'
Outputs  = ''
Inputs   = ''
Closes = ''
Files = ''
Keys = ''
Merges = 0
JobNum = LPad(Jobs,3)
'Kedit 'Pgm'.cbl  (Nomsg'
'.PROCESSAR'

If WordPos('START',File) \= 0 | Pos(' START(',File) \= 0
   Then Do
        Pos = WordPos('START',File)
        If Pos \= 0
           Then Do
                JobStart = Word(File,Pos+1)
                If Pos('(',JobStart) = 1
                   Then Do
                        JobStart = Substr(File,Pos)
                        JobStart = Substr(JobStart,1,Pos(')',JobStart))
                        File = DelWord(File,Pos,Words(JobStart))
                        JobStart = DelWord(JobStart,1,1)
                        JobStart = Space(Translate(JobStart,'  ','()'))
                        End
                   Else FIle = DelWord(File,Pos,2)
                End
           Else Do
                JobStart = Substr(File,Pos(' START(',File)+1)
                JobStart = Substr(JobStart,1,Pos(')',JobStart))
                File = DelWord(File,WordPos(Word(JobStart,1),File),Words(JobStart))
                JobStart = Space(Translate(JobStart,'  ','()'))
                JobStart = DelWord(JobStart,1,1)
                End
        End
   Else JobStart = ''

If WordPos('FINISH',File) \= 0 | Pos(' FINISH(',File) \= 0
   Then Do
        Pos = WordPos('FINISH',File)
        If Pos \= 0
           Then Do
                JobFinish = Word(File,Pos+1)
                If Pos('(',JobFinish) = 1
                   Then Do
                        JobFinish = Substr(File,Pos)
                        JobFinish = Substr(JobFinish,1,Pos(')',JobFinish))
                        File = DelWord(File,Pos,Words(JobFinish))
                        JobFinish = DelWord(JobFinish,1,1)
                        JobFinish = Space(Translate(JobFinish,'  ','()'))
                        End
                   Else FIle = DelWord(File,Pos,2)
                End
           Else Do
                JobFinish = Substr(File,Pos(' FINISH(',File)+1)
                JobFinish = Substr(JobFinish,1,Pos(')',JobFinish))
                File = DelWord(File,WordPos(Word(JobFinish,1),File),Words(JobFinish))
                JobFinish = Space(Translate(JobFinish,'  ','()'))
                JobFinish = DelWord(JobFinish,1,1)
                End
        End
   Else JobFinish = ''

If WordPos('NAME',File) \= 0
   Then Do
        JobName = Word(File,WordPos('NAME',File)+1)
        File = DelWord(File,WordPos('NAME',File),2)
        If Length(JobName) > 26
           Then JobName = Substr(JobName,1,26)
        JobName = Translate(Space(Translate(JobName,' ','-')),'-',' ')
        End
If File \= 'NULL'
   Then Do
        Files = Space(File)
        If Words(Files) = 1
           Then JobName = 'ENTRADA-'Word(Files,1)
           Else JobName = 'MERGE-ARQUIVOS'
        If JobNum > 1
           Then JobName = JobName'-'JobNum
        PosOpen = Pos('(',Files)
        If PosOpen = 1 & Substr(Files,Length(Files),1) = ')'
           Then Do
                Files = Substr(Files,2,Length(Files)-2)
                Words = PosOpen
                Words = ''
                Do I = 1 To Words(Files)
                   Word = Word(Files,I)
                   If Substr(Word,1,1) = '('
                      Then Words = Words''Word
                      Else Words = Words' 'Word
                End
                Files = ''
                Open = 0
                Do I = 1 To Length(Words)
                   Char = Substr(Words,I,1)
                   If Char = '('
                      Then Open = 1
                   If Char = ')'
                      Then Open = 0
                   If Char \= ','
                      Then Do
                           If Char = '' & Open = 1
                              Then Char = ','
                           If Char = '('
                              Then Char  = ' '
                           If Char = ')'
                              Then Char = ''
                           Files = Files''Char
                           End
                End
                Words = Files
                Files = ''
                Do I = 1 To Words(Words)
                   Word = Word(Words,I)
                   Files = Files' 'Word
                   If Word(Words,I+1) = 'KEY'
                      Then Do
                           I = I + 2
                           Merges = Merges + 1
                           Key = Word(Words,I)
                           End
                      Else Key = 'nokey'
                   Keys = Keys' 'Key
                End
                End
        If Merges > 1
           Then Do
                'Kedit 'Pgm'_$esy.merge (NoMsg'
                'Bot'
                'Extract/Size'
                If Size.1 = 0
                   Then Do
                        "Input            03 POS       PIC  9(004) VALUE 0."
                        "Input            03 FILE-NUM  PIC  9(004) VALUE 0."
                        End
                "Input            03 MERGE-"JobNum"                        VALUE  ALL '1'."
                "Input               88 MATCHED-"JobNum"                   VALUE  ALL '1'."
                Do I = 1 To Words(Files)
                "Input               04                             PIC  X(001)."
                "Input                  88 "Substr("MATCHED-"JobNum"-"Word(Files,I),1,30)"           VALUE '1'."
                End
                "Input            03 MERGE-"JobNum"-TABLE OCCURS "Merges"."
                "Input               04 MERGE-"JobNum"-KEY  PIC  X(255)."
                "Input               04 MERGE-"JobNum"-FILE PIC  9(002)."
                'FFile'
                End
        End
   Else Do
        JobName = 'JOB-'JobNum
        Files = ''
        'Set Point .OPENS'
        'Input            PERFORM RT-'JobName
        'Set Point .CLOSES'
        End
'.PROCESSAR'
'.OPENS'
Do F = 1 To Words(Files)
   File = Word(Files,F)
   If F = 1
      Then Do
           RcOpens = Rc
           Do I = 1 To Words(Files)
              Open = Word(Files,I)
              If I = 1
                 Then Void = Blank()
              Void = Open(Open,Mode,SYSORT)
              If WordPos(Open,Closes) = 0
                 Then Closes = Closes' 'Open
           End
           Void = Blank()
           'Set Point .OPENS'
           Do I = 1 To Words(JobStart)
              'Input            PERFORM 'Word(Jobstart,I)
           End
           'Input            PERFORM RT-'JobName
           End
   If Mode = 'INPUT'
      Then Do
           If F = 1
              Then 'Input                    UNTIL 'FL(File,10,'EOF')
              Else 'Input                      AND 'FL(File,10,'EOF')
           End
   Do I = 1 To Words(JobFinish)
      'Input            PERFORM 'Word(JobFinish,I)
   End
   If F = Words(Files)
      Then Do
           Void = Blank()
          'Set Point .CLOSES'
          'Set Point .PROCESSAR'
          End
End
Void = NewSection(JobName,'ROTINA 'JobName' (DE JOB EASYTRIEVE)')
If Files \= '' & Mode = 'INPUT'
   Then Do
        If Words(Files) = 1
           Then 'Input            PERFORM RT-'Word(Read(File,SYSORT),1)
           Else Do F = 1 To Words(Files)
                   File = Word(Files,F)
                   'Input            IF  NOT 'FL(File,10,'EOF')
                   If Merges > 1
                      Then 'Input            AND MATCHED-'JobNum'-'File
                   'Input                PERFORM RT-'Word(Read(File,SYSORT),1)
                   'Input            END-IF'
                End
         Do F = 1 To Words(Files)
            File = Word(Files,F)
            If F = 1
               Then 'Input            IF  'FL(File,10,'EOF')
               Else 'Input            AND 'FL(File,10,'EOF')
         End
         'Input                EXIT SECTION'
         'Input            END-IF'
         If Merges > 1
            Then Do
                 Void = Blank()
                 'Input            INITIALIZE MERGES'
                 'Zone 45 *'
                 Do F = 1 To Words(Files)
                    Key = Translate(Word(Keys,F),' ',',')
                    If Words(Key) > 1
                       Then Do
                            'Input            MOVE 1 '
                            'Change/ / TO POS/1'
                            End
                    'Input            MOVE 'F
                    'Change/ / TO MERGE-'JobNum'-FILE('F')/1'
                    'Input            IF  FL-'File'-EOF'
                    'Input                MOVE HIGH-VALUES              TO MERGE-'JobNum'-KEY('F')'
                    'Input            ELSE'
                    Do K = 1 To Words(Key)
                       'Input                MOVE 'Ren(Pgm,Word(Key,K))'(1:)'
                       'Change / / TO MERGE-'JobNum'-KEY('F')'
                    If Words(Key) > 1
                       Then Do
                            'CAppend (POS:)'
                            'Input            ADD  LENGTH 'Ren(Pgm,Word(Key,K))
                            'Change/ / TO POS'
                            End
                    End
                    'Input            END-IF'
                 End
                 'Input            SORT MERGE-'JobNum'-TABLE'
                 'Input                 ON ASCENDING KEY MERGE-'JobNum'-KEY'
                 'Input            PERFORM VARYING POS FROM 1 BY 1'
                 'Input                      UNTIL POS GREATER 'Words(Files)
                 'Input                    IF MERGE-'JobNum'-KEY(POS) EQUAL'
                 'Input                       MERGE-'JobNum'-KEY(1)'
                 'Input                       MOVE MERGE-'JobNum'-FILE('F')'
                 'Change/ / TO FILE-NUM'
                 "Input                       MOVE '1'"
                 'Change/ / TO MERGE-'JobNum'(FILE-NUM:1)/1'
                 'Input                    END-IF'
                 'Input            END-PERFORM'
                 'Zone 1 *'
                 End
        End
'Set Point .JOB'
Do Forever
   'Kedit 'Pgm'.'Ftype' (Nomsg'
   EndEzt = 0
   'Next'
   If Rc \= 0
      Then Leave
   'Extract/CurLine'
   Line = CurLine.3
   First = Word(Line,1)
   If First = 'PARM' | Substr(First,1,1) = '%'
      Then Do
           Void = Flag(Pgm,Ftype,Line)
           'Extract/CurLine'
           Line = CurLine.3
           End
      Else Do
           If WordPos(Word(CurLine.3,1),Commands) \= 0 | Word(Line,2) = 'PROC'
              Then Do
                   'Up'
                   Leave
                   End
           Line = CurLine.3
           'Kedit 'Pgm'.cbl (Nomsg'
           '.JOB'
           'Input [ezt]      'Line
            First = Word(Line,1)
            If WordPos(First,Outs) \= 0 & WordPos(Word(Line,2),Outputs) = 0 & WordPos(Word(Line,2),Files) = 0
               Then Outputs = Outputs' 'Word(Line,2)
            If WordPos(First,Inps) \= 0 & WordPos(Word(Line,2),Inputs) = 0 & WordPos(Word(Line,2),Files) = 0
               Then Inputs = Inputs' 'Word(Line,2)
           'Set Point .JOB'
           End
End
'Kedit 'Pgm'.cbl  (Nomsg'
If Words(Inputs) \= 0 | Words(Outputs) \= 0
   Then Do
        '.OPENS'
        Do I = 1 To Words(Inputs)
           File = Word(Inputs,I)
           Mode2 = 'INPUT'
           If WordPos(File,Outputs) \= 0
              Then Do
                   Mode2 = 'I-O'
                   Outputs = DelWord(Outputs,WordPos(File,Outputs))
                   End
           DDN = DDN(File)
           Void = Open(File,Mode2,SYSORT)
           If WordPos(File,Closes) = 0
              Then Closes = Closes' 'File
        End
        Do I = 1 To Words(Outputs)
           File = Word(Outputs,I)
           Void = Blank()
           If WordPos(File,Closes) = 0
              Then Closes = Closes' 'File
           Void = Open(File,'OUTPUT',SYSORT)
        End
        End
Void = Blank()
'.CLOSES'
Do I = 1 To Words(Closes)
   File = Word(Closes,I)
   If I = 1
      Then Void = Blank()
   Void = Close(File,SYSORT)
   If I = Words(Closes)
      Then Void = Blank()
End
'Set Point .PROCESSAR'
'Set Point .CLOSES Off'
'Set Point .OPENS Off'
'Kedit 'Pgm'.'Ftype' (Nomsg'
Return Jobs


Proc: Procedure
Pgm  = Arg(1)
Ftype= Arg(2)
Jobs = Arg(3)
'Extract/CurLine'
Proc = Word(Translate(Word(CurLine.3,1),' ','.'),1)
'Kedit 'Pgm'.cbl  (Nomsg'
*Void = NewSection(Section,'TRADUZIDA DE EASYTRIEVE ('Section' PROC)',,'*>'Jobs'<')
'.PROCESSAR'
'-~/*/'
'Extract/CurLine'
If Substr(CurLine.3,Length(CurLine.3),1) \= '.'
   Then 'CAppend.'
'.PROCESSAR'
'Input        'Proc'.'
Void = Blank()
'Set Point .PROCESSAR'
Do Forever
   'Kedit 'Pgm'.'Ftype' (Nomsg'
   'Next'
   If Rc \= 0
      Then Leave
   'Extract/CurLine'
   Line = CurLine.3
   First = First(CurLine.3)
   'Set Point .CurLine'
   'Kedit 'Pgm'.cbl (Nomsg'
   '.PROCESSAR'
   If Upper(Word(Line,1)) = 'END-PROC'
      Then DO
           'CAppend.'
           'Change/.. /./1'
           Void = Blank()
           End
      Else Do
           Go = 0
           If Words(Line) = 1
              Then Do
                   'Set Point .TestGO'
                   'Top'
                   '/ GO TO 'First' /|/ GOTO 'First' /|/ PERFORM 'First' /'
                   If Rc = 0 Then Go = 1
                   '.TestGO'
                   End
           If Go = 0 & Last(Line) \= 'PROC'
              Then 'Input [ezt]      'Line
              Else Do
                   'Set Point .Label'
                   'Next'
                   '-~/*'
                   'CAppend.'
                   '.Label'
                   'Input [   ]  'Space(First)'.'
                   End
           End
   'Set Point .PROCESSAR'
   If Upper(Word(Line,1)) = 'END-PROC'
      Then Do
           'Kedit 'Pgm'.'Ftype' (Nomsg'
           'Up'
           Leave
           End
      Else Do
           End
End
'Kedit 'Pgm'.'Ftype' (Nomsg'
Return 1

Report: Procedure
Pgm  = Word(Arg(1),1);Commands = DelWord(Arg(1),1,1)
Ftype= Arg(2)
Line = Arg(3)
Reports = Arg(4)
SortLen = Arg(5)
SYSORT = Arg(6)
Tally = Arg(6)
Report = Word(Line,2)
Aling = Length('REG-'Report)
Page = 'PAGE ZZZ.ZZ9'
Date = '99/99/9999'
'Set Point .Report'
'Kedit 'Pgm'.cbl  (Nomsg'
'Top'
If Reports = 0
   Then Do
        '/DATA DIVISION.'
        'Up'
        'Input            SELECT 'SYSORT' ASSIGN TO 'SYSORT
        If SYSORT = 'SYSORT'
           Then 'Input                   ORGANIZATION    IS SEQUENTIAL.'
           Else Do
                'Input                   ORGANIZATION IS INDEXED'
                'Input                   ACCESS MODE  IS DYNAMIC'
                'Input                   RECORD KEY   IS 'SYSORT'-KEY'
                'Input                                   WITH DUPLICATES'
                'Input                   FILE STATUS  IS FL-STA-'SYSORT'.'
                End
        Void = Blank()
        '/       WORKING-STORAGE SECTION./'
        '-/ PIC /|/ FILE SECTION./|/ VALUE /'
        Void = Blank()
        If SYSORT = 'SYSORT'
           Then 'Input        SD  SYSORT'
           Else 'Input        FD  'SYSORT
        'Input            RECORD CONTAINS 'SortLen' CHARACTERS'
        'Input            BLOCK CONTAINS 0 RECORDS.'
        Void = Blank()
        'Input        01  REG-'SYSORT'.'
        'Input            03 'SYSORT'-KEY.'
        'Input               06 'SYSORT'-REPORT             PIC  X(008).'
        'Input               06 'SYSORT'-STRING.'
        'Input                  09 'SYSORT'-SEQUENCE        PIC  9(017).'
        'Input                  09 FILLER                   PIC  X(238).'
        'Input            03 FILLER                         PIC  X(761).'
        'Set Point .SD'
        '/*        AREA DE VARIAVES AUXILIARES                             */'
        '-/ PIC /'
        Void = WS("03 BREAK-LEVEL                 PIC  9(003).")
        Void = WS("03 LEVEL                       PIC  9(003).")
        Void = WS("03 LINE-COUNT                  PIC  9(018).")
        Void = WS("   88 REPORT-CLOSED                           VALUE ZERO.")
        Void = WS("03 DETAIL-COUNT                PIC  9(018).")
        Void = WS("   88 FIRST-DETAIL                            VALUE 0.")
        Void = WS("03 PAGE-COUNT                  PIC  9(018).")
        If SYSORT \= 'SYSORT'
           Then Void = Open(SYSORT,'I-O',SYSORT,'START')
        '/PERFORM RT-PROCESSAR/'
        If SYSORT = 'SYSORT'
           Then Do
                'Replace            SORT 'SYSORT' ON ASCENDING KEY 'SYSORT'-KEY'
                'Input                          INPUT  PROCEDURE RT-PROCESSAR'
                'Input                          OUTPUT PROCEDURE RT-GERA-RELATORIOS'
                End
           Else Do
                'Input            PERFORM RT-GERA-RELATORIOS'
                Void = Blank()
                End
        Void = NewSection('GERA-RELATORIOS','ROTINA PARA GERACAO DE RELATORIO(S)')
        'Input            INITIALIZE WS-CONTROLE-RELATORIOS'
        If SYSORT \= 'SYSORT'
           Then Do
               'Input            INITIALIZE 'SYSORT'-KEY'
               'Input            START 'SYSORT' KEY NOT LESS 'SYSORT'-KEY'
                End
               'Input            PERFORM UNTIL 'FL(SYSORT,10,'EOF')
        If SYSORT = 'SYSORT'
           Then Do
                'Input                 RETURN 'SYSORT
                'Input                    NOT AT END'
                End
           Else Do
                'Input                 PERFORM RT-'Word(Read(SYSORT,SYSORT),1)
                'Input                 IF FL-'SYSORT'-OK'
                End
                'Input                    EVALUATE 'SYSORT'-REPORT'
                'Input                    END-EVALUATE'
        'Set Point .EndReports'
        If SYSORT = 'SYSORT'
           Then 'Input                 END-RETURN'
           Else 'Input                 END-IF'
                'Input            END-PERFORM.'
        Void = Blank()
        '/EXIT.'
        End
'.SD'
Void = Blank()
'Input        01  REG-'SYSORT'-'Report'.'
'Input            03 FILLER                         PIC  X(008).'
'Input            03 'SYSORT'-'Report'.'
'Set Point .SD'
'.EndReports'
'Up'
'Input                       WHEN "'Report'"'
'Input                             PERFORM RT-GERAR-RELATORIO-'Report
'.PROCESSAR'
'Input            MOVE HIGH-VALUES         TO 'SYSORT'-KEY'
"Input            MOVE '"Report"'"
'Zone 36 *'
'Change/ / TO 'SYSORT'-REPORT/1'
'Zone 1 *'
 If SYSORT = 'SYSORT'
    Then 'Input            RELEASE REG-'SYSORT
    Else 'Input            PERFORM RT-'Word(Write(SYSORT,SYSORT),1)
'Set Point .PROCESSAR'
Void = Blank()
'Kedit 'Pgm'.'Ftype' (Nomsg'
'.Report'
NoPrint = 0
NewPage = 0
Renum = 0
Sequence = ''
Control = ''
Sum = ''
Titles = ''
MaxHeadings = 1
Lines = ''
Headings = ''
LineUpp = Upper(Line)
MaxTitle = 0
MaxLine = 0
Proc = 0
ControlOptions = 'NEWPAGE RENUM NOPRINT'
System = 'TALLY'
If WordPos('PAGESIZE',LineUpp) = 0
   Then PageSize = 58
   Else PageSize = Word(LineUpp,WordPos('PAGESIZE',LineUpp)+1)
If WordPos('SPACE',LineUpp) = 0
   Then Space = 3
   Else Space = Word(LineUpp,WordPos('SPACE',LineUpp)+1)
If WordPos('LINESIZE',LineUpp) = 0
   Then LineSize = 132
   Else LineSize = Word(LineUpp,WordPos('LINESIZE',LineUpp)+1)
If WordPos('TALLYSIZE',TallyUpp) = 0
   Then TallySize = 10
   Else TallySize = Word(TallyUpp,WordPos('TALLYSIZE',LineUpp)+1)
If WordPos('NODATE',LineUpp) \= 0
   Then NoDate = 1
   Else NoDate = 0
If WordPos('NOPAGE',LineUpp) \= 0
   Then NoPage = 1
   Else NoPage = 0
If WordPos('SPREAD',LineUpp) \= 0
   Then NoSperead = 1
   Else NoSperead = 0
If WordPos('NOAJUST',LineUpp) \= 0
   Then NoAjust = 1
   Else NoAjust = 0
* Carrega especificaá‰es do reat¢rio
Do Forever
   'Next'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   LineUpp = Upper(CurLine.3)
   First = Word(LineUpp,1)
   If WordPos('PROC',LineUpp) = Words(LineUpp)
      Then Do
           Proc = 1
           Leave
           End
   If WordPos(First,Commands) \= 0
      Then Do
           'Up'
           'Set Point .Report'
           Leave
           End
   Data = Space(DelWord(LineUpp,1,1))
   If First = 'SEQUENCE'
      Then Sequence = Sequence' 'Data
   If First = 'CONTROL'
      Then Do I = 1 To Words(Data)
               Word = Word(Data,I)
               If WordPos(Word,ControlOptions) = 0
                  Then Control  = Control' 'Word
                  Else Control  = Control','Word
           End
   If First = 'SUM'
      Then Sun      = Sun' 'Data
   If First = 'HEADING'
      Then Headings = Headings' 'Word(Data,1)' 'Translate(Space(DelWord(Data,1,1)),'∞',' ')
   If First = 'TITLE'
      Then Do
           If DataType(Word(Data,1)) = 'NUM'
              Then Do
                   TitLine = Word(Data,1)
                   If TitLine > MaxTitle
                      Then MaxTitle = TitLine
                   Data = DelWord(Data,1,1)
                   End
           If Pos('+',Data) \= 0
              Then Do
                   Words = Data
                   Data = ''
                   Do I = 1 To Words(Words)
                      Word = Word(Words,I)
                      If Substr(Word,1,1) = '+'
                         Then Do
                              Len = Substr(Word,2)
                              If DataType(Len) \= 'NUM' | Len < 1
                                 Then Word = ''
                                 Else Word = "'"Copies('^',Len)"'"
                              End
                      Data = Data' 'Word
                   End
                   End
      *    Titles = Titles' 'Data
           Titles = Titles' 'Translate(Data,'^',' ')
           End

   If First = 'LINE'
      Then Do
           If DataType(Word(Data,1)) = 'NUM'
              Then Do
                    TitLine = Word(Data,1)
                    If TitLine > MaxLine
                       Then MaxLine = TitLine
                    End
           Lines = Lines' 'Translate(Data,'^',' ')
           End
End
* Especificaá‰es do reat¢rio carregadas
* Ajusta titulos
Titles=Just(Titles,MaxTitle)
Lines =Just(Lines,MaxLine)

Do I = 1 To Words(Titles)
   'Kedit 'Pgm'_esy$.reps (Nomsg'
   Clear = '^∞"'"'"
   '/Gera rela/'
   If Rc \= 0
      Then Do
          'Input                       * Gera relatorio:                               *'
          'Input                       *                                               *'
          End
      Else Do
           'Change/rio: /rios:/1'
           End
  'Bot'
   If I = 1
      Then 'Input                       * 'Substr(Report':',1,46)'*'
   If Word(Titles,I) \= 'spaces'
      Then 'Input                       * 'Substr(Space(Translate(Word(Titles,I),'   ',Clear)),1,46)'*'
   If I = Words(Titles)
      Then 'Input                       *                                               *'
   'FFile'
End

'Set Point .Report'
'Kedit 'Pgm'.cbl  (Nomsg'
'Top'
'/DATA DIVISION.'
'Up'
'Input 'Report
'Change/-//1 *'
'Extract/CurLine'
'Replace            SELECT 'Report' ASSIGN TO 'CurLine.3'.'
Void = Blank()
'/ SD  'SYSORT'/|/ FD  'SYSORT'/'
If Rc = 0
   Then '-/ PIC /|/ FILE SECTION./|/ VALUE /'
   Else Do
        '/       WORKING-STORAGE SECTION./'
        '-/ PIC /|/ FILE SECTION./|/ VALUE /'
        End
Void = Blank()
'Input        FD  'Report
'Input            LABEL RECORD IS OMITTED.'
Void = Blank()
'Input        01  REG-'Report
'Zone 45 *'
'Change/ / PIC  X('LPad(LineSize,3)')./1'
'Zone 1 *'
Void = Blank()
'.SD'
Filler = SortLen-8
SeqLen = 0
If Sequence = ''
   Then Do
        Filler = Filler - 17
        '-/ FILLER /'
        'Change/008/025/1'
        '.SD'
        End
   Else Do I = 1 To Words(Sequence)
           SeqLen = SeqLen + Sd(Report,Word(Sequence,I))
        End
Filler = Filler - SeqLen
If Sum = '' & Control \= ''
   Then ControlSum = 1
   Else ControlSum = 0
LineDups = Translate(Lines,' ','^')
Line = ''
MaxLen = 0
Do I = 1 To Words(LineDups)
   Field = Ren(Pgm,Word(LineDups,I))
   If WordPos(Field,Line) = 0 & Pos("'",Field) = 0 & Pos('"',Field) = 0 & DataType(Field) \= 'NUM'
      Then Do
           Line = Line' 'Field
           If Length(Field)+Length(Report)+1 > MaxLen & Field \= 'spaces'
              Then MaxLen = Length(Field)+Length(Report)+1
          End
End
Do I = 1 To Words(Line)
   Field = Word(Line,I)
   If WordPos(Field,Sequence) = 0 & WordPos(Field,System) = 0 & Field \= 'spaces' & DataType(Field) \= 'NUM' & Pos("'",Field) = 0 & Pos('"',Field) = 0
      Then Do
           Filler = Filler - Sd(Report,Field)
           If ControlSum = 1
              Then Do
                   'Extract/Curline'
                   If Pos('V9',CurLine.3) \= 0
                      Then Sum = Sum' 'Field
                   End
           End
End
If Filler > 1
   Then 'Input               06 FILLER                      PIC  X('LPad(Filler,3)').'
'Set Point .SD'

Void = NewSection('GERAR-RELATORIO-'Report,'GERACAO DO RELATORIO 'Report)
If Words(Control) \= 0
   Then Do
        Work = Control
        ControlParms = ''
        Control = ''
        Do I = 1 To Words(Work)
           Word = Word(Work,I)
           Word = Translate(Word,' ',',')
           Control = Control' 'Word(Word,1)
           Word = DelWord(Word,1,1)
           ControlParms = ControlParms' ,'Translate(Space(Word),',',' ')
        End
        If WordPos('FINAL',Control) = 0
           Then Do
                Control = 'FINAL 'Control
                ControlParms = ', 'ControlParms
                End
        'Set Point .Gerar'
        '-/ PERFORM RT-OBTER-AMBIENTE'
        'Next'
        'Extract/CurLine'
        If Pos('HIGH-VALUES',CurLine.3) \= 0
           Then '/ * /'
        'Up'
        M = 0
        Do I = 1 To Words(Control)
           Field = Word(Control,I)
           If Field \= 'FINAL'
              Then Do
                   M = M + 1
                   If M = 1 & Pos('HIGH-VALUES',CurLine.3) = 0
                      Then 'Input            MOVE HIGH-VALUES TO 'Substr(Limit(Report'-DETx-'Field,30),1,30)' (1:)'
                      Else 'Input                                'Substr(Limit(Report'-DETx-'Field,30),1,30)' (1:)'
                   End
        End
        '.Gerar'
        End

If Words(Control) \= 0
   Then Do
        level = '(BREAK-LEVEL)'
        'Input            EVALUATE TRUE'
        Do I = 1 To Words(Control)
           Field = Word(Control,I)
           If Field = 'FINAL'
              Then Do
                   FieldRep = Limit(Report'-'Field,30)
                   SortString = Substr(SYSORT'-STRING',1,Length(FieldRep))
                   If Pos('STRING',SortString) = 0
                      Then SortString = SYSORT'-STRING'
                   'Input                WHEN 'SortString' EQUAL   HIGH-VALUES'
                   End
              Else 'Input                WHEN 'Limit(Report'-'Field,30)' GREATER 'Limit(Report'-DETx-'Field,30)
           'Input                     MOVE 'Words(Control) - I + 1' TO BREAK-LEVEL'
        End
        'Input                WHEN OTHER'
        'Input                     MOVE ZERO TO BREAK-LEVEL'
        'Input            END-EVALUATE'
        Void = Blank()
        'Input            IF BREAK-LEVEL NOT EQUAL ZERO'
        'Input               PERFORM VARYING LEVEL'
        'Input                       FROM    1'
        'Input                       BY      1'
        'Input                       UNTIL LEVEL GREATER BREAK-LEVEL'
        'Set Point .BEFORE_BREAK'
        'Input                    EVALUATE LEVEL'
        Do I = 1 To Words(Control)
      *    Field = Substr(Word(Control,Words(Control) - I + 1),1,MaxLen)
           Field = Word(Control,Words(Control) - I + 1)
           Parms = Translate(Word(ControlParms,WordPos(Field,Control)),' ',',')
           'Input                        WHEN 'I
           If WordPos('RENUM',Parms) \= 0
              Then Do
                   'Input                             SET 'Report'-RENUM TO TRUE'
                   Renum = 1
                   End
           If WordPos('NEWPAGE',Parms) \= 0
              Then Do
                   'Input                             SET 'Report'-NEWPAGE TO TRUE'
                   NewPage = 1
                   End
           If WordPos('NOPRINT',Parms) \= 0
              Then Do
                   'Input                             SET 'Report'-NOPRINT TO TRUE'
                   NoPrint = 1
                   End
              Else Do
              If Field = 'FINAL'
                 Then "Input                             MOVE 'FINAL' TO "Report"-SUMx-CAPTION"
                 Else Do
                      'Input                             MOVE 'Report'-DETx-'Field
                      'Input                               TO 'Report'-SUM1-CAPTION'
                      End
                      End
        End
        'Input                    END-EVALUATE'
        Input =   'Input                   '
        Do Y = 1 To Words(Sum)
           SumField = Report'-SUM-'Word(Sum,Y)
           If Length(SumField) < MaxLen
              Then SumField = Substr(SumField,1,MaxLen)
           'Input                    MOVE    'SumField'(LEVEL) TO 'Report'-SUM-'Word(Sum,Y)'-ED'
           'Extract/CurLine'
           If Length(CurLine.3) > 72
              Then Do
                   'Del'
                   'Up'
                   'Input                    MOVE    'SumField'(LEVEL)'
                   'Input                      TO    'Report'-SUM-'Word(Sum,Y)'-ED'
                   End
        End
        If  NoPrint = 1
            Then Do
                 'Input                    IF   'Report'-PRINT'
                 'Set Point .PrintSum'
                 'Input                    END-IF'
                 'Input                    SET 'Report'-PRINT TO TRUE'
                 End
           Else 'Set Point .PrintSum'
        'Set Point .AFTER_BREAK'
        Do Y = 1 To Words(Sum)
           SumField = Report'-SUM-'Word(Sum,Y)
           If Length(SumField) < MaxLen
              Then SumField = Substr(SumField,1,MaxLen)
           If Y = 1 Then 'Input                    INITIALIZE 'SumField'(LEVEL)'
                    Else 'Input                               'SumField'(LEVEL)'
        End
        If  NewPage+Renum > 0
            Then Do
                 'Input                    IF   'Report'-RENUM'
                 'Input                    OR   'Report'-NEWPAGE'
                 'Input                         MOVE 'PageSize' TO LINE-COUNT'
                 If Renum = 1
                    Then Do
                         'Input                         IF   'Report'-RENUM'
                         'Input                              MOVE ZERO TO PAGE-COUNT'
                         'Input                         END-IF'
                         End
                 'Input                         SET 'Report'-NONEWPAGE TO TRUE'
                 'Input                    END-IF'
                 End
        'Input               END-PERFORM'
        'Input            END-IF'
        Void = Blank()
        End

'Input            IF   'SYSORT'-STRING EQUAL HIGH-VALUES'
'Input                 PERFORM RT-ENCERRAR-'Report
'Input                 CLOSE 'Report
'Input                 INITIALIZE WS-CONTROLE-RELATORIOS'
'Input                 EXIT SECTION'
"Input            END-IF"
* Void = Blank()
'Set Point .REPORT_INPUT'
'Erase 'Report'.Put'
Input = 'Input           '
Subscript = ''
If Words(Control) \= 0
   Then Do
        'Input            PERFORM VARYING LEVEL'
        'Input                    FROM 'Words(Control)' BY -1'
        'Input                    UNTIL LEVEL EQUAL ZERO'
         Input = 'Input                '
         Subscript = '(LEVEL)'
        End
If Tally = 1 & Words(Sum) \= 0
   Then Input'ADD 'Substr('1',1,MaxLen+Length(Report)+1)' TO TALLY'Subscript
Do Y = 1 To Words(Sum)
   Input'ADD 'Report'-'Substr(Word(Sum,Y),1,MaxLen)' TO 'Report'-SUM-'Word(Sum,Y)''Subscript
   'Extract/CurLine'
   If Length(CurLine.3) > 72
      Then Do
           'Dup'
           'Up'
           'Change/ TO $//1'
           'Next'
           'Change/'Report'$'Report'/'Report'/1'
           'Change/ADD/ TO/1 '
           End
End
If Words(Control) \= 0
   Then 'Input            END-PERFORM'
Void = Blank()
'Set Point .BEFORE_DETAIL'
Do I = 1 To Words(Lines)
   Line = Translate(Word(Lines,I),' ','^')
   Blank = 0
   Do  L = 1 To Words(Line)
       Field = Ren(Pgm,Word(Line,L))
       If Field = 'spaces'
          Then Blank = 1
          Else Do
               'Kedit 'Pgm'_esy$.tab (NoMsg'
               '/ 'Field' MASK /'
               If Rc = 0
                  Then Do
                       'Extract/CurLine'
                       Mask = Word(CurLine.3,Words(CurLine.3))
                       Mask = Space(Translate(Mask,"   ","'()"))
                       End
                  Else Mask = ''
               'QQuit'
               If DataType(Field) \= 'NUM' & Pos("'",Field) = 0 & Pos('"',Field) = 0
                  Then Do
                       If Field = 'TALLY'
                          Then 'Input            MOVE    'Substr('TALLY('Words(Control)')',1,MaxLen)' TO 'Report'-DET'I'-'Field
                          Else Do
                               FieldRep = Limit(Report'-'Field,30)
                               FieldDet = Limit(Report'-DET'I'-'Field,30)
                               If Mask \= ''
                                  Then FieldRep = FieldRep'(1:)'
                               If Length(FieldRep) < MaxLen
                                  Then FieldRep = Substr(FieldRep,1,MaxLen)
                               'Input            MOVE    'FieldRep' TO 'FieldDet
                               End
                       'Extract/CurLine'
                       PosTo = Pos(' TO ',CurLine.3)
                       If Length(CurLine.3) > 72
                          Then Do
                               'Change/ TO $//'
                               'Input              TO    'FieldDet
                               End
                       If Mask \= ''
                          Then Do
                               'Input            CALL    SB-EDIT'
                               If Length(CurLine.3) > 72
                                   Then Do
                                        'CAppend  USING 'FieldDet
                                        "Input                              Z'"Mask"'"
                                        End
                                   Else Do
                                        'Zone 'PosTo-3' *'
                                        'Change/ / USING 'FieldDet'/'
                                        'Input '
                                        'Zone 'PosTo' *'
                                        "Change/ /  Z'"Mask"'/1"
                                        'Zone 1 *'
                                        End
                               End
                       'Set Point .DetX'
                       Do Forever
                          '-/ 'Limit(Report'-DETx-'Field,30)' /'
                          If Rc = 0
                             Then 'Change/ 'Limit(Report'-DETx-'Field,30)' / 'Limit(Report'-DET'I'-'Field,30)' /1'
                             Else Leave
                       End
                       End
               End
      '.DetX'
   End
   If Blank = 1
      Then 'Input            MOVE 'Substr('SPACES',1,Aling)'  TO REG-'Report
      Else Do
           If MaxLen > 3
              Then 'Input            MOVE    'Substr(Report'-DET'I,1,MaxLen)' TO BUFFER'
              Else 'Input            MOVE    'Report'-DET'I' TO BUFFER'
           End
   'Input            PERFORM RT-IMPRIMIR-LINHA-'Report
End
Void = Blank()
'Input            ADD     'Substr(1,1,Length(Report'-')+MaxLen+Length(I))'TO DETAIL-COUNT.'
Void = Blank()
Void = NewSection('IMPRIMIR-LINHA-'Report,'ROTINA DE IMPRESSAO DE LINHA DO 'Report' E CABECALHO')
If Aling < 13
   Then Aling = 13
'Input            IF REPORT-CLOSED'
'Input               OPEN OUTPUT 'Report
'Input               MOVE 'Substr(PageSize+1,1,Aling)'    TO LINE-COUNT'
'Input            END-IF'
PosAfter = 0
Void = Blank()
'Input            IF  LINE-COUNT NOT LESS 'PageSize
'Input                PERFORM RT-IMPRIMIR-RODAPE-'Report
'Input                ADD   'Substr(1,1,Aling)'  TO PAGE-COUNT'
If NoPage = 0 & Words(Titles) \= 0
   Then 'Input                MOVE  'Substr('PAGE-COUNT',1,Aling)'  TO 'Report'-TIT1-PAGE'
'Set Point .Page'
WsLine = 0
Do I = 1 To Words(Titles)
   'Input                WRITE 'Substr('REG-'Report,1,Aling)'FROM 'Report'-TIT'I
    If I = 1 Then 'CAppend  AFTER PAGE'
             Else 'CAppend  AFTER 1'
    WsLine = WsLine + 1
End
Do I = 1 To Words(MaxHeadings)
   'Input                WRITE 'Substr('REG-'Report,1,Aling)'FROM 'Report'-TOP'I
    If I = 1 Then After = 2
             Else After = 1
    'CAppend  AFTER 'After
    WsLine = WsLine + After
    If I = Words(MaxHeadings)
       Then Do
            'Extract/CurLine'
            PosAfter = Pos(' AFTER',CurLine.3)
            'Dup 2'
            'Change/ FROM $//1'
            'Change/ WRITE / MOVE  'Substr('SPACES',1,Aling)'  TO /1'
            'Next'
            'Change/ FROM $//1'
            'Zone 'PosAfter' *'
            'Change/ / AFTER 1/1 '
            'Zone 1 *'
            WsLine = WsLine + 1
            End
End
If WsLine = 0
   Then WsLine = 1
'Input                MOVE  'Substr(WsLine,1,Aling)'  TO LINE-COUNT'
'Input                SET   'Substr('FIRST-DETAIL',1,Aling)'  TO TRUE'
'Input            END-IF.'
Void = Blank()
'Input            ADD   'Substr(1,1,Aling)'      TO LINE-COUNT'
'Set Point .BEFORE_LINE'
'Input            WRITE REG-'Report' FROM BUFFER'
If PosAfter = 0
   Then 'CAppend  AFTER 1'
   Else Do
        'Zone 'PosAfter' *'
        'Change/ / AFTER 1/1 '
        'Zone 1 *'
        End
Void = Blank()
'Set Point .AFTER_LINE'
Void = NewSection('IMPRIMIR-RODAPE-'Report,'ROTINA DE IMPRESSAO DO RODAPE DO 'Report)
'Input            IF  LINE-COUNT EQUAL 'PageSize+1
'Input                EXIT SECTION'
'Input            END-IF.'
Void = Blank()
'Set Point .ENDPAGE'
Void = NewSection('ENCERRAR-'Report,'ROTINA DE ENCERRAMENTO DO 'Report)
'Input            IF  REPORT-CLOSED'
'Input                EXIT SECTION'
'Input            END-IF.'
Void = Blank()
'Set Point .TERMINATION'
'/ EXIT./'
Do I = 1 To Words(Sum)
   Field = Word(Sum,I)
   '.Sums'
   If Rc \= 0
      Then Do
           'Top'
           '/ PAGE-COUNT /&/ PIC /'
           'Set Point .Sums'
           End
  'Top'
   '/ 'Field' /&/ PIC /'
  If Rc = 0
     Then Do
          'Extract/CurLine'
          Pic = Word(CurLine.3,WordPos('PIC',CurLine.3)+1)
          Pic = Word(Translate(Pic,' ','.'),1)
          End
      Else Pic = 'X(1)'
  If Pos('V',Pic) \= 0
     Then Do
          Dec = Substr(Pic,Pos('V',Pic)+1)
          If Pos('(',Dec) \= 0
             Then Dec = Word(Translate(Dec,'  ','()'),2)
             Else Dec = Length(Dec)
          End
     Else Dec = 0
  Pic = Substr(Pic,Pos('(',Pic))
  Pic = Translate(Pic,'  ','()')
  Len = Word(Pic,1)
  Do Forever
     If Len + Dec \< 18 Then Leave
     Len = Len + 1
  End
  New = 'S9('LPad(Len,3)')'
  If Dec \= 0
     Then New=New'V9('LPad(Dec,2)')'
  '.Sums'
  'Input            03 'Limit(Report'-SUM-'Field,30)
  'Zone 42 *'
  'Change/ / PIC 'New'/1 '
  'Zone 1 *'
  If Words(Control) \= 0
     Then Do
          'Change/        'Copies(' ',Length(Words(Control)))' PIC / OCCURS 'Words(Control)' PIC /1 1'
          If Rc \= 0
             Then 'Cappend  OCCURS 'Words(Control)
          If I = 1
             Then Do
                  'Set Point .Tally'
                  'Top'
                  '/ TALLY PIC /'
                  IF Rc = 0
                     Then Do
                          OC = Last()
                          If Words(Control) > OC
                             Then 'Change/ 'OC'./ 'Words(Control)'./1'
                          End
                  '.Tally'
                  End
          End
  'CAppend.'
  'Set Point .Sums'
End

If NoPrint = 1
   Then Do
        Void = Ws("03 "Report"-NOPRINT-FLAG PIC  9(001).")
        Void = Ws("   88 "Report"-PRINT          VALUE 0.")
        Void = Ws("   88 "Report"-NOPRINT        VALUE 1.")
        End

If NewPage+Renum > 0
   Then Do
        Void = Ws("03 "Report"-NEWPAGE-FLAG PIC  9(001).")
        Void = Ws("   88 "Report"-NONEWPAGE      VALUE 0.")
        If Renum = 1
           Then Do
                Void = Ws("   88 "Report"-NEWPAGE        VALUE 1 2.")
                Void = Ws("   88 "Report"-RENUM          VALUE 2.")
                End
           Else Void = Ws("   88 "Report"-NEWPAGE        VALUE 1.")
        End

* Constroi gabarito do relat¢rio
'Erase 'Pgm'_'Report'.cli'
'Erase 'Pgm'_'Report'.top'
'Kedit 'Pgm'_'Report'.cli (NoMsg'
* Define linhas de detalhes
'Add 'Words(Lines)
Do L = 1 To Words(Lines)
   Line = Translate(Word(Lines,L),' ','^')
   'Bot'
   'Input =('
   Pic = ''
   Heads = ''
   Do  C = 1 To Words(Line)
       Field = Ren(Pgm,Word(Line,C))
       Add = 0
       Col = 0
       If Field = 'COL' & DataType(Word(Line,C+1)) = 'NUM'
          Then Do
               C = C + 1
               Col = Word(Line,C)
               C = C + 1
               Field = Word(Line,C)
               End
       If Field = '+' | Field = '-'
          Then Do
               If DataType(Word(Line,C+1)) = 'NUM'
                  Then Do
                       C = C + 1
                       Field = Field''Word(Line,C)
                       End
                  Else Field = Field'1'
               End
       Do Forever
          If DataType(Field) \= 'NUM'
             Then Leave
          Add = Add + Field
          C = C + 1
          If C > Words(Line)
             Then Field = "'<error>'"
             Else Field = Word(Line,C)
       End
       If Field \= 'spaces' & DataType(Field) \= 'NUM'
          Then Do
               If Pos("'",Field) \= 0 | Pos('"',Field) \= 0
                  Then Do
                       Literal = Substr(Field,2,Length(Field)-2)
                       Field = 'filler-'c
                       End
                  Else Literal = ''
               Heads = Heads' 'Field
               'Kedit 'Pgm'_esy$.tab (NoMsg'
               '/ 'Field' MASK /'
               If Rc = 0
                  Then Do
                       'Extract/CurLine'
                       Mask = Word(CurLine.3,Words(CurLine.3))
                 *     Mask = Word(Translate(Mask,'  ,.Z','().,$'),1)
                       Mask = Space(Translate(Mask,"   ","'()"))
                       Mask = Copies('X',Length(Mask))
                       End
                  Else Mask = ''
               Heading  = Field
               '/ 'Field' HEADING /'
               If Rc = 0
                  Then Do
                       'Extract/CurLine'
                       Heading = Substr(CurLine.3,Pos('HEADING',CurLine.3)+8)
                       End
               If WordPos(Field,Headings) \= 0
                  Then Heading = Word(Headings,WordPos(Field,Headings)+1)
               Heading = Multiplo(Heading)
               'Input  'Limit(Report'-'Field,30)' AS 'Heading
               'FFile'
               If Words(Heading) > MaxHeadings
                  Then MaxHeadings = Words(Heading)
               If Literal = ''
                  Then Do
                       'Bot'
                       'Input 'Limit(Report'-DET'L'-'Field,30)
                       End
               If Literal \= '' | Mask \= ''
                  Then Do
                       If Literal \= ''
                          Then New = Literal
                          Else New = Mask
                       End
                  Else Do
                       If Field = 'TALLY'
                          Then New = Copies('Z',TallySize-1)'9'
                          Else New = Edit(Pgm,Field,Report)
                       End
               End
          Else Do
               If Field = 'spaces'
                  Then New = Field
               End
          ':'L
          If Space+Add > 0
             Then New = Copies('^',Space+Add)''New
             Else New = '˘'New
          If Col > 0
             Then Do
                  LenChange = Length(New)
                  OK = 0
                  Ini = 1
                  ColX = Col
                  Do Forever
                     If LenChange > 50
                        Then LenChange = 50
                     Change = Substr(New,Ini,LenChange)
                     ColX = Col + Ini - 1
                     'Zone 'ColX ColX+Length(Change)-1
                     'Change'Copies('?',LenChange)''Change'1'
                     'Zone 1 *'
                     OK = OK + LenChange
                     If OK = Length(New)
                        Then Leave
                     Ini = Ini + LenChange
                     LenChange = Length(New) - OK
                     If LenChange = 0 Then Leave
                  End
                  'Zone 1 'Col-1
                  'Change/ /^/1 *'
                  'Zone 1 *'
                  End
            Else 'CAppend 'New
          If C = Words(Line)
             Then Do
                  'Bot'
                  'Input )='
                  End
   End
   ':'L
   'Change/'Copies('^',Space)' //1'
   If Field \= 'spaces'
      Then Do
           If NoAjust = 0
              Then Do
                   'Set Margin 1 'LineSize' 1'
                   'Center'
                   End
              Else 'Shift Right 1 'Space
           End
   'Change/^/ /1 *'
   'Extract/CurLine'
   Pics = CurLine.3
   'Shift Right 1 1'
   'Change/ /=['Report'-DET'L']=/1 1'

* Define cabecalho dos detalhes

   If Words(Heads) \= 0
      Then Do
           'Kedit 'Pgm'_'Report'.top (NoMsg'
           If L = 1
              Then 'Del *'
              Else 'Bot'
           'Add 'MaxHeadings
           'Bot'
           'Input 'Pics
           'Change/˘?/ /1 *'
           'Extract/CurLine'
           Pics = CurLine.3
           'Set Point .H'
           Do H = 1 To Words(Heads)
              Field = Ren(Pgm,Word(Heads,H))
              Pic   = Word(Pics,H)
              '.H'
              'Extract/CurLine'
              Inicio = Pos(Pic,CurLine.3)
              'Kedit 'Pgm'_esy$.tab (NoMsg'
              '/ 'Limit(Report'-'Field,30)' AS /|/ 'Field' AS /'
              'Extract/CurLine'
              Headers = Translate(Substr(CurLine.3,Pos(' AS ',CurLine.3)+4),' ','∞')
              'QQuit'
              '.H'
              'Change'Pic''Copies(' ',Length(Pic))'1'
              Header = Words(Headers)
              IUp = Inicio
              Do Forever
                 Inicio = IUp;'Up'
                 If Rc \= 0 Then 'Input '
                 'Extract/CurLine'
                 HX = Word(Headers,Header)
                 If Inicio > 1
                    Then Do
                         If Substr(HX,1,7) = 'filler-'
                            Then HX = Copies(' ',Length(Pic))
                         'Zone 'Inicio' *'
                         If Pos('Z',Pic) \= 0 | Pos('.',Pic) \= 0
                            Then Do
                                 If Length(HX) < Length(Pic)
                                    Then Do
                                         Resto = Substr(CurLine.3,Inicio,Length(Pic)-Length(HX))
                                         HX = Resto''HX
                                         End
                                    Else HX = Substr(HX,1,Length(Pic))
                                 End
                            Else Do
                                 If Length(HX) > Length(Pic)
                                    Then Do
                                         Dif = Length(HX)-Length(Pic)
                                         Filler = Dif % 2
                                         If Filler > 0 & Filler*2 < Dif
                                            Then Filler = Filler + 1
                                         If CurLine.3 \= ''
                                            Then Do
                                                 If Inicio-Filler < Length(CurLine.3)+2
                                                    Then 'Zone 'Length(CurLine.3)+2' *'
                                                    Else 'Zone 'Inicio-Filler' *'
                                                 HX = HX''Copies(' ',Filler)
                                                 End
                                         End
                                 End
                         End
                 'Change/?/%/1 'Length(HX)
                 'Change'Copies('%',Length(HX))''HX'1'
                 'Change/^/ /1 *'
                 Inicio = Inicio + Length(HX)
                 Header = Header - 1
                 Void = Descola()
                 If Header < 1 Then Leave
              End
              'Zone 1 *'
           End
           '.H'
           'All Blank'
           If Rc = 0 Then 'Del *'
           'All'
           ':1'
           Top = 2
           'Extract/CurLine'
           If Pos('=[',CurLine.3) \= 1
              Then Do
                   'Up'
                   Top = 1
                   End
           Do Forever
              'Next'
              If Rc \= 0 Then Leave
              'Extract/CurLine'
              If Pos('=['Report'-TOP',CurLine.3) = 0
                 Then Do
                      'Shift Right 1 1'
                      'Change/ /=['Report'-TOP'Top']=/1 1'
                      End
              Top = Top + 1
           End
           'File'
           End
End
'Top'
'Get 'Pgm'_'Report'.top'
'Erase 'Pgm'_'Report'.top'
* Constroi linhas de totais tendo como base as linhas de detalhe
SumLines = ''
If Control \= ''
   Then Do
        MaxCaption = 5
        'Kedit 'Pgm'_'Report'.cli (NoMsg'
        'Erase 'Pgm'.sum'
        'Top'
        'All /'Report'-DET$]='
        If Rc = 0
           Then Do
                'Put * 'Pgm'.sum'
                'All'
                End
        'Top'
        '/=(/'
        'Next'
        'Put * 'Pgm'.sum'
        'Kedit 'Pgm'.sum (NoMsg'
        'Change/-DET$]/-SUM$]/*'
        'Change/Det/Sum/*'
        'Change/, //*'
        'Change/)=//*'
        LinesPic = ''
        Pics = ''
        Posits = ''
        Do L = 1 To Words(Lines)
           Line = Word(Lines,L)
           Line = Translate(Line,' ','^')
           Coluna = 0
           Do F = 1 To Words(Line)
              'Top'
              Field = Word(Line,F)
              If DataType(Field) \= 'NUM'
                 Then Do
                      '/'Limit(Report'-DET'L'-'Field,30)' /'
                      If Rc \=  0
                         Then Do
                              If Pos("'",Field) \= 0 | Pos('"',Field) \= 0
                                 Then Do
                                      Literal = Substr(Field,2,Length(Field)-2)
                                      'Change'Literal''Copies(' ',Length(Literal))'* *'
                                      End
                              End
                         Else Do
                              Coluna = Coluna + 1
                              'Change/-DET'L'-/-SUM'L'-/1'
                              'Change/Det'L'/Sum'L'/1'
                              'Extract/CurLine'
                              DataName = CurLine.3
                              'Change/-SUM'L'-$/-SUM'L'/1'
                              'Change/Sum'L'$/Sum'L'/1'
                              'Extract/CurLine'
                              If WordPos(Field,Sum) = 0
                                 Then 'Del'
                                 Else 'Replace 'DataName
                              '-/=['CurLine.3']'
                              'Extract/CurLine'
                              CurLine.3 = Translate(CurLine.3,' ','˘')
                              LenKey = Pos(']=',CurLine.3)+1
                              CurLine.3 = Substr(CurLine.3,Pos(']=',CurLine.3)+2)
                              Pic = Word(CurLine.3,Coluna)
                              Posit = Pos(Pic,CurLine.3)+LenKey
                              'Zone 'Posit Posit+Length(Pic)-1
                              'Change/?/^/1 *'
                              'Zone 1 *'
                              If WordPos(Field,Control) \= 0 & Length(Pic) > MaxCaption
                                 Then MaxCaption = Length(Pic)
                              If WordPos(Field,Sum) \= 0
                                 Then Do
                                      LinesPic = LinesPic' 'L
                                      Pics = Pics' 'Pic
                                      Posits = Posits' 'Posit
                                      End
                              End
                      End
           End
        End
        'Top'
        Do I = 1 To Words(Pics)
           ':'Word(LinesPic,I)
           'Extract/CurLine'
           Posit = Word(Posits,I)
           Pic = Word(Pics,I)
           'Zone 'Posit Posit+Length(Pic)-1
           'Change/'Copies('^',Length(Pic))'/'Pic'/1 1'
           'Zone 1 *'
        End
        'Top'
        'Change/^/~/* 1'
        'Change/^/ /* *'
        Do Forever
           '/= ~/|/=~/'
           If Rc \= 0 Then Leave
           'Extract/CurLine'
           CurLine.3 = Substr(CurLine.3,Pos(']=',CurLine.3)+2)
           If Words(CurLine.3) = 1 & Word(CurLine.3,1) = '~'
              Then Do
                   'Del'
                   'Up'
                   End
        End
        'Top'
        Captions = ''
        PosCaptions = ''
        Do Forever
           '/=[/'
           If Rc \= 0
              Then Leave
           'Extract/CurLine'
           SumLine = Substr(CurLine.3,1,Pos(']',CurLine.3)-1)
           SumLine = Substr(SumLine,Pos('-SUM',CurLine.3)+4)
           SumLines = SumLines' 'SumLine
           Try = MaxCaption - 1
           'Extract/CurLine'
           If WordPos('~',CurLine.3) \= Words(CurLine.3) & Words(CurLine.3) > 1
              Then 'Zone 'Pos(Word(CurLine.3,2),CurLine.3)' *'
           Do Forever
              'Change/~'Copies(' ',Try)'/x'Copies('x',Try)'/1'
              If Rc = 0
                 Then Do
                      'Change/xX/ X/1'
                      'Change/x/X/1 *'
                      Captions = Captions' 'Report'-SUM'SumLine'-CAPTION'
                      PosCaptions = PosCaptions' 'WordPos('~',CurLine.3)-1
                      Leave
                      End
              If Try = 1 Then Leave
              Try = Try - 1
           End
           'Zone 1 *'
           'Change/  ˘/  /1'
           'Change/~/ /1'
           Do Forever
              'Change/  Z./ ZZ./1 1'
              If Rc \= 0 Then Leave
           End
           Do Forever
              'Change/  ZZ./ ZZZ./1 1'
              If Rc \= 0 Then Leave
           End
           Do Forever
              'Change/   ZZZ./ Z.ZZZ./1 1'
              If Rc \= 0 Then Leave
           End
           * Retira exageros nas mascaras de ediáao
           Do Forever
              Bads = 0
              'Extract/CurLine'
              Words = Translate(CurLine.3,' ','˘')
              Do W = 1 To Words(Words)
                 Mask = Word(Words,W)
                 If Pos('Z.',Mask) \= 0 & Length(Mask) > 21
                    Then Do
                         If Length(DeEdit(Mask)) > 18
                            Then Do
                                 Mask = ' 'Substr(Mask,2)
                                 If Substr(Mask,2,1) = 1
                                    Then Mask = '  'Substr(Mask,3)
                                 End
                            Else Do
                                 Mask = ' 'Substr(Mask,1,Pos('.',Mask)-1)''Substr(Mask,Pos('.',Mask)+1)
                                 End
                         'Change/'Word(Words,W)'/'Mask'/1 *'
                         If Rc = 0
                            Then Bads = Bads + 1
                         End
              End
              If Bads = 0 Then Leave
           End
        End
        'Input =('
        'Set Point .TopCap'
        Do I = 1 To Words(Captions)
           '.TopCap'
           Find = Word(Captions,I)
           Find = Substr(Find,1,Pos('-CAP',Find))
           Words = Translate(Find,' ','-')
           FindX = ''
           Do F = 1 To Words(Words)
              FindX = FindX''Word(Words,F)
           End
           '/'Find'/|/'FindX'/'
           If Rc = 0
              Then Do
                   Next = Word(PosCaptions,I)-2
                   If Next > 0
                      Then 'Next 'Next
                      Else Do
                           If Next < 0
                              Then Do
                                   Next = Substr(Next,2)
                                   'Up' Next
                                   End
                           End
                   'Input 'Word(Captions,I)
                   End
        End
        'Bot'
        'Cappend)='
        'FFile'
        'Kedit 'Pgm'_'Report'.cli (NoMsg'
        'Bot'
        'Get 'Pgm'.sum'
        'Erase 'Pgm'.sum'
        End

'Kedit 'Pgm'_'Report'.cli (NoMsg'
'Top'
LenDate = 0
* Verificar variaveis nos titulos
Do I = 1 To Words(Titles)
   Title = Translate(Word(Titles,I),' ','^')
   TitleNames = ''
   Do T = 1 To Words(Title)
      String = Word(Title,T)
      If Pos("'",String) = 0 & Pos('"',String) = 0 & String \= 'spaces'
         Then Do
              Field = Ren(Pgm,String)
              TitleNames = TitleNames' 'Field
              If Field = 'TALLY'
                 Then String = Copies('Z',TallySize-1)'9'
                 Else Do
                      String = Edit(Pgm,Field,Report)
                      'Kedit 'Pgm'.cbl (NoMsg'
                      'Top'
                      '/ MOVE 'Limit(Report'-'Field,30)' TO '
                      If Rc = 0
                         Then Do
                              'Extract/CurLine'
                              PosTo = Pos(' TO ',CurLine.3)
                              'Input '
                              'Zone 'PosTo' *'
                              'Change/ /    'Report'-TIT'I'-'Field'/1'
                              'Zone 1 *'
                              End
                         Else Do
                              '.Page'
                              'Extract/CurLine'
                              'Input'Copies(' ',Pos(Word(CurLine.3,1),CurLine.3))'MOVE  'Field
                              'Zone 'Pos(' 'Word(CurLine.3,3),CurLine.3)' *'
                              'Change/ / TO 'Report'-TIT'I'-'Field'/1'
                              'Zone 1 *'
                              'Set Point .Page'
                              End
                      'Kedit 'Pgm'_'Report'.cli (NoMsg'
                    End
              End
         Else Do
              String = Word(Translate(String," ","'"),1)
              String = Word(Translate(String,' ','"'),1)
              End
      If T = 1
         Then 'Input 'String
         Else 'CAppend ' String
   End
   If NoAjust = 0
      Then 'Center'
   If I = 1
      Then Do
           If NoDate = 0
              Then Do
                   'Change'Copies(' ',Length(Date))''Date'1 1'
                   RcDate = Rc
                   If RcDate \= 0
                      Then Do
                           'Change'Copies(' ',Length(Date)-2)''Substr(Date,1,Length(Date)-1)'1 1'
                           LenDate = LenDate - 2
                           End
                      Else LenDate = Length(Date)
                   RcDate = Rc
                   End
              Else RcDate = 1
           If NoPage = 0
              Then Do
                   'Extract/CurLine'
                   Old = CurLine.3
                   Pos = LineSize - Length(Page) - 1
                   'Zone 'Pos' *'
                   'Change/  / 'Page'/1 1'
                   RcPage = Rc
                   PicPage = Word(Page,2)
                   Capage = Word(Page,1)
                   'Zone 1 *'
                   If RcPage = 0
                      Then Do Forever
                           'Extract/CurLine'
                           If Length(CurLine.3) \> LineSize
                              Then Leave
                           'Zone 'Pos' *'
                           RcPage = 1
                           'Replace 'Old
                           If Length(Capage) > 0 & Length(PicPage) < 5
                              Then Capage = Substr(Capage,1,Length(Capage)-1)
                              Else Do
                                   PicPage = Substr(PicPage,2)
                                   If Substr(PicPage,1,1) = '.'
                                      Then PicPage = Substr(PicPage,2)
                                   If Length(Capage) = 0
                                      Then Leave
                                   End
                           If Capage = 'PA' Then Capage = 'PG'
                           'Change/  / 'Space(Capage PicPage)'/1 1'
                           RcPage = Rc
                           'Zone 1 *'
                           End
                   End
           End
   'Shift Right 1 1'
   'Change/ /=['Report'-TIT'I']=/1 1'
   If RcDate = 0 & I = 1 & NoDate = 0
      Then 'Input 'Report'-TIT'I'-DATE'
   Do F = 1 To Words(TitleNames)
      'Input 'Limit(Report'-TIT'I'-'Word(TitleNames,F),30)
   End
   If NoPage = 0 & RcPage = 0 & I = 1
      Then 'Input 'Report'-TIT'I'-PAGE'
End
'All /=[/'
If Rc = 0
   Then Do
        'Top'
        'Put * 'Pgm'_'Report'.cli'
        'Del *'
        End
'All'
'Top'
'Change/=(//*'
'Change/)=//*'
'All Blank'
If Rc = 0
   Then 'Del *'
'All'
'Bot'
'Input)='
'Top'
'Input '
'Input=('
'Top'
'Put * 'Pgm'_'Report'.cli'
'QQuit'
'Kedit 'Pgm'_'Report'.cli (NoMsg'
'Top'
'/['Report'-TOP/'
If Rc = 0
   Then Do
        'Up'
        'Input '
        End
'/['Report'-DET/'
If Rc = 0
   Then Do
        'Up'
        'Input '
        End
'/['Report'-SUM/'
If Rc = 0
   Then Do
        'Up'
        'Input '
        End

NoTops = ''
Do Forever
   'Top'
   '/-DET$-spaces/'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   'Del'
   Det = Substr(CurLine.3,1,Pos('-spaces',CurLine.3)-1)
   Det = Substr(Det,Pos('-DET',CurLine.3)+4)
   NoTops = NoTops' 'Det
   '-/-DET'Det']'
   If Rc = 0 Then 'Del'
   '-/-TOP'Det']'
   If Rc = 0 Then 'Del'
End

NoTits = ''
Do Forever
   'Top'
   '/-TIT$]= spaces/'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   'Change/$//1'
   Tit = Substr(CurLine.3,1,Pos(']',CurLine.3)-1)
   Tit = Substr(Tit,Pos('-TIT',CurLine.3)+4)
   NoTits = NoTits' 'Tit
End

NoSums = ''
Do Forever
   'Top'
   '/-SUM$]= spaces/'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   'Change/$//1'
   Sum = Substr(CurLine.3,1,Pos(']',CurLine.3)-1)
   Sum = Substr(Sum,Pos('-SUM',CurLine.3)+4)
   NoSums = NoSums' 'Sum
End
'All /-DET$]= spaces/|/-DET$]=spaces/'
If Rc = 0
   Then Do
        'Change/$//*'
        'All'
        End
'Top'
'Change/∞/ /* *'
'Change/˘ / /* *'
'Change/ ˘/ /* *'

'FFile'
'DosQuiet clic 'Pgm'_'Report'> Nul: 2> Nul:'
'Kedit 'Pgm'.cbl (NoMsg'
'Top'
'/WS-CONTROLE-RELATORIOS./'
'-/ PIC /'
Void = Blank()
'Input       *----------------------------------------------------------------*'
'Input       *        LINHAS DE IMPRESSAO DO RELATORIO 'Report
'Zone 72 72'
'Change / /*/1 1'
'Zone 1 *'
'Input       *----------------------------------------------------------------*'
Void = Blank()
'Kedit 'Pgm'_'Report'.lay (NoMsg'
'/"/'
If Rc \= 0
   Then 'Change/"/'Simples'/* *'
'FFile'
'Get 'Pgm'_'Report'.lay'
'Erase 'Pgm'_'Report'.lay'
'-/-CLIC/'
'Change/LINHAS$/'Report'-LAYOUT./1 1'
Do Forever
   '/ TO 'Report'-SUM-$-ED/'
   If Rc \= 0
      Then Leave
   'Change/-ED//1 1'
   'Set Arbchar Off'
   'Extract/CurLine'
   'Zone 'Pos(' TO ',CurLine.3)' *'
   'Change/-SUM-/-SUM$-/1 1'
   'Set Arbchar On'
   'Zone 1 *'
   'Extract/CurLine'
   'Set Point .ED'
   Old = Word(CurLine.3,Words(CurLine.3))
   ED = Limit(Word(CurLine.3,Words(CurLine.3)),30)
   '-/01  WS-CONTROLE-RELATORIOS/'
   EDs = ''
   Do Forever
      '-/ 'ED' PIC /'
      If Rc \= 0 Then Leave
      'Extract/CurLine'
      EDs = Word(CurLine.3,2)' 'EDs
   End
   '.ED'
   Do I = 1 To Words(EDs)
      NewED = Word(EDs,I)
      If I = 1
        Then Do
             'Extract/CurLine'
             'Zone 'Pos(' TO ',CurLine.3)' *'
             'Change/'Old'/'NewED'/1'
             'Zone 1 *'
             'Extract/CurLine'
             Pos = Pos(NewED,CurLine.3)
             End
        Else 'Input'Copies(' ',Pos)''NewED
   End
End

'.PrintSum'
'Next'
'-/ MOVE /|/ IF /'
'Extract/CurLine'
If WordPos('IF',CurLine.3) = 0
   Then Input='Input'Copies(' ',Pos(Word(CurLine.3,1),CurLine.3))
   Else Input='Input'Copies(' ',Pos(Word(CurLine.3,1),CurLine.3))'     '
'.PrintSum'
Do I = 1 To Words(SumLines)
   SumLine = Word(SumLines,I)

   Input'MOVE  'Substr('SPACES',1,Length(Report'-SUM'SumLine))' TO REG-'Report
   Input'PERFORM RT-IMPRIMIR-LINHA-'Report

   Input'MOVE  'Report'-SUM'SumLine 'TO REG-'Report
   Input'PERFORM RT-IMPRIMIR-LINHA-'Report
End

If RcPage \= 0
   Then Do
        'Bot'
        '/ ADD 1 TO PAGE-COUNT/'
        If Rc = '0'
           Then 'Del 2'
        End

If LenDate \= 0 & NoDate = 0
   Then Do
        'Bot'
        '-/ OPEN OUTPUT 'Report' /'
        If Rc = 0
           Then Do
                'Set Point .OutPut'
                '/ TO /'
                'Extract/CurLine'
                PosTo = Pos(' TO ',CurLine.3)
                '.OutPut'
                'Dup'
                'Up'
                'Change/OPEN$/MOVE WS-DATADISP /1'
                'Zone 'PosTo' *'
                'Change/ / TO 'Report'-TIT1-DATE(1:'LenDate')/1'
                'Zone 1 *'
                If LenDate = 8
                   Then Do
                        'Dup'
                        'Change/MOVE$/MOVE /MOVE WS-ANO-DISP(3:2)'
                        'Change/ / TO 'Report'-TIT1-DATE(7:)/1'
                        'Zone 'PosTo' *'
                        'Zone 1 *'
                        End
                End
        End

Do I = 1 To Words(NoTops)
   NoTop = Word(NoTops,I)
   '.Page'
   '/WRITE REG-'Report' FROM 'Report'-TOP'NoTop' /'
   If Rc = 0 Then 'Change/-TOP'NoTop' /-TOP'NoTop+1' /'
End

Do I = 1 To Words(NoTits)
   NoTit = Word(NoTits,I)
   '.Page'
   '/WRITE REG-'Report' FROM 'Report'-TIT'NoTit' /'
   'Del'
   'Extract/CurLine'
   PosAfter = WordPos('AFTER',CurLine.3)
   If PosAfter \= 0
      Then Do
           After = Word(CurLine.3,PosAfter+1)
           'Change/AFTER 'After'/AFTER 'After+1'/1'
           End
End

Do I = 1 To Words(NoSums)
   NoSum = Word(NoSums,I)
   'Top'
   '/MOVE 'Report'-SUM'NoSum' TO REG-'Report'/'
   If Rc = 0
      Then Do
          'Up 2'
          'Del 4'
          End
End

'Top'
"/MOVE 'FINAL' TO "Report"-SUMx-CAPTION/"
If Captions = ''
   Then 'Change/MOVE $/CONTINUE/1'
   Else 'Change/ TO $ / TO 'Word(Captions,1)'/1'
*If Rc = 0
*   Then Do I = 1 To Words(Captions)
*        'Dup'
*        'Up'
*        'Change/ TO $ / TO 'Word(Captions,I)'/1'
*        'Next'
*        If I = Words(Captions)
*           Then Do
*                'Del'
*                If I > 1
*                   Then Do
*                        '-/ WHEN /'
*                        'Next 2'
*                        "Change/       /*******/'END-'"
*                        "Change/MOVE ?FINAL? TO /                /'END-'"
*                        End
*                End
*        End
'Kedit 'Pgm'.'Ftype' (Nomsg'
If Proc = 1
   Then Do
        'Up'
        'Erase 'Pgm'.PROCESSAR'
        Do Forever
           'Next'
           If Rc \= 0
              Then Leave
           'Extract/CurLine'
           If WordPos(Word(CurLine.3,1),Commands) \= 0
              Then Do
                   'Up'
                   Leave
                   End
           If Word(CurLine.3,Words(CurLine.3)) = 'PROC'
              Then Do
                   Proc = Word(Translate(Word(CurLine.3,1),' _','.-'),1)
                   'Erase 'Pgm'.PROCESSAR'
                   'Next'
                   "Change/ TALLY / TALLY("Words(Control)") / 'END-PROC'"
                   'Put /END-PROC/ 'Pgm'.PROCESSAR'
                   '/END-PROC'
                   'Kedit 'Pgm'.PROCESSAR (NoMsg'
                   'Shift Right 1 *'
                   'Change/ /[ezt]  /*'
                   'File'
                   'Kedit 'Pgm'.cbl (NoMsg'
                   '.'Proc
                   'Get 'Pgm'.PROCESSAR'
                   'Erase 'Pgm'.PROCESSAR'
                   Void = Blank()
                   'Set Point .'Proc
                   'Kedit 'Pgm'.'Ftype' (Nomsg'
                   End
        End
        'Set Point .Report'
        End

'Kedit 'Pgm'.cbl (NoMsg'
'.AFTER_LINE'
If Rc = 0
   Then Do
        'CAppend.'
        If NoPage = 0
           Then Do
                '.ENDPAGE'
                '-~/*'
                'Extract/CurLine'
                If Substr(CurLine.3,Length(CurLine.3),1) \= '.'
                   Then 'Cappend.'
                   Else Do
                        '-/ EXIT.'
                        'Next'
                        'Del /EXIT.'
                        'Del'
                        '-/PERFORM RT-IMPRIMIR-RODAPE-'Report' /'
                        If Rc = 0 Then 'Del'
                        End
                End
        'Next'
        '-/EXIT.'
        'Set Point .JOBS'
        End

'.TERMINATION'
If Rc = 0
   Then Do
        '-~/*'
        'Extract/CurLine'
        If Substr(CurLine.3,Length(CurLine.3),1) \= '.'
           Then 'CAppend.'
           Else Do
                '-/ EXIT.'
                'Next'
                'Del /EXIT.'
                'Del'
                '-/PERFORM RT-ENCERRAR-'Report' /'
                If Rc = 0 Then 'Del'
                End
        End

'Set Point .BEFORE_BREAK Off'
'Set Point .AFTER_BREAK Off'
'Set Point .REPORT_INPUT Off'
'Set Point .BEFORE_DETAIL Off'
'Set Point .AFTER_DETAIL Off'
'Set Point .BEFORE_LINE Off'
'Set Point .AFTER_LINE Off'
'Set Point .ENDPAGE Off'
'Set Point .TERMINATION Off'

'Kedit 'Pgm'.'Ftype' (Nomsg'

'.Report'
Return SeqLen' 'LineSize

Sd: Procedure
Report = Arg(1)
Field  = Arg(2)
If Field = 'FINAL' | Field = 'A' | DataType(Field) = 'NUM'
   Then Return 0
'Set Point .SD'
'Top'
If Field = 'D'
   Then '.LastField'
   Else ' /' Field '/&/ PIC /'
If Rc = 0
   Then Do
        'Extract/CurLine'
        If Field = 'D'
           Then Do
                Field = Word(CurLine.3,2)
                Field = '<'Substr(Field,Pos(Report,Field)+Length(Report'-'))
                End
        Pic = Word(CurLine.3,WordPos('PIC',CurLine.3)+1)
        Pic = Word(Translate(Pic,' ','.'),1)
        End
   Else Pic = 'X(1)'
'.SD'
'Input               06 'Limit(Report'-'Field,30)' PIC 'Pic'.'
If Pos('V',Pic) \= 0
   Then Do
        Dec = Substr(Pic,Pos('V',Pic)+1)
        If Pos('(',Dec) \= 0
           Then Dec = Word(Translate(Dec,'  ','()'),2)
           Else Dec = Length(Dec)
        End
   Else Dec = 0
Pic = Substr(Pic,Pos('(',Pic))
Pic = Translate(Pic,'  ','()')
Len = Word(Pic,1)
'Extract/CurLine'
If Pos('PIC',CurLine.3) < 46
   Then 'Change / PIC /'Copies(' ',46-Pos('PIC',CurLine.3))' PIC /1 1'
'Change/X(/ X(/1 1'
If Pos('<',Field) \= 0
   Then Do
        'Del'
        'Up'
        'Rec'
        'Next'
        End
'Set Point .LastField'
Return Len + Dec

Multiplo: Procedure
String = Arg(1)
If Substr(String,1,1) = '('
   Then Do
        String = Substr(String,2)
        String = Substr(String,1,Length(String)-1)
        End
String = Translate(String," ","'")
String = Translate(String,' ','"')
String = Space(String)
String = Word(Translate(String,'^',' '),1)
'Input 'String
'Change/^//1 *'
'Extract/CurLine'
'DEL'
Return CurLine.3

Tabin: Procedure
'Set Point .Tabin'
'Top'
'/*  TABELAS PARA INVERSAO BINARIA /'
If Rc = 0
   Then Do
        '.Tabin'
        Return 1
        End
'.EndSys'
'Up'
"Input       *"
'Set Point .EndSys'
"Input       *----------------------------------------------------------------*"
"Input       *  TABELAS PARA INVERSAO BINARIA                                 *"
"Input       *----------------------------------------------------------------*"
"Input        01  NORMAIS."
"Input            03 PIC X(16) VALUE X'00102030405060708090A0B0C0D0E0F0'."
"Input            03 PIC X(16) VALUE X'01112131415161718191A1B1C1D1E1F1'."
"Input            03 PIC X(16) VALUE X'02122232425262728292A2B2C2D2E2F2'."
"Input            03 PIC X(16) VALUE X'03132333435363738393A3B3C3D3E3F3'."
"Input            03 PIC X(16) VALUE X'04142434445464748494A4B4C4D4E4F4'."
"Input            03 PIC X(16) VALUE X'05152535455565758595A5B5C5D5E5F5'."
"Input            03 PIC X(16) VALUE X'06162636465666768696A6B6C6D6E6F6'."
"Input            03 PIC X(16) VALUE X'07172737475767778797A7B7C7D7E7F7'."
"Input            03 PIC X(16) VALUE X'08182838485868788898A8B8C8D8E8F8'."
"Input            03 PIC X(16) VALUE X'09192939495969798999A9B9C9D9E9F9'."
"Input            03 PIC X(16) VALUE X'0A1A2A3A4A5A6A7A8A9AAABACADAEAFA'."
"Input            03 PIC X(16) VALUE X'0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFB'."
"Input            03 PIC X(16) VALUE X'0C1C2C3C4C5C6C7C8C9CACBCCCDCECFC'."
"Input            03 PIC X(16) VALUE X'0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFD'."
"Input            03 PIC X(16) VALUE X'0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFE'."
"Input            03 PIC X(16) VALUE X'0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFFF'."
"Input       *"
"Input        01  INVERTIDOS."
"Input            03 PIC X(16) VALUE X'FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0'."
"Input            03 PIC X(16) VALUE X'EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0'."
"Input            03 PIC X(16) VALUE X'DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0'."
"Input            03 PIC X(16) VALUE X'CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0'."
"Input            03 PIC X(16) VALUE X'BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0'."
"Input            03 PIC X(16) VALUE X'AFAEADACABAAA9A8A7A6A5A4A3A2A1A0'."
"Input            03 PIC X(16) VALUE X'9F9E9D9C9B9A99989796959493929190'."
"Input            03 PIC X(16) VALUE X'8F8E8D8C8B8A89888786858483828180'."
"Input            03 PIC X(16) VALUE X'7F7E7D7C7B7A79787776757473727170'."
"Input            03 PIC X(16) VALUE X'6F6E6D6C6B6A69686766656463626160'."
"Input            03 PIC X(16) VALUE X'5F5E5D5C5B5A59585756555453525150'."
"Input            03 PIC X(16) VALUE X'4F4E4D4C4B4A49484746454443424140'."
"Input            03 PIC X(16) VALUE X'3F3E3D3C3B3A39383736353433323130'."
"Input            03 PIC X(16) VALUE X'2F2E2D2C2B2A29282726252423222120'."
"Input            03 PIC X(16) VALUE X'1F1E1D1C1B1A19181716151413121110'."
"Input            03 PIC X(16) VALUE X'0F0E0D0C0B0A09080706050403020100'."
'.Tabin'
Return 0

TabHex: Procedure
'Set Point .TabHex'
'Top'
'/*  TABELAS PARA EXIBICAO EM HEXADECIMAL /'
If Rc = 0
   Then Do
        '.TabHex'
        Return 1
        End
'.EndSys'
'Up'
"Input       *"
'Set Point .EndSys'
"Input       *----------------------------------------------------------------*"
"Input       *  TABELAS PARA EXIBICAO EM HEXADECIMAL                          *"
"Input       *----------------------------------------------------------------*"
"Input        01  HEXA-BIN".
"Input            03 HEXA-IND  PIC 9(008) VALUE ZERO."
"Input            03 HEXA-IND2 PIC 9(008) VALUE ZERO."
"Input            03 HEXA-CHAR PIC X(001)."
"Input            03 BIN-CHAR  REDEFINES HEXA-CHAR PIC 9(001) COMP-5."
"Input       *"
"Input        01  HEXA-DISPLAY."
"Input            03 PIC X(32) VALUE '00102030405060708090A0B0C0D0E0F0'."
"Input            03 PIC X(32) VALUE '01112131415161718191A1B1C1D1E1F1'."
"Input            03 PIC X(32) VALUE '02122232425262728292A2B2C2D2E2F2'."
"Input            03 PIC X(32) VALUE '03132333435363738393A3B3C3D3E3F3'."
"Input            03 PIC X(32) VALUE '04142434445464748494A4B4C4D4E4F4'."
"Input            03 PIC X(32) VALUE '05152535455565758595A5B5C5D5E5F5'."
"Input            03 PIC X(32) VALUE '06162636465666768696A6B6C6D6E6F6'."
"Input            03 PIC X(32) VALUE '07172737475767778797A7B7C7D7E7F7'."
"Input            03 PIC X(32) VALUE '08182838485868788898A8B8C8D8E8F8'."
"Input            03 PIC X(32) VALUE '09192939495969798999A9B9C9D9E9F9'."
"Input            03 PIC X(32) VALUE '0A1A2A3A4A5A6A7A8A9AAABACADAEAFA'."
"Input            03 PIC X(32) VALUE '0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFB'."
"Input            03 PIC X(32) VALUE '0C1C2C3C4C5C6C7C8C9CACBCCCDCECFC'."
"Input            03 PIC X(32) VALUE '0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFD'."
"Input            03 PIC X(32) VALUE '0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFE'."
"Input            03 PIC X(32) VALUE '0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFFF'."
"Input        01  REDEFINES HEXA-DISPLAY."
"Input            03  HEXA OCCURS 256 PIC X(002)."
'.TabHex'
Return 0

ClosPara: Procedure
'Set Point .Para'
'-~/*/'
'Extract/CurLine'
If Substr(CurLine.3,Length(CurLine.3),1) \= '.'
   Then 'CAppend.'
'.Para'
Return 0

EsyNext: Procedure
'Next'
Return Rc
If Rc \= 0 Then Return Rc
'Extract/Debugging'
If Debugging.1 = 'ON'
   Then 'Set Debugging Off'
'Set Point .EsyNext'
Do Forever
   'Extract/CurLine'
   If Word(CurLine.3,1) = 'SQL'
      Then Leave
   First = Word(CurLine.3,1)
   If Substr(First,1,1) \= '*'
      Then Leave
   'Next'
End
'.EsyNext'
If Debugging.1 = 'ON'
   Then 'Set Debugging ON'
Return 0

IndAlt: Procedure
Layout = Arg(1)
Rt  = Arg(2)
Msg = Arg(3)
Field = Arg(4)
Filler = 190
'Set Point .IndAlt'
'.Inddef'
If Rc \= 0
   Then Do
        '.EndSys'
        Pgm = Fname.1()
        'Input       *----------------------------------------------------------------*'
        'Input       *--> AREA MONTAR TABELAS                                         *'
        'Input       *----------------------------------------------------------------*'
        Void = Blank()
        'Input        01  WS-TABELA-FIXA.'
        Void = Blank()
        'Input        01  WS-TABELA-ALTER.'
        'Input         03 WS-TABELA-ALTERX   OCCURS 0 TIMES INDEXED BY INDALT.'
        'Set Point .Inddef'
        'Input            05 WS-ALTER-LAYOUT         PIC  X(004).'
        'Input            05 WS-ALTER-SECTION-PGM    PIC  X(032).'
        'Input            05 WS-ALTER-COD-MSG        PIC  X(004).'
        'Input            05 WS-ALTER-COMPL          PIC  X(100).'
        'Input            05 WS-ALTER-QSAM-MSG       PIC  X(190).'
        Void = Blank()
        'Input       *----------------------------------------------------------------*'
        "Input        COPY 'SC5LDIS1'."
        '.JOBS'
        'Set Point .JOBSAVE'
        Void = Blank()
        Void = NewSection('MONTA-MSG','ROTINA PARA MONTAR AS MENSAGENS DA TABELA DE ERRO')
        'Input            MOVE WS-TABELA-FIXA          TO WS-TABELA-ALTER'
        'Input            MOVE WS-ALTER-LAYOUT(INDALT)'
        'Input                                         TO SC5LDIS1-LAYOUT'
        'Input            MOVE WS-ALTER-SECTION-PGM(INDALT)'
        'Input                                         TO SC5LDIS1-SECTION-PGM'
        'Input            MOVE WS-ALTER-COD-MSG(INDALT)'
        'Input                                         TO SC5LDIS1-COD-MSG'
        'Input            MOVE WS-ALTER-QSAM-MSG(INDALT)'
        'Input                                         TO SC5LDIS1-QSAM-MSG'
        'Input                                            SC5LDIS1-AREAMSG'
        Void = Blank()
        "Input            MOVE '"Substr(Pgm"'",1,21)"  TO SC5LDIS1-PGM."
        Void = Blank()
        'Input            PERFORM RT-8888-FORMATAR-MSG-PAD.'
        Void = Blank()
        'Input            PERFORM RT-CANCELAR.'
        Void = Blank()
        '.JOBSAVE'
        'Set Point .JOBS'
        '.Inddef'
        End
'Extract/CurLine'
Ind = Word(CurLine.3,4)
'Change/ 'Ind' / 'Ind+1' /1 1'
Ind = Ind + 1
'-/01  WS-TABELA-ALTER./'
'Up'
'Input         03 WS-OCOR'Ind'-MENSAGEM.'
"Input            05 WS-OCOR"Ind"-LAYOUT PIC  X(004) VALUE '"Layout"'."
"Input            05 WS-OCOR"Ind"-SECTION-PGM PIC  X(032) VALUE"
"Input            '"Rt"'."
"Input            05 WS-OCOR"Ind"-COD-MSG PIC  X(004) VALUE '"LPad(Ind,4)"'."
"Input            05 WS-OCOR"Ind"-COMPL PIC  X(100) VALUE"
"Input            '"Msg"'."
'Set Point .Field'

If Layout = 'QSAM'
   Then Do
        File = Word(Msg,Words(Msg))
        "Input            05 WS-OCOR"Ind"-QSAM-MSG."
        "Input               07 WS-OCOR"Ind"-QSAM-STAT PIC  X(002) VALUE SPACES."
        "Input               07 WS-OCOR"Ind"-QSAM-DDN PIC  X(008) VALUE '"DDN(File)"'."
        'Set Point .Field'
        Filler = Filler - 10
        'Bot'
        '-/MOVE FL-STA-'File' TO WS-OCOR$-QSAM-STAT/'
        If Rc = 0
           Then Do
                '/*/'
                'Up'
                'Input                                            WS-OCOR'Ind'-QSAM-STAT'
                End
           Else Do
                'Zone 40 *'
                '-/ WS-OCOR$-QSAM-STAT/'
                Rx = Rc
                'Zone 1  *'
                If Rx \= 0
                   Then '-/ RT-MONTA-MSG                    SECTION.'
                "Input       *"
                'Input            MOVE FL-STA-'File
                'Zone 40 *'
                'Change/ / TO WS-OCOR'Ind'-QSAM-STAT/1'
                'Zone 1  *'
                End
        End

If Field \= ''
   Then Do
        '.Field'
        WS = Space(Translate(Field,' ','˚'))
        Caption = ' 'Field' = '
        "Input             07 FILLER PIC  X("LPad(Length(Caption),3)") VALUE '"Caption"'."
        'Set Point .GetPic'
        'Top'
        '/ PIC /&/ 'Field'˚ /|/ 'Field' /'
        If Rc = 0
           Then Do
                'Extract/CurLine'
                Pic = Word(CurLine.3,WordPos('PIC',CurLine.3)+1)
                If Substr(Pic,1,1) = 'X'
                   Then Type = 'X'
                   Else Type = '9'
                Pic = Substr(Pic,Pos('(',Pic))
                If Substr(Pic,Length(Pic),1) = '.'
                   Then Pic = Substr(Pic,1,Length(Pic)-1)
                If Pos('V',Pic) = 0
                   Then Dec = 0
                   Else Do
                        Dec = Substr(Dec,2)
                        If Pos('(',Dec) = 0
                           Then Dec = Length(Dec)
                           Else Dec = Word(Translate(Dec,'  ','()'),2)
                        End
                Pic   = Translate(Pic,'   ','(.)')
                Len   = Word(Pic,1)
                New = Type'('Lpad(Len,3)')'
                If Dec \= 0
                   Then Do
                        New=New',9('Lpad(Dec,2)')-'
                        Filler = Filler - Dec - 2
                        End
                '.GetPic'
                "Input             07  WS-OCOR"Ind"-"WS" PIC  "New" VALUE"
                End
           Else Do
                Len = Filler - Length(Caption)
                '.GetPic'
                "Input             07  WS-OCOR"Ind"-"WS" PIC  X("LPad(Len,3)") VALUE"
                Type = 'X'
                End
        If Type = 'X'
           Then 'CAppend  SPACE'
           ELse 'CAppend  ZERO'
        If Len > 1
           Then 'Cappend S'
        'CAppend.'
        Filler = Filler - Length(Caption) - Len
        'Set Point .Field'
        'Bot'
        '-/ RT-MONTA-MSG                    SECTION./|/ MOVE 'Field' /'
        'Extract/CurLine'
        If WordPos('MOVE',CurLine.3) = 0
           Then Do
                "Input       *"
                "Input            MOVE "Field
                'Zone 40 *'
                "Change/ / TO WS-OCOR"Ind"-"WS"/1"
                'Zone 1  *'
                End
           Else Do
                '/*/'
                'Up'
                "Input                                            WS-OCOR"Ind"-"WS
                End
        End

'.Field'
If Filler \= 0
   Then "Input            05 FILLER PIC  X("LPad(Filler,3)") VALUE SPACES."
"Input       *"
'.IndAlt'
Return Ind

WS: Procedure
'Set Point .WS'
'.EndVar'
'Up'
If Pos('X(',Arg(1)) \= 0
   Then Do
        '-/ COMP-3'
        'Up'
        End
'Input            'Arg(1)
'Change/ COMP-3//1'
'.WS'
Return 0

Sys: Procedure
'Set Point .WS'
'.EndSys'
'Up'
'Input            'Arg(1)
'.WS'
Return 0

SQL: Procedure
Pgm = Arg(1)
Ftype = Arg(2)
SQLs = Arg(3)+1
SQLine = 0
Declare = 0
PosExec = 1
Tables = ''
Do Forever
   'Extract/CurLine'
   LineUpp = Upper(CurLine.3)
   First = Word(LineUpp,1)
   'Kedit 'Pgm'.cbl (NoMsg'
   'Set Point .EXEC'
   SQLine = SQLine + 1
   If SQLs = 1 & SQLine = 1
      Then Do
           '.WSQL'
            'Up'
           'Input       *----------------------------------------------------------------*'
           'Input       *  DECLARACOES DE ACESSO SQL                                     *'
           'Input       *----------------------------------------------------------------*'
           Void = Blank()
           'Input            EXEC SQL'
           'Input                 INCLUDE SQLCA'
           'Input            END-EXEC'
           Void = Blank()
           'Set Point .WSQL'
           '.EXEC'
           End
   If SQLine = 1
      Then Do
           If Pos('DECLARE',CurLine.3) \= 0 | Pos('INCLUDE',CurLine.3) \= 0
              Then  Declare = 1
           End
    Cont = 0
    If  CurLine.3 \= ''
        Then Do
             If Substr(CurLine.3,Length(CurLine.3),1) = '+'
                Then Do
                     Cont = 1
                     CurLine.3 = Substr(CurLine.3,1,Length(CurLine.3)-1)
                     End
              If Declare = 1
                 Then '.WSQL'
                 Else '.EXEC'
             'Input              'CurLine.3
             PosFrom = WordPos('FROM',CurLine.3)
             If PosFrom \= 0
                Then Do
                     Table = Word(CurLine.3,PosFrom+1)
                     Table = Word(Translate(Table,'  ',');,'),1)
                     If Pos(Table,Tables) = 0
                        Then Tables = Tables' 'Table
                     End
             If SQLine = 1
                Then Do
                     'Change/  SQL/EXEC SQL/1'
                     'Extract/CurLine'
                     PosExec = Pos('EXEC',CurLine.3)
                     'Dup'
                     'Up'
                     'Change/SQL$/SQL/1 1'
                     'Next'
                     'Change/EXEC SQL /     /1'
                     End
             If Cont = 0
                Then Do
                    'Input'Copies(' ',PosExec)'END-EXEC'
                     If Declare = 1
                        Then  Void = Blank()
                     End
              If Declare = 1
                 Then 'Set Point .WSQL'
                 Else 'Set Point .EXEC'
             End
   '.EXEC'
   'Kedit 'Pgm'.'Ftype' (Nomsg'
   If Cont = 0
      Then Leave
   'Next'
   If Rc \= 0 Then Leave
End
Return Tables

Just: Procedure
String = Arg(1)
MaxTitle = Arg(2)
If MaxTitle \= 0
   Then Do
        'Kedit 'Pgm'_'Report'.wk (NoMsg'
        'Top'
        'Del *'
        'Add 'MaxTitle
        Do I = 1 To Words(String)
           Title = Word(String,I)
           Pos = Pos('^',Title)
           If Pos > 1
              Then Do
                   Num = Substr(Title,1,Pos-1)
                   If DataType(Num) = 'NUM'
                      Then Title = Substr(Title,Pos+1)
                      Else Num = I
                   End
              Else Num = I
        ':'Num
        'Cappend 'Title
        End
        'All Blank'
        If Rc = 0
           Then 'Change/ /spaces/*'
        'All'
        String = ''
        'Top'
        Do Forever
           'Next'
           If Rc \= 0 Then Leave
           'Extract/CurLine'
           'Set Point .Just'
           String = String' 'Posit(CurLine.3)
           '.Just'
        End
        'QQuit'
        End
Return String

Posit: Procedure
String = Arg(1)
If Pos('^POS^',String) \= 0
   Then Do
        Words = Translate(String,' ','^')
        Pos = ''
        MaxCol = 0
        Fields = ''
        Do I = 1 To Words(Words)
           Word = Word(Words,I)
           If Word \= 'POS' & Word \= 'COL' & Substr(Word,1,1) \= "+" & Substr(Word,1,1) \= "-"
              Then Do
                   If Pos = ''
                      Then Pos = '\\\^999'
                   Fields = Fields' 'Pos'^'Word
                   Pos = ''
                   End
              Else Do
                   If Substr(Word,1,1) = "+" | Substr(Word,1,1) = "-"
                      Then Do
                           Word = Substr(Word,1,1)''LPad(Substr(Word,2),2)
                           Next = '000'
                           End
                      Else Do
                           I = I + 1
                           Next = Word(Words,I)
                           If DataType(Next) = 'NUM'
                              Then Next = LPad(Next,3)
                           End
                   If Word = 'COL'
                      Then Word = 'col'
                   If Word = 'POS'
                      Then Do
                           If Next > MaxCol & DataType(Next) = 'NUM'
                              Then MaxCol = Next
                           End
                   Pos = Word'^'Next
                   End
        End
        'Kedit 'Pgm'_'Report'.pos (NoMsg'
        'Del *'
        'Add 'MaxCol
        Do I = 1 To Words(Fields)
           Field = Translate(Word(Fields,I),' ','^')
           P1 = Word(Field,1)
           P2 = Word(Field,2)
           P3 = Word(Field,3)
           If P1 = 'POS'
              Then ':'P2
              ELse Do
                   If P1 \= '\\\'
                      Then 'Cappend  'P1' '
                   End
           'Extract/CurLine'
           'CAppend  'P3
        End
        'All Blank'
        If Rc = 0 Then 'Del *'
        'All'
        String = ''
        'Top'
        Do Forever
           'Next'
           If Rc \= 0 Then Leave
           'Extract/CurLine'
           String = String' 'Space(CurLine.3)
           * BUG ??? delimitador
        End
        String = Translate(Space(String),'^',' ')
        'QQuit'
        End
Return String

Aspa: Procedure
'Extract/CurLine'
String = CurLine.3
If Pos('"',String) = 0 & Pos("'",String) = 0
   Then Do
        'Change/, / /1 *'
        Return 0
        End
'Extract/Debugging'
If Debugging.1 = 'ON'
   Then 'Set Debugging Off'
Aspa = ''
OldString = String
String = ''
Do I = 1 To Length(OldString)
   Char = Substr(OldString,I,1)
   If Aspa = '' & (Char = '"' | Char = "'")
      Then Aspa = Char
      Else Do
           If Aspa \= '' & Aspa = Char
              Then Aspa = ''
           End
   If (Char = ' ' | Char = '^') & Aspa \= ''
      Then String = String'∞'
      Else String = String''Char
End
'Replace 'String
'Change/, / /1 *'
If Debugging.1 = 'ON'
   Then 'Set Debugging ON'
Return 1

Edit: Procedure
Pgm = Arg(1)
Field = Ren(Pgm,Arg(2))
Report = Arg(3)

'Kedit 'Pgm'.cbl (NoMsg'
'Top'
'/ 'Field' /&/ PIC /'
If Rc = 0
   Then 'Extract/CurLine'
   Else CurLine.3 = '03 'Field'  PIC X(1).'
'Kedit 'Pgm'_'Report'.cli (NoMsg'
If Pos('X(',CurLine.3) \= 0
   Then Type = 'X'
   Else Type = '9'
Pic = Word(CurLine.3,WordPos('PIC',CurLine.3)+1)
Pic = Word(Translate(Pic,' ','.'),1)
If Pos('X(',Pic) \= 0
   Then Type = 'X'
   Else Type = '9'
If Pos('V',Pic) \= 0
   Then Do
        Type = 'Z'
        Dec = Substr(Pic,Pos('V',Pic)+1)
        'Zone 32 *'
        'Change/ / BLANK ZERO/1'
        'Zone 1 *'
        If Pos('(',Dec) \= 0
           Then Dec = Word(Translate(Dec,'  ','()'),2)
           Else Dec = Length(Dec)
        End
   Else Dec = 0
Pic = Substr(Pic,Pos('(',Pic))
Pic = Translate(Pic,'  ','()')
Len = Word(Pic,1)
ZZZ = '3 6 9 12 15 18'
If Type = 'X'
   Then New = Copies(Type,Len)
   Else Do
        New = '9'
        Do D = 1 To Len - 1
           If Dec \= 0
              Then Do
                   If WordPos(D,ZZZ) \= 0 & D < Len
                      Then New='Z.'New
                      Else New='Z'New
                   End
            Else New='9'New
        End
        If Dec \= 0
           Then New=New','Copies('9',Dec)
        End
If New = 'Z' Then New = '?'
If New = '9' Then New = '˚'
If New = 'X' Then New = '@'
Return New

Hora:
'Set Point .Hora'
'Top'
'/ DATE-WRITTEN./'
If Rc = 0
   Then Do
        'Extract/TIME'
        Hora = Substr(Time.4,1,8)
        'CAppend^'
        'Change/.^/ 'Hora'./1'
        End
   Else Hora = 0
'.Hora'
Return Hora

Descola: Procedure
'Extract/CurLine/Zone'
Z = Zone.1
If Z < 2 Then Return 0
If Substr(CurLine.3,Z-1,1) \= ' ' & Substr(CurLine.3,Z,1) \= ' '
   Then Do
        L = Z - 1
        Shift = 0
        Do Forever
           If L < 3
              Then Leave
           If Substr(CurLine.3,L-2,1) = ' ' & Substr(CurLine.3,L,1) = ' '
              Then Do
                   Shift = L-2
                   Leave
                   End
           L = L - 1
        End
        If Shift \= 0
           Then Do
                'Zone 'Shift '*'
                'Change/ //1'
                Z = Z-1
                End
        'Zone 'Z-1' *'
        'Change/?/? /1 1'
        'Zone 'Zone.1 Zone.2
        End
Return 0

Open: Procedure
File  = Arg(1)
Mode  = Arg(2)
SYSORT = Arg(3)
Opt = Arg(4)
OptClose = Arg(5)
Pos = 12
If File = 'NULL' Then Return 0
If Opt = 'START'
   Then '.START'
   Else Do
        'Extract/CurLine'
        If CurLine.3 \= '' & Word(CurLine.3,1) \= '*' & Substr(Curline.3,8,1) = ''
           Then Do
                Ifs = 'IF ELSE OR AND WHEN WHERE UNTIL'
                Pos = Pos(Word(CurLine.3,1),CurLine.3)
                If WordPos(Word(CurLine.3,1),Ifs) \= 0
                   Then Pos = Pos(Word(CurLine.3,2),CurLine.3)
                End
        End
Input = 'Input'Copies(' ',Pos)
DDN = DDN(File)
If DDN = 'CARD' | DDN = 'SYSIPT'
   Then Do
        Void = Blank()
        Input'OPEN 'Mode File
        Void = Blank()
        Return 0
        End
'Set Point .Open'
If Mode = 'I-O'
   Then Section = 'ABRIR-ATUALIZAR-'FIle
   Else If Mode = 'OUTPUT'
           Then Section = 'ABRIR-SAIDA-'File
           Else Section = 'ABRIR-ENTRADA-'File
Void = Blank()
Input'PERFORM RT-'Section
Void = Blank()
If Opt \= 'START'
   Then 'Set Point .Open'
'Top'
'/ RT-'Section 'SECTION./'
If Rc \= 0
   Then Do
        Void = NewSection(Section,'ABRIR O ARQUIVO 'File)
        'Input            OPEN 'Mode File
        If File = SYSORT & Mode = 'I-O'
           Then Do
                'Input            IF  'FL(File,00,'OK')
                'Input                CLOSE 'File
                'Input                DELETE FILE 'File
                'Input                OPEN I-O 'File
                'Input            END-IF'
                Void = Blank()
                End
        If DDN \= 'CARD' & DDN \= 'SYSIPT'
           Then Do
                'Input            IF  NOT 'FL(File,00,'OK')
                If Mode = 'I-O'
                   Then 'Input            AND NOT 'FL(File,05,'NEW')''
                'Input                SET INDALT TO 'IndAlt('QSAM',Section,'ERRO DE ABERTURA DO ARQUIVO 'File);IndAlt = Last()
                'Input                PERFORM RT-MONTA-MSG'
                'Input            END-IF'
                End
        Void = Blank()
        If Opt = 'START'
           Then Do
      *          'Set Point .START'
                If OptClose \= 'NOCLOSE'
                  Then Do
                       '.FINISH'
                       '/EXIT.'
                       '-/TRACOS'
                       Void = Blank()
                       Void = Close(File,SYSORT)
                       Void = Blank()
                       End
               '.Open'
               'Set .Open Off'
                End
        End
'.Open'
'Set .Open Off'
Return 1

ToProc: Procedure
Pgm   = Arg(1)
Ftype = Arg(2)
Line = Arg(3)
If Line \= 'END-PROC'
   Then Do
        'Kedit 'Pgm'.cbl (Nomsg'
        '.PROCESSAR'
        'Input [ezt]      'Line
        'Set Point .PROCESSAR'
        'Kedit 'Pgm'.'Ftype' (Nomsg'
        End
Return 0

NewSection: Procedure
Section = Arg(1)
Point = Arg(3)
Exit = Arg(4)
'Bot'
If Section = ''
   Then 'Input       ******************************************************************'
   Else 'Input       *----------------------------------------------------------------*'
'Input 'Arg(2)
'Center'
'Zone 7 7'
'Change/ /*/1'
'Zone 72 72'
'Change/ /*/1'
'Zone 1 *'
If Section = ''
   Then Do
        'Input       ******************************************************************'
        Return 1
        End
   Else 'Input       *----------------------------------------------------------------*'
'Input        RT-'Substr(Section,1,30)'           SECTION.'
'Input       *'
'Input       *'
'Input        RT-'Substr(Section'X.',1,30)'           EXIT.' Exit
'Up 2'
Return 0

FL: Procedure
File = Arg(1)
Code = Arg(2)
Txt = Arg(3)
'Set Point .FS'
'Top'
'/ FL-STA-'File' PIC  X(002)/'
If Rc \= 0
   Then Void = Sys("03 FL-STA-"File" PIC  X(002)   VALUE ZEROS.")
'/ FL-'File'-'Txt' /'
If Rc \= 0
   Then Do
        'Top'
        '/ FL-STA-'File' PIC  X(002)/'
        '~/ 88 /'
        'Up'
        "Input               88 FL-"File"-"Substr(Txt,1,30)" VALUE '"Code"'."
        End
'.FS'
Return 'FL-'File'-'Txt

ReadKey: Procedure
File = Arg(1)
SYSORT = Arg(2)
Key = Arg(3)
If Pos(File,Key) = 1
   Then Key = Substr(Key,Length(File)+2)
'Set Point .ReadKey'
'Top'
'/ SELECT 'File' /'
'/ SELECT /|/ DIVISION/|/ KEY $ 'Key' /'
'Extract/CurLine'
If WordPos(Key,CurLine.3) = 0
   Then Do
        'Top'
        '/ SELECT 'File' /'
        '/ KEY /'
        FileKey = Last()
        Void = Dynamic(File)
        '.ReadKey'
        'Dup'
        'Up'
        'Change/READ$/MOVE 'Key' TO 'FileKey'/1'
        If Rc = 0
           Then Do
                'Change/[ezt]/[new]/1 '
                'Next'
                End
           Else 'Delete'
        'Set Point .ReadKey'
        Key = FileKey
        End
'Top'
'/LER-'File'-'Key' SECTION./'
If Rc = 0
   Then Do
        '.ReadKey'
        Return 'LER-'File'-'Key
        End
'.ReadKey'
Void = NewSection('LER-'File'-'Key,'ROTINA PARA LEITURA DO ARQUIVO 'File' PELA CHAVE 'Key,Key)
'Input            READ 'File' INTO WS-ULT-LIDO-'File
'Extract/CurLine'
'Input'Copies(' ',Pos('INTO',CurLine.3))' KEY IS 'Key
Void = Blank()
'Input            IF  'FL(File,00,'OK')
'Input                ADD 1 TO WS-LIDOS-'File
                      Void = Exit(File,'LER-'File'-'Key)
'Input            ELSE'
'Input                IF  NOT 'FL(File,23,'NOTFOUND')
'Input                    SET INDALT TO 'IndAlt('QSAM','RT-LER-'File'-'Key,'ERRO DE LEITURA DO ARQUIVO 'File,Key);IndAlt = Last()
'Input                    PERFORM RT-MONTA-MSG'
"Input                END-IF"
"Input            END-IF."
Void = Blank()
'.ReadKey'
Return 'LER-'File'-'Key' 'Tot('LIDOS DE 'File,IndAlt)

ReadRel: Procedure
File = Arg(1)
SYSORT = Arg(2)
Key = Arg(3)
MKey = Key
If Key = ''
   Then Key = 'PROXIMO'
If Pos(File,Key) = 1
   Then Key = Substr(Key,Length(File)+2)
'Set Point .ReadRel'
'Top'
'/LER-'File'-'Key' SECTION./'
If Rc = 0
   Then Do
        '.ReadRel'
        Return 1
        End
'.ReadRel'
If Key = 'PROXIMO'
   Then Do
        Void = NewSection('LER-'File'-PROXIMO','ROTINA PARA LEITURA DO ARQUIVO 'File' REGISTRO SEGUINTE',Key)
        'Input            ADD 1 TO 'Key(File)
        End
   Else Void = NewSection('LER-'File'-'Key,'ROTINA PARA LEITURA DO ARQUIVO 'File' PELA CHAVE RELATIVA 'Key,Key)
'Input            READ 'File' INTO WS-ULT-LIDO-'File
Void = Blank()
'Input            IF  'FL(File,00,'OK')
'Input                ADD 1 TO WS-LIDOS-'File
Void = Exit(File,'LER-'File'-PROXIMO')
'Input            ELSE'
'Input                IF  NOT 'FL(File,23,'NOTFOUND')
'Input                AND NOT 'FL(File,10,'EOF')
'Input                    SET INDALT TO 'IndAlt('QSAM','RT-LER-'File'-'Key,'ERRO DE LEITURA DO ARQUIVO 'File,MKey);IndAlt = Last()
'Input                    PERFORM RT-MONTA-MSG'
"Input                END-IF"
"Input            END-IF."
Void = Blank()
'.ReadRel'
Return 'LER-'File'-'Key' 'Tot('LIDOS DE 'File,IndAlt)

Read: Procedure
File = Arg(1)
SYSORT = Arg(2)
Opt = Arg(3)
NP  = Arg(4)
DDN = DDN(File)
'Set Point .Read'
Section = 'LER-'File
If NP \= ''
   Then Section = Section'-'NP
'Top'
'/'Section' SECTION./'
If Rc = 0
   Then Do
        '.Read'
        Return Section
        End
'.Read'
If NP = ''
   Then Txt = 'ROTINA PARA LEITURA SEQUENCIAL DO ARQUIVO 'File
   Else Txt = 'ROTINA PARA LER O REGISTRO 'NP' DO ARQUIVO 'File
Void = NewSection(Section,Txt)
If DDN = 'CARD' | DDN = 'SYSIPT'
   Then Do
        IndAlt = 000
         Txt =  ' NAO HA CARTOES PARA LER '
        'Input            READ 'File
        'Input              AT END'
        'Input                 CLOSE 'File
        'Input                 SET 'FL(File,10,'EOF')' TO TRUE'
        'Input                 IF  WS-LIDOS-'File' EQUAL ZERO'
        "Input                     DISPLAY PGMID '000I  *"Copies("=",Length(Txt))"*'"
        "Input                     DISPLAY PGMID '000I  *"Txt"*'"
        "Input                     DISPLAY PGMID '000I  *"Copies("=",Length(Txt))"*'"
        "Input                 END-IF"
        'Input              NOT AT END'
        'Input                  SET 'FL(File,00,'OK')' TO TRUE'
        'Input                  ADD 1 TO WS-LIDOS-'File
         Void = Exit(File,'LER-'File)
        'Input            END-READ.'
        End
    Else Do
         If File = SYSORT
            Then 'Input            READ 'File' NEXT RECORD'
            Else Do
                 Org = Org(File)
                 If Org = 'RELATIVE'
                    Then Do
                         Access = Acc(File)
                         'Input            ADD 1 TO ' Key(File)
                         End
                 'Input            READ 'File
                 If NP = 'SEGUINTE'
                    Then 'CAppend  NEXT RECORD'
                 If NP = 'ANTERIOR'
                    Then 'CAppend  PREVIOUS RECORD'
                 If NP \= ''
                    Then 'Input                 INTO WS-ULT-LIDO-'File
                    Else 'CAppend  INTO WS-ULT-LIDO-'File
                 End
         Void = Blank()
         Txt =  ' ARQUIVO "'File'" VAZIO '
         'Input            IF  'FL(File,00,'OK')
         If Org(File) = 'INDEXED'
            Then 'Input            OR  'FL(File,02,'DUPALT')
         'Input                ADD 1 TO WS-LIDOS-'File
         If File \= SYSORT
            Then Void = Exit(File,'LER-'File)
         'Input            ELSE'
         'Input                IF  NOT 'FL(File,10,'EOF')
         'Input                    SET INDALT TO 'IndAlt('QSAM','RT-LER-'File,'ERRO DE LEITURA DO ARQUIVO 'File);IndAlt = Last()
         'Input                    PERFORM RT-MONTA-MSG'
         If NP = ''
            Then Do
                 'Input                ELSE'
                 If Opt = 'CLOSEATEND'
                    Then Do
                         'Input                    IF  'FL(File,10,'EOF')
                         Void = Close(File)
                         'Input                        SET 'FL(File,10,'EOF')' TO TRUE'
                         'Input                    END-IF'
                         End
                 'Input                    IF  'FL(File,10,'EOF')
                 'Input                    AND WS-LIDOS-'File' EQUAL ZERO'
                 "Input                        DISPLAY PGMID '"LPad(IndAlt,3)"I *"Copies("=",Length(Txt))"*'"
                 "Input                        DISPLAY PGMID '"LPad(IndAlt,3)"I *"Txt"*'"
                 "Input                        DISPLAY PGMID '"LPad(IndAlt,3)"I *"Copies("=",Length(Txt))"*'"
                 If  DDN \= File
                     Then "Input                        DISPLAY PGMID '"LPad(IndAlt,3)"I  DDN = "DDN"'"
                 "Input                    END-IF"
                 End
         "Input                END-IF"
         "Input            END-IF."
         End
Void = Blank()
'.Read'
Return Section Tot('LIDOS DE 'File,IndAlt)

Write: Procedure
File = Arg(1)
SYSORT = Arg(2)
LenBuffer = Arg(3)
'Set Point .Write'
'Top'
'/GRAVAR-'File' SECTION./'
If Rc = 0
   Then Do
        '.Write'
        Return 'GRAVAR-'File
        End
'.Write'
Void = NewSection('GRAVAR-'File,'ROTINA PARA GRAVACAO NO ARQUIVO 'File,Key(File))
If File \= SYSORT
   Then Void = Exit(File,'GRAVAR-'File,12)
If LenBuffer \= '' & LenBuffer \= 0
   Then Do
        Void = Sys("03 WS-BUFFER-"File" PIC  X("Lpad(LenBuffer,3)")   VALUE SPACE.")
        'Input            IF   REG-'File' EQUAL WS-BUFFER-'File
        'Input                 EXIT SECTION'
        'Input            ELSE'
        'Input                 MOVE REG-'File' TO WS-BUFFER-'File
        'Input            END-IF'
        End
'Input            WRITE REG-'File
Void = Blank()
        'Input            IF  'FL(File,00,'OK')
If Org(File) = 'INDEXED'
   Then 'Input            OR  'FL(File,02,'DUPALT')
        'Input                ADD 1 TO WS-GRAVADOS-'File
If File \= SYSORT
   Then 'Input                INITIALIZE REG-'File
        'Input            ELSE'
If Org(File) = 'INDEXED'
   Then Do
        'Input                IF   NOT 'FL(File,22,'DUPKEY')
        'Input                     SET INDALT TO 'IndAlt('QSAM','RT-GRAVAR-'File,'ERRO DE GRAVACAO NO ARQUIVO 'File,Key(File));IndAlt = Last()
        'Input                     PERFORM RT-MONTA-MSG'
        "Input                END-IF"
        End
   Else Do
        'Input                SET INDALT TO 'IndAlt('QSAM','RT-GRAVAR-'File,'ERRO DE GRAVACAO NO ARQUIVO 'File,Key(File));IndAlt = Last()
        'Input                PERFORM RT-MONTA-MSG'
        End
"Input            END-IF."
Void = Blank()
'.Write'
Return 'GRAVAR-'File' 'Tot('GRAVADOS EM 'File,IndAlt)

ReWrite: Procedure
File = Arg(1)
SYSORT = Arg(2)
'Set Point .ReWrite'
'Top'
'/REGRAVAR-'File' SECTION./'
If Rc = 0
   Then Do
        Return 'REGRAVAR-'File
        '.ReWrite'
        End
'.ReWrite'
Void = NewSection('REGRAVAR-'File,'ROTINA PARA REGRAVACAO NO ARQUIVO 'File)
'Input            WRITE REG-'File
Void = Blank()
        'Input            IF  'FL(File,00,'OK')
If Org(File) = 'INDEXED'
   Then 'Input            OR  'FL(File,02,'DUPALT')
        'Input                ADD 1 TO WS-REGRAVADOS-'File
         Void = Exit(File,'REGRAVAR-'File)
        'Input            ELSE'
If Org(File) = 'INDEXED'
   Then Do
        'Input                IF   NOT 'FL(File,22,'DUPKEY')
        'Input                     SET INDALT TO 'IndAlt('QSAM','RT-REGRAVAR-'File,'ERRO DE REGRAVACAO NO ARQUIVO 'File,Key(File));IndAlt = Last()
        'Input                     PERFORM RT-MONTA-MSG'
        "Input                END-IF"
        End
   Else Do
        'Input                SET INDALT TO 'IndAlt('QSAM','RT-GRAVAR-'File,'ERRO DE REGRAVACAO NO ARQUIVO 'File,Key(File));IndAlt = Last()
        'Input                PERFORM RT-MONTA-MSG'
        End
"Input            END-IF."
Void = Blank()
'.ReWrite'
Return 'REGRAVAR-'File' 'Tot('REGRAVADOS EM 'File,IndAlt)

Delete: Procedure
File = Arg(1)
SYSORT = Arg(2)
'Set Point .Delete'
'Top'
'/REMOVER-'File' SECTION./'
If Rc = 0
   Then Do
        '.Delete'
        Return 'REMOVER-'File
        End
'.Delete'
Void = NewSection('REMOVER-'File,'ROTINA PARA REMOVER REGISTRO DO ARQUIVO 'File)
'Input            DELETE 'File' RECORD'
Void = Blank()
'Input            IF  'FL(File,00,'OK')
'Input                ADD 1 TO WS-REMOVIDOS-'File
'Input                INITIALIZE REG-'File
'Input            ELSE'
'Input                IF  NOT 'FL(File,23,'NOTFOUND')
'Input                    SET INDALT TO 'IndAlt('QSAM','RT-GRAVAR-'File,'ERRO DE REGRAVACAO NO ARQUIVO 'File,Key(File));IndAlt = Last()
'Input                    PERFORM RT-MONTA-MSG'
"Input                END-IF"
"Input            END-IF."
Void = Blank()
'.Delete'
Return 'REMOVER-'File" "Tot('REMOVIDOS DE 'File,IndAlt)

Org: Procedure
File = Arg(1)
'Set Point .Org'
'Top'
'/ SELECT 'File' /'
'/ORGANIZATION/'
'Extract/CurLine'
'.Org'
Return Last(CurLine.3)

Acc: Procedure
File = Arg(1)
'Set Point .Acc'
'Top'
'/ SELECT 'File' /'
'/ ACCESS /|/. /'
'Extract/CurLine'
'.Acc'
Return Last(CurLine.3)

Key: Procedure
File = Arg(1)
'Set Point .QKey'
'Top'
'/ SELECT 'File' /'
'/ KEY /|/. /'
'Extract/CurLine'
If WordPos('KEY',CurLine.3) \= 0
   Then Do
        Key = Last()
        If Key = '='
           Then Do
                Key = ''
                Do Forever
                   'Next'
                   If Rc \= 0 Then Leave
                   'Extract/CurLine'
                   If WordPos('WITH',CurLine.3) \= 0 Then Leave
                   If WordPos('FILE',CurLine.3) \= 0 Then Leave
                   Key = Space(Key' 'Space(CurLIne.3))
                End
                End
           Else Do
                If Pos(File,Key) = 0
                   Then Key = File'-'Key
                End
        End
   Else Key = ''
'.QKey'
Return Key

'.CLose'
Return 0

Tot: Procedure
Acum = Word(Arg(1),1)
File = Word(Arg(1),Words(Arg(1)))
IndAlt  = Arg(2)
Opt = Arg(3)
'Set Point .Tot'
If Opt \= 'CLOSE'
   Then Do
        'Top'
        "/ 03 WS-"Acum"-"File" COMP-3/"
        If Rc = 0
           Then Do
                '.Tot'
                Return 1
                End
        End
If Opt \= 'CLOSE'
   Then Do
        '.CANCEL'
        '/ 'Acum' /|/ TRACOS/ |/ ULTIMO /'
        'Extract/CurLine'
        If WordPos(Acum,CurLine.3) = 0
           Then 'Up'
        End
'Input            MOVE    WS-'Acum'-'File
'Zone 59 *'
'Change/ / TO WS-DISPLAY/1 1'
'Zone 1 *'
"Input            DISPLAY PGMID '"LPad(IndAlt,3)"I- "Arg(1)":' WS-DISPLAY"
Do Forever
   'Extract/CurLine'
   If Pos('WS-DISPLAY',CurLine.3) \< 63
      Then Leave
   'Change/:/.:/1 1'
End
If Opt = 'CLOSE'
   Then Return 1
If Acum = 'LIDOS'
   Then Do
        LrecL = 132
        '.CANCEL'
        '/ CALL /'
        'Up'
        "Input            DISPLAY PGMID '"LPad(IndAlt,3)"I- ULTIMO LIDO DE "File":'"
        "Input                    WS-ULT-LIDO-"File
        Void = Sys("03 WS-ULT-LIDO-"File" PIC  X("Lpad(Lrecl(File),3)")   VALUE SPACE.")
        End
Void = Sys("03 WS-"Acum"-"File" COMP-3 PIC S9(017)   VALUE ZEROS." )
'.FINISH'
'/ 'Acum' /|/ TRACOS/'
'Extract/CurLine'
If WordPos(Acum,CurLine.3) = 0
   Then 'Up'
'Input            MOVE    WS-'Acum'-'File
'Zone 59 *'
'Change/ / TO WS-DISPLAY/1 1'
'Zone 1 *'
"Input            DISPLAY PGMID '"LPad(IndAlt,3)"I- "Arg(1)":' WS-DISPLAY"
Do Forever
   'Extract/CurLine'
   If Pos('WS-DISPLAY',CurLine.3) \< 63
      Then Leave
   'Change/:/.:/1 1'
End
'.Tot'
Return 'WS-'Acum'-'File

Last: Procedure
Line = Arg(1)
If Line = ''
   Then Do
        'Extract/CurLine'
        Line = Translate(CurLine.3,' ','.')
        End
   Else Line = Translate(Line,' ','.')
If Line = '' Then Return ''
Return Word(Line,Words(Line))

Print: Procedure
Pgm = Arg(1)
Report = Arg(2)
SYSORT = Arg(3)
'Set Point .Report'
'Top'
'/ RT-CARREGA-'Report' SECTION./'
If Rc \= 0
   Then Do
        Void = NewSection('CARREGA-'Report,'GRAVAR DADOS DA LINHA DO RELATORIO 'Report' NO 'SYSORT)
        'Set Point .Release'
        'Top'
        '/03 'SYSORT'-'Report'./'
        Fields = ''
        MaxLen = 20
        Do Forever
           'Next'
           If Rc \= 0 Then Leave
           'Extract/CurLine'
           If WordPos('PIC',CurLine.3) = 0 Then Leave
           Field = Substr(Word(CurLine.3,2),Length(Report)+2)
           Fields = Fields' 'Field
           If Length(Field) > MaxLen
              Then MaxLen = Length(Field)
        End
        '.Release'
        RepLit = "'"Report"'"
        If Length(RepLit) < MaxLen
           Then RepLit = Substr(RepLit,1,MaxLen)
        WriteSort = 'WS-GRAVADOS-'SYSORT
        If Length(WriteSort) < MaxLen
           Then WriteSort = Substr(WriteSort,1,MaxLen)
        'Input            ADD  'Substr(1,1,MaxLen)' TO WS-GRAVADOS-'SYSORT
        "Input            MOVE "RepLit" TO REG-"SYSORT
        'Zone 1 *'
        'Input            MOVE 'WriteSort' TO 'SYSORT'-SEQUENCE'
        Do I = 1 To Words(Fields)
           'Input            MOVE 'Substr(Word(Fields,I),1,MaxLen)' TO 'Report'-'Ren(Pgm,Word(Fields,I))
        End
        If SYSORT = 'SYSORT'
           Then 'Input            RELEASE REG-'SYSORT'.'
           Else 'Input            PERFORM RT-'Word(Write(SYSORT,SYSORT),1)
        Void = Blank()
        '/ EXIT./'
        End
'.Report'
Return 'RT-CARREGA-'Report

DDN: Procedure
File = Arg(1)
'Set Point .DDN'
'Top'
'/ SELECT 'File ASSIGN TO '/'
If Rc \= 0
   Then DDN = File
   Else DDN = Last()
'.DDN'
Return DDN

Ren: Procedure
'Set Point .Ren'
Pgm = Arg(1)
Field = Arg(2)
If Pos('˚',Field) = 0 Then Return Field
'Kedit 'Pgm'_esy$.ren (NoMsg'
'/ 'Field' /'
If Rc = 0
   Then Do
        'Extract/CurLine'
         Field = Word(CurLine.3,2)
         End
'QQuit'
'.Ren'
Return Field

Exit: Procedure
File = Arg(1)
Section = Arg(2)
Posit = Arg(3)
'Set Point .Exit'
'Kedit 'File'_esy$.subprog (NoMsg'
'/CALL / '
If Rc \= 0
   Then Do
        'QQuit'
        '.Exit'
        Return 1
        End
'Extract/CurLine'
SubProg = Word(Translate(Word(CurLine.3,2)," ","'"),1)
If Posit = ''
   Then Do
        'QQuit'
        '.Exit'
        'Extract/CurLine'
        Posit = Word(CurLine.3,1)
        Posit = Pos(Posit,CurLine.3)
        If Posit = 0
           Then Posit = 8
        'Kedit 'File'_esy$.subprog (NoMsg'
        End
'Shift Right 'Posit-1' *'
'Change/$*/      */*'
'Erase 'File'.tmp'
'Put * 'File'.tmp'
'QQuit'
'.Exit'
'Get 'File'.tmp'
'Erase 'File'.tmp'
'Set Point .Exit'
'-/ CALL /|/ @/'
'Extract/CurLine'
If Pos('@',CurLine.3) \= 0
   Then 'Change/@/'IndAlt('MSG1',Section,'A TENTATIVA DE CARREGAR SUBPROGRAMA "'SubProg'" FALHOU')'/1'
'.Exit'
Return 0

Close: Procedure
File = Arg(1)
DDN = DDN(File)
If  DDN = 'CARD' | DDN = 'SYSIPT'
    Then Return 1
SYSORT = Arg(2)
'Extract/CurLine'
If CurLine.3 \= '' & Word(CurLine.3,1) \= '*' & Substr(Curline.3,8,1) = ''
   Then Do
        Ifs = 'IF ELSE OR AND WHEN WHERE UNTIL'
        Pos = Pos(Word(CurLine.3,1),CurLine.3)
        If WordPos(Word(CurLine.3,1),Ifs) \= 0
           Then Pos = Pos(Word(CurLine.3,2),CurLine.3)
        End
   Else Do
        Pos = 12
        Void = Blank()
        End
Input = 'Input'Copies(' ',Pos)
If File = SYSORT
   Then Input'CLOSE 'File
   Else Do
        Input'PERFORM RT-FECHAR-'File
        'Set Point .Close'
        'Top'
        '/ RT-FECHAR-'File' SECTION./'
        If Rc \= 0
           Then Do
                Void = NewSection('FECHAR-'File,'FECHAR O ARQUIVO 'File)
                'Input            CLOSE 'File
                'Input            IF  NOT 'FL(File,00,'OK')
                'Input                SET INDALT TO 'IndAlt('QSAM','RT-FECHAR-'File,'ERRO AO FECHAR O ARQUIVO 'File);IndAlt = Last()
                'Input                PERFORM RT-MONTA-MSG'
                'Input            END-IF.'
                End
        '.Close'
        End
Return 0

Comment: Procedure
Pgm      = Arg(1)
DataName = Arg(2)
'Set Point .Comment'
Lines = 0
'Next'
Do Forever
   'Extract/CurLine'
   First = Word(CurLine.3,1)
   If Pos('*',First) \= 1
      Then Leave
   Pos = Pos('*',CurLine.3)
   If Pos < 7
      Then 'Change/*/'Copies(' ',7-Pos)'*/1'
   If Pos > 7
      Then 'Change/'Copies(' ',Pos-7)'/1'
   If Length(CurLine.3) > 1
      Then Do
           If Lines = 0
              Then Do
                   'Kedit 'Pgm'_esy$.comments (NoMsg'
                   'Bot'
                   'Input  'DataName
                   'Extract/Size'
                   'Erase 'Pgm'_'Size.1'_esy$.comments'
                   'FFile'
                   End
           'Put 1 'Pgm'_'Size.1'_esy$.comments'
           Lines = Lines + 1
           End
   'Del'
End
'.Comment'
Return 0

PosPic: Procedure
Pos = Arg(1)
'Extract/CurLine'
If Pos(' PIC ',CurLine.3) = 0
   Then Return 0
If WordPos('PIC ',CurLine.3) = 2
   Then Return 0
If Pos  = ''
   Then Pos = 45
Comp = ''
If WordPos('VALUE',CurLine.3) = 0
   Then Do
        Last = Last(CurLine.3)
        If Pos('COMP',Last)  = 1
           Then Do
                Comp = Last
               'Change/ 'Comp'/ /1'
                End
        End
Do Forever
   'Extract/CurLine'
   If Pos(' PIC ',CurLine.3) \< Pos-1
      Then Leave
 * If Pos('SPACES.',CurLine.3) \= 0 & Length(CurLine.3) \< 72
 *    Then Do
 *         'Change/ SPACES/ SPACE/1 1'
 *         'Extract/CurLine'
 *         End
 * If Pos('  VALUE ',CurLine.3) \= 0 & Length(CurLine.3) \< 72
 *    Then Do
 *         'Change/  VALUE / VALUE /1 1'
 *         'Extract/CurLine'
 *         End
 * If Length(CurLine.3) \< 72
 *    Then Leave
   'Change/ PIC /  PIC /1 1'
   If Rc \= 0 Then Leave
End

If Pos(' PIC ',CurLine.3) > Pos-1
   Then Do
        'Change/ PIC $//1'
        'Input'Copies(' ',Pos-1)''Substr(CurLine.3,Pos(' PIC',CurLine.3))
        End

*Do Forever
*   'Extract/CurLine'
*   If Pos(' PIC ',CurLine.3) \> Pos-1
*      Then Leave
*   If Pos(Word(CurLine.3,1),CurLine.3) < 9
*      Then Leave
*   'Change/  PIC / PIC /1 1'
*   If Rc \= 0
*      Then Do
*           'Change/ 0/ /1 1'
*           If Rc \= 0
*              Then 'Shift Left 1 1'
*           End
*
*End

If Comp \= ''
   Then Do
        'Change/. //1 1'
        If Rc = 0
           Then Ponto = '.'
           Else Ponto = ''
        'Zone 63 *'
        'Change/           / 'Comp''Ponto'/1'
        'Zone 1 *'
        End

'Extract/CurLine'
If Length(CurLine.3) > 72 & WordPos('VALUE',CurLine.3) \= 0
   Then Do
        'Change/ VALUE $/ VALUE /1'
        'Input'Copies(' ',Pos(First(CurLine.3),CurLine.3)+3)''Substr(CurLine.3,Pos(' VALUE',CurLine.3)+7)
        End

Return Pos(' PIC ',CurLine.3) - 1

DeEdit: Procedure
Olds = 'Z.,CRDB+-*'
News = '9      999'
Pic = Arg(1)
If Substr(Pic,1,1) = '-' | Substr(Pic,1,1) = '+'
   Then Pic = Substr(Pic,2)
If Substr(Pic,Length(Pic),1) = '-' | Substr(Pic,Length(Pic),1) = '+'
   Then Pic = Substr(Pic,1,Length(Pic)-1)
Old = Translate(Pic,News,Olds)
Pic = ''
Do I = 1 To Length(Old)
   Char = Substr(Old,I,1)
   If Char \= ''
      Then Pic = Pic''Char
End
Return Pic

CheckRemove: Procedure
Pgm = Arg(1)
File = Arg(2)
FT = Arg(3)
Pointer = Arg(4)
Edit = Pgm'_'File'_esy$.'Ft
'Kedit 'Edit' (NoMsg'
'Top'
'Change/!> redefines$//*'
'Bot'
* Verifica redefiniáoes fragmentadas remov°veis
Do Forever
   '-/ check-remove-/'
   If Rc \= 0
     Then Leave
   'Extract/CurLine'
   LVB = Word(CurLine.3,1)
   Check = Translate(Word(CurLine.3,2),' ','-')
   PositB = Word(Check,3)
   LenB = Word(Check,4)
   'Up'
   'Set Point .B'
   '-/ check-remove-/|/ 'LPad(LVB-1,2)' /'
   If Rc \= 0
      Then Leave
   'Extract/CurLine'
   If  Pos('check-remove',CurLine.3) \= 0
       Then Do
            LVA = Word(CurLine.3,1)
            Check = Translate(Word(CurLine.3,2),' ','-')
            PositA = Word(Check,3)
            LenA = Word(Check,4)
            'Up'
            'Set Point .A'
            If (PositA + LenA) = PositB
              Then Do
                   '.B'
                   'Del 2'
                   End
            End
       Else If WordPos('redefines',CurLine.3) \= 0
               Then Do
                    RedA = Next('redefines')
                    'Next'
                    LenA = Last()
                    'Next'
                    'Extract/Curline'
                    If WordPos('redefines',CurLine.3) \= 0
                       Then Do
                            RedB = Next('redefines',CurLine.3)
                            If RedA = RedB & LenA = LenB
                               Then 'Del 2'
                            End
                    End
End
* Completa tamanho da redefiniáao com filler
'Bot'
Do Forever
   '-/ REDEFINES /'
   If Rc \= 0 Then Leave
   'Set Point .Red'
   Red = Next('REDEFINES')
   '-/ 'Red' PIC /'
   If Rc = 0
      Then Do
           Filler = Last()
           '.Red'
           'Next'
           If Rc = 0
              Then Do
                   'Extract/CurLine'
                   Next = Word(CurLine.3,2)
                   'Kedit 'Pgm'_esy$.occurs (NoMsg'
                   '/ 'Next' OCCURS /'
                   If Rc = 0
                      Then Filler = Filler % Next('OCCURS')
                   'QQuit'
                   'Kedit 'Edit' (NoMsg'
                   End
           '.Red'
           LV = First()
           L = 0
           Do Forever
              'Next'
              If Rc \= 0 Then Leave
              If First() \> LV Then Leave
              Size = Last()
              If DataType(Size) = 'NUM'
                 Then Filler = Filler - Size
              L = L + 1
              If L = 1
                 Then Do
                     'Extract/CurLine'
                      Input='Input'Copies(' ',Pos(First(CurLine.3),CurLine.3))''First(CurLine.3)
                      End
           End
           If Filler \= 0
              Then Do
                   'Up'
                   Input' pic x('LPad(Filler,3)'). !> 'Filler
                   End
           '.Red'
           End
End
'Top'
Do Forever
   '/ pic x(-/'
   If Rc \= 0
      Then Leave
   Pic = Word(Translate(Next('PIC'),' ','x()'),1) * -1
   'Next 2'
   'Extract/CurLine'
   If Pos('check-remove',CurLine.3) \= 0 & Pic = Last()
      Then Do
           'Delete'
           'Up'
           'Extract/CurLine'
           RedefLine = CurLine.3
           'Delete'
           'Up'
           'Delete'
           'Up 2'
           'Input 'RedefLine
           End
End
'Top'
'Change/ pic x/ FILLER PIC  X/*'
'Change/redefines/REDEFINES/*'
'Change/ !>$//*'
Do Forever
   '/ check-remove-/'
   If Rc \= 0
      Then Leave
   'Extract/CurLine'
   'Change/'Word(CurLine.3,2)'/FILLER/1 1'
End

'FFile'
'Kedit 'Pgm'.cbl (NoMsg'
Pointer
'Get 'Edit
'Erase 'Edit
Return Pointer

First: Procedure
Line = Arg(1)
If Line = ''
   Then Do
        'Extract/CurLine'
        Line = Translate(CurLine.3,' ','.')
        End
   Else Line = Translate(Line,' ','.')
If Line = '' Then Return ''
Return Word(Line,1)

Next:
Word = Arg(1)
Line = Arg(2)
If Line = ''
   Then Do
        'Extract/CurLine'
        Line = Translate(CurLine.3,' ','.')
        End
   Else Line = Translate(Line,' ','.')
If Line = '' Then Return ''
Return Word(Line,WordPos(Upper(Arg(1)),Upper(Line))+1)

Logics: Procedure
'Change/ EQ / EQUAL /1 *'
'Change/ = / EQUAL /1 *'
'Change/ NE / NOT EQUAL /1 *'
'Change/ -= / NOT EQUAL /1 *'
'Change/ LT / LESS /1 *'
'Change/ LS / LESS /1 *'
'Change/ < / LESS /1 *'
'Change/ LE / NOT GREATER /1 *'
'Change/ <= / NOT GREATER /1 *'
'Change/ GT / GREATER /1 *'
'Change/ >  / GREATER /1 *'
'Change/ GE / NOT LESS /1 *'
'Change/ >= / NOT LESS /1 *'
Return 0

Start: Procedure
Simbols   = '=     -=        <     <=        >     >='
Words     = 'EQ    NE        LS    LE        GT    GE'
Portugues = 'IGUAL DIFERENTE MENOR NAO-MAIOR MAIOR NAO-MENOR'
File  = Arg(1)
Logic = Arg(2)
Key   = Arg(3)
If WordPos(Logic,Simbols) \= 0
   Then Logic = Word(Words,WordPos(Logic,Simbols))
Portugues = Word(Portugues,WordPos(Logic,Words))
If Pos(File,Key) = 1
   Then Key = Substr(Key,Length(File)+2)
'Set Point .StartFile'
'Top'
'/ SELECT 'File' /'
'/ SELECT /|/ DIVISION/|/ KEY $ 'Key' /'
'Extract/CurLine'
If WordPos(Key,CurLine.3) = 0
   Then Do
        'Top'
        '/ SELECT 'File' /'
        '/ KEY /'
        FileKey = Last()
        Void = Dynamic(File)
        '.StartFile'
        'Dup'
        'Up'
        'Change/POINT$/MOVE 'Key' TO 'FileKey'/1'
        If Rc = 0
           Then Do
                'Change/[ezt]/[new]/1 '
                'Next'
                End
           Else 'Delete'
        'Set Point .StartFile'
        Key = FileKey
        End
Section = 'INICIAR-'File'-'Portugues'-'Key
If Length(Section) > 27
   Then Do
        'Kedit 'Fname.1()'_esy$.starts'
        '/ 'Section' /'
         If Rc = 0
            Then Do
                 Section = Last()
                 'QQuit'
                 End
            Else Do
                 'Bot'
                 'Next'
                 'Input  'Section
                 'Extract/Size'
                 Section = Limit('INICIAR-'LPad(Size.1,3)'-'File,26)
                 'CAppend  'Section
                 'File'
                 End
                 End
'Top'
'/ RT-'Section' SECTION./'
If Rc = 0
   Then Do
        '.StartFile'
        Return Section
        End
'.StartFile'
*Void = NewSection(Section,'PONTEIRAR O ARQUIVO 'File' PELA CHAVE 'Word(Simbols,WordPos(Logic,Words)) Key,Key)
Void = NewSection(Section,'PONTEIRAR O ARQUIVO 'File' PELA CHAVE 'Translate(Portugues,' ','-') 'QUE' Key,Key)
'Input            START 'File' KEY 'Logic Key
Void = Logics()
Void = Blank()
'Input            IF (NOT 'FL(File,00,'OK')')'
'Input            AND(NOT 'FL(File,23,'NOTFOUND')')'
'Input                SET INDALT TO 'IndAlt('QSAM','RT-'Section,'ERRO DE START DO ARQUIVO 'File,Key);IndAlt = Last()
'Input                PERFORM RT-MONTA-MSG'
"Input            END-IF."
Void = Blank()
'.StartFile'
Return Section

Limit: Procedure
DataName = Arg(1)
Max = Arg(2)
If DataType(Max) \= 'NUM'
   Then Max = 30
If Length(DataName) > Max
   Then Do
        If Pos('-',DataName) \= 0
           Then Do
                Words = Translate(DataName,' ','-')
                NewName = ''
                Do I = 1 To Words(Words)
                   Word = Word(Words,I)
                   Word = Substr(Word,1,1)''Lower(Substr(Word,2))
                   NewName = NewName''Word
                End
                NewName = Substr(NewName,1,Max)
                End
           Else NewName = Substr(Lower(DataName),1,Max)
        DataName = Space(NewName)
        End
Return DataName

Dynamic: Procedure
File = Arg(1)
'Set Point .Dynamic'
'Top'
'/ SELECT 'File' /'
'/ ACCESS MODE /|/ STATUS /'
If Last() = 'SEQUENTIAL'
   Then Do
        'Change/SEQUENTIAL/DYNAMIC/1 1'
        '/ READ 'File' INTO /'
        If Rc = 0
           Then Do
                'Change/ INTO$/ NEXT RECORD/1'
                'Input                 INTO WS-ULT-LIDO-'File
                End
        End

'.Dynamic'
Return 0

Prep: Procedure
* Prepara o fonte para convers∆o
'Zone 73 *'
'Change/$//*'
'Zone 1 *'
'Set ArbChar Off'
'Change/#/˚/* *'
'Change/@/¸/* *'
'Change/?/˝/* *'
'Change/$//* *'
'Set ArbChar On'
* Esconde Linhas em branco de coment†rios e flagradas
'All Blank'
If Rc = 0 Then 'Change/ /*/*'
'All'
'Top'
Do Forever
   '/*/'
   If Rc \= 0 Then Leave
   'Extract/CurLIne'
   First = Word(CurLine.3,1)
   If Pos('*',First) = 1
      Then 'Change/*/ˇ/1'
End
'Less /ˇ/'

* Torna literais compostas em uma s¢ palavras
Dupla = '"'
'Top'
Do Forever
   "/'/|/'Dupla'/"
   If Rc \= 0 Then Leave
   Void = Aspa()
End

* Monta continuaá‰es em uma s¢ linha
'Top'
'Change/, / /* *'
Do Forever
   '/ + /|/ - /|/. /|/ ./'
   If Rc \= 0 Then Leave
   'Extract/CurLine'
   PosPonto = Pos(' .',CurLine.3)
   If PosPonto = 0
      Then PosPonto = Pos(' .',CurLine.3)
   If PosPonto = 0 & Substr(CurLine.3,1,1) = '.'
      Then PosPonto = 1
   Cont = Substr(CurLine.3,Length(CurLine.3),1)
   If Cont = '-' | Cont = '+' | PosPonto \= 0 & WordPos('PROC',CurLine.3) = 0
      Then Do
           If PosPonto \= 0
              Then Do
                   If PosPonto < Length(CurLine.3)
                      Then Do
                           'Replace 'Substr(CurLine.3,1,PosPonto-1)
                           'Input 'Substr(CurLine.3,PosPonto+2)
                           'Up'
                           'Extract/CurLine'
                           End
                      Else If Substr(CurLine.3,Length(CurLine.3),1) = '.'
                              Then Do
                                   CurLine.3 = Substr(CurLine.3,1,Length(CurLine.3)-1)
                                   'Replace 'CurLine.3
                                   End
                   End
              Else Do
                   'Next'
                   If Rc \= 0 Then Leave
                   'Extract/CurLine'
                   'Del'
                   'Up'
                   'CAppend'
                   Cappend = CurLine.3
                   If Cont = '+'
                      Then Cappend = Substr(Cappend,Pos(Word(Cappend,1),Cappend))
                   'CAppend 'Cappend
                   'Change/'Cont'//1 1'
                   End
           'Up'
           End
End

* Revela os coment†rios
'All'
'Top'
'Change/ˇ/*/*'

'Top'
Return 0
LrecL: Procedure
File = Arg(1)
'Set Point .LRECL'
LRecL = 0
'Top'
'/ FD 'File' /|/ SD 'File' /'
If Rc = 0
   Then Do
        '/ CHARACTERS /|/ FD /|/ SD /|/ WORKING-'
        'Extract/CurLine'
        If WordPos('CHARACTERS',CurLine.3) \= 0
           Then Lrecl = Word(CurLine.3,WordPos('CHARACTERS',CurLine.3)-1)
        End
'.LRECL'
Return LrecL
